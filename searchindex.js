Search.setIndex({"docnames": ["api/basic", "api/default_geom", "api/generated/sisl.Atom", "api/generated/sisl.AtomicOrbital", "api/generated/sisl.Atoms", "api/generated/sisl.GTOrbital", "api/generated/sisl.Geometry", "api/generated/sisl.Grid", "api/generated/sisl.HydrogenicOrbital", "api/generated/sisl.Orbital", "api/generated/sisl.PeriodicTable", "api/generated/sisl.Quaternion", "api/generated/sisl.STOrbital", "api/generated/sisl.SparseAtom", "api/generated/sisl.SparseCSR", "api/generated/sisl.SparseOrbital", "api/generated/sisl.SphericalOrbital", "api/generated/sisl.SuperCell", "api/generated/sisl.constant.G", "api/generated/sisl.constant.G0", "api/generated/sisl.constant.PhysicalConstant", "api/generated/sisl.constant.c", "api/generated/sisl.constant.h", "api/generated/sisl.constant.hbar", "api/generated/sisl.constant.m_e", "api/generated/sisl.constant.m_p", "api/generated/sisl.constant.q", "api/generated/sisl.geom.agnr", "api/generated/sisl.geom.bcc", "api/generated/sisl.geom.bcc_slab", "api/generated/sisl.geom.bilayer", "api/generated/sisl.geom.diamond", "api/generated/sisl.geom.fcc", "api/generated/sisl.geom.fcc_slab", "api/generated/sisl.geom.graphene", "api/generated/sisl.geom.graphene_nanoribbon", "api/generated/sisl.geom.hcp", "api/generated/sisl.geom.honeycomb", "api/generated/sisl.geom.nanoribbon", "api/generated/sisl.geom.nanotube", "api/generated/sisl.geom.rocksalt", "api/generated/sisl.geom.rocksalt_slab", "api/generated/sisl.geom.sc", "api/generated/sisl.geom.zgnr", "api/generated/sisl.mixing.AdaptiveDIISMixer", "api/generated/sisl.mixing.AdaptivePulayMixer", "api/generated/sisl.mixing.AndersonMixer", "api/generated/sisl.mixing.BaseHistoryWeightMixer", "api/generated/sisl.mixing.BaseMixer", "api/generated/sisl.mixing.BaseWeightMixer", "api/generated/sisl.mixing.DIISMixer", "api/generated/sisl.mixing.History", "api/generated/sisl.mixing.LinearMixer", "api/generated/sisl.mixing.PulayMixer", "api/generated/sisl.mixing.StepMixer", "api/generated/sisl.oplist.oplist", "api/generated/sisl.physics.BandStructure", "api/generated/sisl.physics.Bloch", "api/generated/sisl.physics.BrillouinZone", "api/generated/sisl.physics.Coefficient", "api/generated/sisl.physics.DensityMatrix", "api/generated/sisl.physics.DynamicalMatrix", "api/generated/sisl.physics.EnergyDensityMatrix", "api/generated/sisl.physics.Hamiltonian", "api/generated/sisl.physics.MonkhorstPack", "api/generated/sisl.physics.Overlap", "api/generated/sisl.physics.RealSpaceSE", "api/generated/sisl.physics.RealSpaceSI", "api/generated/sisl.physics.RecursiveSI", "api/generated/sisl.physics.SelfEnergy", "api/generated/sisl.physics.SemiInfinite", "api/generated/sisl.physics.SparseOrbitalBZ", "api/generated/sisl.physics.SparseOrbitalBZSpin", "api/generated/sisl.physics.Spin", "api/generated/sisl.physics.State", "api/generated/sisl.physics.StateC", "api/generated/sisl.physics.WideBandSE", "api/generated/sisl.physics.bose_einstein", "api/generated/sisl.physics.cold", "api/generated/sisl.physics.degenerate_decouple", "api/generated/sisl.physics.electron.COP", "api/generated/sisl.physics.electron.CoefficientElectron", "api/generated/sisl.physics.electron.DOS", "api/generated/sisl.physics.electron.EigenstateElectron", "api/generated/sisl.physics.electron.EigenvalueElectron", "api/generated/sisl.physics.electron.EigenvectorElectron", "api/generated/sisl.physics.electron.PDOS", "api/generated/sisl.physics.electron.StateCElectron", "api/generated/sisl.physics.electron.StateElectron", "api/generated/sisl.physics.electron.berry_curvature", "api/generated/sisl.physics.electron.berry_phase", "api/generated/sisl.physics.electron.conductivity", "api/generated/sisl.physics.electron.spin_moment", "api/generated/sisl.physics.electron.spin_squared", "api/generated/sisl.physics.electron.wavefunction", "api/generated/sisl.physics.fermi_dirac", "api/generated/sisl.physics.gaussian", "api/generated/sisl.physics.get_distribution", "api/generated/sisl.physics.heaviside", "api/generated/sisl.physics.lorentzian", "api/generated/sisl.physics.phonon.CoefficientPhonon", "api/generated/sisl.physics.phonon.DOS", "api/generated/sisl.physics.phonon.EigenmodePhonon", "api/generated/sisl.physics.phonon.EigenvaluePhonon", "api/generated/sisl.physics.phonon.EigenvectorPhonon", "api/generated/sisl.physics.phonon.ModeCPhonon", "api/generated/sisl.physics.phonon.ModePhonon", "api/generated/sisl.physics.phonon.PDOS", "api/generated/sisl.physics.step_function", "api/generated/sisl.shape.Cube", "api/generated/sisl.shape.Cuboid", "api/generated/sisl.shape.Ellipsoid", "api/generated/sisl.shape.NullShape", "api/generated/sisl.shape.Shape", "api/generated/sisl.shape.Sphere", "api/generated/sisl.unit.unit_convert", "api/generated/sisl.unit.unit_default", "api/generated/sisl.unit.unit_group", "api/generated/sisl.unit.units", "api/generated/sisl.utils.PropertyDict", "api/generated/sisl.utils.angle", "api/generated/sisl.utils.direction", "api/generated/sisl.utils.erange", "api/generated/sisl.utils.fileindex", "api/generated/sisl.utils.iter_shape", "api/generated/sisl.utils.list2str", "api/generated/sisl.utils.lstranges", "api/generated/sisl.utils.math_eval", "api/generated/sisl.utils.str_spec", "api/generated/sisl.utils.strmap", "api/generated/sisl.utils.strseq", "api/index", "api/io/basic", "api/io/bigdft", "api/io/fhiaims", "api/io/generated/sisl.io.BaseSile", "api/io/generated/sisl.io.Sile", "api/io/generated/sisl.io.SileBin", "api/io/generated/sisl.io.SileCDF", "api/io/generated/sisl.io.SileError", "api/io/generated/sisl.io.SileInfo", "api/io/generated/sisl.io.SileWarning", "api/io/generated/sisl.io.add_sile", "api/io/generated/sisl.io.axsfSile", "api/io/generated/sisl.io.bigdft.SileBigDFT", "api/io/generated/sisl.io.bigdft.SileBinBigDFT", "api/io/generated/sisl.io.bigdft.asciiSileBigDFT", "api/io/generated/sisl.io.cubeSile", "api/io/generated/sisl.io.fhiaims.SileBinFHIaims", "api/io/generated/sisl.io.fhiaims.SileFHIaims", "api/io/generated/sisl.io.fhiaims.inSileFHIaims", "api/io/generated/sisl.io.get_sile", "api/io/generated/sisl.io.get_sile_class", "api/io/generated/sisl.io.get_siles", "api/io/generated/sisl.io.gulp.SileBinGULP", "api/io/generated/sisl.io.gulp.SileGULP", "api/io/generated/sisl.io.gulp.fcSileGULP", "api/io/generated/sisl.io.gulp.gotSileGULP", "api/io/generated/sisl.io.moldenSile", "api/io/generated/sisl.io.openmx.SileBinOpenMX", "api/io/generated/sisl.io.openmx.SileCDFOpenMX", "api/io/generated/sisl.io.openmx.SileOpenMX", "api/io/generated/sisl.io.openmx.omxSileOpenMX", "api/io/generated/sisl.io.orca.SileBinORCA", "api/io/generated/sisl.io.orca.SileORCA", "api/io/generated/sisl.io.orca.outputSileORCA", "api/io/generated/sisl.io.orca.txtSileORCA", "api/io/generated/sisl.io.pdbSile", "api/io/generated/sisl.io.scaleup.SileBinScaleUp", "api/io/generated/sisl.io.scaleup.SileScaleUp", "api/io/generated/sisl.io.scaleup.orboccSileScaleUp", "api/io/generated/sisl.io.scaleup.refSileScaleUp", "api/io/generated/sisl.io.scaleup.rhamSileScaleUp", "api/io/generated/sisl.io.siesta.SileBinSiesta", "api/io/generated/sisl.io.siesta.SileCDFSiesta", "api/io/generated/sisl.io.siesta.SileSiesta", "api/io/generated/sisl.io.siesta.bandsSileSiesta", "api/io/generated/sisl.io.siesta.dmSileSiesta", "api/io/generated/sisl.io.siesta.eigSileSiesta", "api/io/generated/sisl.io.siesta.faSileSiesta", "api/io/generated/sisl.io.siesta.fcSileSiesta", "api/io/generated/sisl.io.siesta.fdfSileSiesta", "api/io/generated/sisl.io.siesta.gridSileSiesta", "api/io/generated/sisl.io.siesta.gridncSileSiesta", "api/io/generated/sisl.io.siesta.hsxSileSiesta", "api/io/generated/sisl.io.siesta.ionncSileSiesta", "api/io/generated/sisl.io.siesta.ionxmlSileSiesta", "api/io/generated/sisl.io.siesta.kpSileSiesta", "api/io/generated/sisl.io.siesta.ncSileSiesta", "api/io/generated/sisl.io.siesta.onlysSileSiesta", "api/io/generated/sisl.io.siesta.orbindxSileSiesta", "api/io/generated/sisl.io.siesta.outSileSiesta", "api/io/generated/sisl.io.siesta.pdosSileSiesta", "api/io/generated/sisl.io.siesta.rkpSileSiesta", "api/io/generated/sisl.io.siesta.structSileSiesta", "api/io/generated/sisl.io.siesta.tsdeSileSiesta", "api/io/generated/sisl.io.siesta.tsgfSileSiesta", "api/io/generated/sisl.io.siesta.tshsSileSiesta", "api/io/generated/sisl.io.siesta.tsvncSileSiesta", "api/io/generated/sisl.io.siesta.wfsxSileSiesta", "api/io/generated/sisl.io.siesta.xvSileSiesta", "api/io/generated/sisl.io.tableSile", "api/io/generated/sisl.io.tbtrans.SileBinTBtrans", "api/io/generated/sisl.io.tbtrans.SileCDFTBtrans", "api/io/generated/sisl.io.tbtrans.SileTBtrans", "api/io/generated/sisl.io.tbtrans.deltancSileTBtrans", "api/io/generated/sisl.io.tbtrans.phtavncSilePHtrans", "api/io/generated/sisl.io.tbtrans.phtncSilePHtrans", "api/io/generated/sisl.io.tbtrans.phtprojncSilePHtrans", "api/io/generated/sisl.io.tbtrans.phtsencSilePHtrans", "api/io/generated/sisl.io.tbtrans.tbtavncSileTBtrans", "api/io/generated/sisl.io.tbtrans.tbtgfSileTBtrans", "api/io/generated/sisl.io.tbtrans.tbtncSileTBtrans", "api/io/generated/sisl.io.tbtrans.tbtprojncSileTBtrans", "api/io/generated/sisl.io.tbtrans.tbtsencSileTBtrans", "api/io/generated/sisl.io.vasp.SileBinVASP", "api/io/generated/sisl.io.vasp.SileVASP", "api/io/generated/sisl.io.vasp.carSileVASP", "api/io/generated/sisl.io.vasp.chgSileVASP", "api/io/generated/sisl.io.vasp.doscarSileVASP", "api/io/generated/sisl.io.vasp.eigenvalSileVASP", "api/io/generated/sisl.io.vasp.locpotSileVASP", "api/io/generated/sisl.io.vasp.outSileVASP", "api/io/generated/sisl.io.wannier90.SileBinWannier90", "api/io/generated/sisl.io.wannier90.SileWannier90", "api/io/generated/sisl.io.wannier90.winSileWannier90", "api/io/generated/sisl.io.xsfSile", "api/io/generated/sisl.io.xyzSile", "api/io/generic", "api/io/gulp", "api/io/index", "api/io/openmx", "api/io/orca", "api/io/scaleup", "api/io/siesta", "api/io/tbtrans", "api/io/vasp", "api/io/wannier90", "api/mixing", "api/physics", "api/physics.brillouinzone", "api/physics.distribution", "api/physics.electron", "api/physics.matrix", "api/physics.phonon", "api/unit_constant", "api/unit_constant.constant", "api/unit_constant.unit", "api/utilities", "api/utilities.misc", "api/utilities.shape", "api/viz/generated/sisl.viz.Animation", "api/viz/generated/sisl.viz.MultiplePlot", "api/viz/generated/sisl.viz.Plot", "api/viz/generated/sisl.viz.SubPlots", "api/viz/index", "changelog/index", "changelog/v0.10.0", "changelog/v0.11.0", "changelog/v0.12.0", "changelog/v0.12.1", "changelog/v0.12.2", "changelog/v0.13.0", "changelog/v0.8.0", "changelog/v0.8.1", "changelog/v0.8.2", "changelog/v0.8.3", "changelog/v0.8.4", "changelog/v0.8.5", "changelog/v0.9.0", "changelog/v0.9.1", "changelog/v0.9.2", "changelog/v0.9.3", "changelog/v0.9.4", "changelog/v0.9.5", "changelog/v0.9.6", "changelog/v0.9.7", "changelog/v0.9.8", "cite", "contribute", "index", "installation", "introduction", "nodes/nodes_intro", "other", "publications", "references", "scripts/scripts", "scripts/sdata", "scripts/sgeom", "scripts/sgrid", "scripts/stoolbox", "toolbox/btd/btd", "toolbox/btd/generated/sisl_toolbox.btd.DeviceGreen", "toolbox/btd/generated/sisl_toolbox.btd.DownfoldSelfEnergy", "toolbox/btd/generated/sisl_toolbox.btd.PivotSelfEnergy", "toolbox/index", "toolbox/siesta/atom_plot", "toolbox/siesta/generated/sisl_toolbox.siesta.atom.AtomInput", "toolbox/transiesta/generated/sisl_toolbox.transiesta.poisson.solve_poisson", "toolbox/transiesta/ts_fft", "tutorials", "tutorials/tutorial_01", "tutorials/tutorial_02", "tutorials/tutorial_04", "tutorials/tutorial_05", "tutorials/tutorial_06", "tutorials/tutorial_es_1", "tutorials/tutorial_es_2", "tutorials/tutorial_siesta_1", "tutorials/tutorial_siesta_2", "visualization/ase/index", "visualization/viz_module/basic-tutorials/Demo", "visualization/viz_module/blender/Getting started", "visualization/viz_module/combining-plots/Intro to multiple plots", "visualization/viz_module/diy/00-Intro", "visualization/viz_module/diy/Adding new backends", "visualization/viz_module/index", "visualization/viz_module/showcase/BandsPlot", "visualization/viz_module/showcase/FatbandsPlot", "visualization/viz_module/showcase/GeometryPlot", "visualization/viz_module/showcase/GridPlot", "visualization/viz_module/showcase/PdosPlot", "visualization/viz_module/showcase/WavefunctionPlot", "visualization/viz_module/showcase/_template/Showcase template"], "filenames": ["api/basic.rst", "api/default_geom.rst", "api/generated/sisl.Atom.rst", "api/generated/sisl.AtomicOrbital.rst", "api/generated/sisl.Atoms.rst", "api/generated/sisl.GTOrbital.rst", "api/generated/sisl.Geometry.rst", "api/generated/sisl.Grid.rst", "api/generated/sisl.HydrogenicOrbital.rst", "api/generated/sisl.Orbital.rst", "api/generated/sisl.PeriodicTable.rst", "api/generated/sisl.Quaternion.rst", "api/generated/sisl.STOrbital.rst", "api/generated/sisl.SparseAtom.rst", "api/generated/sisl.SparseCSR.rst", "api/generated/sisl.SparseOrbital.rst", "api/generated/sisl.SphericalOrbital.rst", "api/generated/sisl.SuperCell.rst", "api/generated/sisl.constant.G.rst", "api/generated/sisl.constant.G0.rst", "api/generated/sisl.constant.PhysicalConstant.rst", "api/generated/sisl.constant.c.rst", "api/generated/sisl.constant.h.rst", "api/generated/sisl.constant.hbar.rst", "api/generated/sisl.constant.m_e.rst", "api/generated/sisl.constant.m_p.rst", "api/generated/sisl.constant.q.rst", "api/generated/sisl.geom.agnr.rst", "api/generated/sisl.geom.bcc.rst", "api/generated/sisl.geom.bcc_slab.rst", "api/generated/sisl.geom.bilayer.rst", "api/generated/sisl.geom.diamond.rst", "api/generated/sisl.geom.fcc.rst", "api/generated/sisl.geom.fcc_slab.rst", "api/generated/sisl.geom.graphene.rst", "api/generated/sisl.geom.graphene_nanoribbon.rst", "api/generated/sisl.geom.hcp.rst", "api/generated/sisl.geom.honeycomb.rst", "api/generated/sisl.geom.nanoribbon.rst", "api/generated/sisl.geom.nanotube.rst", "api/generated/sisl.geom.rocksalt.rst", "api/generated/sisl.geom.rocksalt_slab.rst", "api/generated/sisl.geom.sc.rst", "api/generated/sisl.geom.zgnr.rst", "api/generated/sisl.mixing.AdaptiveDIISMixer.rst", "api/generated/sisl.mixing.AdaptivePulayMixer.rst", "api/generated/sisl.mixing.AndersonMixer.rst", "api/generated/sisl.mixing.BaseHistoryWeightMixer.rst", "api/generated/sisl.mixing.BaseMixer.rst", "api/generated/sisl.mixing.BaseWeightMixer.rst", "api/generated/sisl.mixing.DIISMixer.rst", "api/generated/sisl.mixing.History.rst", "api/generated/sisl.mixing.LinearMixer.rst", "api/generated/sisl.mixing.PulayMixer.rst", "api/generated/sisl.mixing.StepMixer.rst", "api/generated/sisl.oplist.oplist.rst", "api/generated/sisl.physics.BandStructure.rst", "api/generated/sisl.physics.Bloch.rst", "api/generated/sisl.physics.BrillouinZone.rst", "api/generated/sisl.physics.Coefficient.rst", "api/generated/sisl.physics.DensityMatrix.rst", "api/generated/sisl.physics.DynamicalMatrix.rst", "api/generated/sisl.physics.EnergyDensityMatrix.rst", "api/generated/sisl.physics.Hamiltonian.rst", "api/generated/sisl.physics.MonkhorstPack.rst", "api/generated/sisl.physics.Overlap.rst", "api/generated/sisl.physics.RealSpaceSE.rst", "api/generated/sisl.physics.RealSpaceSI.rst", "api/generated/sisl.physics.RecursiveSI.rst", "api/generated/sisl.physics.SelfEnergy.rst", "api/generated/sisl.physics.SemiInfinite.rst", "api/generated/sisl.physics.SparseOrbitalBZ.rst", "api/generated/sisl.physics.SparseOrbitalBZSpin.rst", "api/generated/sisl.physics.Spin.rst", "api/generated/sisl.physics.State.rst", "api/generated/sisl.physics.StateC.rst", "api/generated/sisl.physics.WideBandSE.rst", "api/generated/sisl.physics.bose_einstein.rst", "api/generated/sisl.physics.cold.rst", "api/generated/sisl.physics.degenerate_decouple.rst", "api/generated/sisl.physics.electron.COP.rst", "api/generated/sisl.physics.electron.CoefficientElectron.rst", "api/generated/sisl.physics.electron.DOS.rst", "api/generated/sisl.physics.electron.EigenstateElectron.rst", "api/generated/sisl.physics.electron.EigenvalueElectron.rst", "api/generated/sisl.physics.electron.EigenvectorElectron.rst", "api/generated/sisl.physics.electron.PDOS.rst", "api/generated/sisl.physics.electron.StateCElectron.rst", "api/generated/sisl.physics.electron.StateElectron.rst", "api/generated/sisl.physics.electron.berry_curvature.rst", "api/generated/sisl.physics.electron.berry_phase.rst", "api/generated/sisl.physics.electron.conductivity.rst", "api/generated/sisl.physics.electron.spin_moment.rst", "api/generated/sisl.physics.electron.spin_squared.rst", "api/generated/sisl.physics.electron.wavefunction.rst", "api/generated/sisl.physics.fermi_dirac.rst", "api/generated/sisl.physics.gaussian.rst", "api/generated/sisl.physics.get_distribution.rst", "api/generated/sisl.physics.heaviside.rst", "api/generated/sisl.physics.lorentzian.rst", "api/generated/sisl.physics.phonon.CoefficientPhonon.rst", "api/generated/sisl.physics.phonon.DOS.rst", "api/generated/sisl.physics.phonon.EigenmodePhonon.rst", "api/generated/sisl.physics.phonon.EigenvaluePhonon.rst", "api/generated/sisl.physics.phonon.EigenvectorPhonon.rst", "api/generated/sisl.physics.phonon.ModeCPhonon.rst", "api/generated/sisl.physics.phonon.ModePhonon.rst", "api/generated/sisl.physics.phonon.PDOS.rst", "api/generated/sisl.physics.step_function.rst", "api/generated/sisl.shape.Cube.rst", "api/generated/sisl.shape.Cuboid.rst", "api/generated/sisl.shape.Ellipsoid.rst", "api/generated/sisl.shape.NullShape.rst", "api/generated/sisl.shape.Shape.rst", "api/generated/sisl.shape.Sphere.rst", "api/generated/sisl.unit.unit_convert.rst", "api/generated/sisl.unit.unit_default.rst", "api/generated/sisl.unit.unit_group.rst", "api/generated/sisl.unit.units.rst", "api/generated/sisl.utils.PropertyDict.rst", "api/generated/sisl.utils.angle.rst", "api/generated/sisl.utils.direction.rst", "api/generated/sisl.utils.erange.rst", "api/generated/sisl.utils.fileindex.rst", "api/generated/sisl.utils.iter_shape.rst", "api/generated/sisl.utils.list2str.rst", "api/generated/sisl.utils.lstranges.rst", "api/generated/sisl.utils.math_eval.rst", "api/generated/sisl.utils.str_spec.rst", "api/generated/sisl.utils.strmap.rst", "api/generated/sisl.utils.strseq.rst", "api/index.rst", "api/io/basic.rst", "api/io/bigdft.rst", "api/io/fhiaims.rst", "api/io/generated/sisl.io.BaseSile.rst", "api/io/generated/sisl.io.Sile.rst", "api/io/generated/sisl.io.SileBin.rst", "api/io/generated/sisl.io.SileCDF.rst", "api/io/generated/sisl.io.SileError.rst", "api/io/generated/sisl.io.SileInfo.rst", "api/io/generated/sisl.io.SileWarning.rst", "api/io/generated/sisl.io.add_sile.rst", "api/io/generated/sisl.io.axsfSile.rst", "api/io/generated/sisl.io.bigdft.SileBigDFT.rst", "api/io/generated/sisl.io.bigdft.SileBinBigDFT.rst", "api/io/generated/sisl.io.bigdft.asciiSileBigDFT.rst", "api/io/generated/sisl.io.cubeSile.rst", "api/io/generated/sisl.io.fhiaims.SileBinFHIaims.rst", "api/io/generated/sisl.io.fhiaims.SileFHIaims.rst", "api/io/generated/sisl.io.fhiaims.inSileFHIaims.rst", "api/io/generated/sisl.io.get_sile.rst", "api/io/generated/sisl.io.get_sile_class.rst", "api/io/generated/sisl.io.get_siles.rst", "api/io/generated/sisl.io.gulp.SileBinGULP.rst", "api/io/generated/sisl.io.gulp.SileGULP.rst", "api/io/generated/sisl.io.gulp.fcSileGULP.rst", "api/io/generated/sisl.io.gulp.gotSileGULP.rst", "api/io/generated/sisl.io.moldenSile.rst", "api/io/generated/sisl.io.openmx.SileBinOpenMX.rst", "api/io/generated/sisl.io.openmx.SileCDFOpenMX.rst", "api/io/generated/sisl.io.openmx.SileOpenMX.rst", "api/io/generated/sisl.io.openmx.omxSileOpenMX.rst", "api/io/generated/sisl.io.orca.SileBinORCA.rst", "api/io/generated/sisl.io.orca.SileORCA.rst", "api/io/generated/sisl.io.orca.outputSileORCA.rst", "api/io/generated/sisl.io.orca.txtSileORCA.rst", "api/io/generated/sisl.io.pdbSile.rst", "api/io/generated/sisl.io.scaleup.SileBinScaleUp.rst", "api/io/generated/sisl.io.scaleup.SileScaleUp.rst", "api/io/generated/sisl.io.scaleup.orboccSileScaleUp.rst", "api/io/generated/sisl.io.scaleup.refSileScaleUp.rst", "api/io/generated/sisl.io.scaleup.rhamSileScaleUp.rst", "api/io/generated/sisl.io.siesta.SileBinSiesta.rst", "api/io/generated/sisl.io.siesta.SileCDFSiesta.rst", "api/io/generated/sisl.io.siesta.SileSiesta.rst", "api/io/generated/sisl.io.siesta.bandsSileSiesta.rst", "api/io/generated/sisl.io.siesta.dmSileSiesta.rst", "api/io/generated/sisl.io.siesta.eigSileSiesta.rst", "api/io/generated/sisl.io.siesta.faSileSiesta.rst", "api/io/generated/sisl.io.siesta.fcSileSiesta.rst", "api/io/generated/sisl.io.siesta.fdfSileSiesta.rst", "api/io/generated/sisl.io.siesta.gridSileSiesta.rst", "api/io/generated/sisl.io.siesta.gridncSileSiesta.rst", "api/io/generated/sisl.io.siesta.hsxSileSiesta.rst", "api/io/generated/sisl.io.siesta.ionncSileSiesta.rst", "api/io/generated/sisl.io.siesta.ionxmlSileSiesta.rst", "api/io/generated/sisl.io.siesta.kpSileSiesta.rst", "api/io/generated/sisl.io.siesta.ncSileSiesta.rst", "api/io/generated/sisl.io.siesta.onlysSileSiesta.rst", "api/io/generated/sisl.io.siesta.orbindxSileSiesta.rst", "api/io/generated/sisl.io.siesta.outSileSiesta.rst", "api/io/generated/sisl.io.siesta.pdosSileSiesta.rst", "api/io/generated/sisl.io.siesta.rkpSileSiesta.rst", "api/io/generated/sisl.io.siesta.structSileSiesta.rst", "api/io/generated/sisl.io.siesta.tsdeSileSiesta.rst", "api/io/generated/sisl.io.siesta.tsgfSileSiesta.rst", "api/io/generated/sisl.io.siesta.tshsSileSiesta.rst", "api/io/generated/sisl.io.siesta.tsvncSileSiesta.rst", "api/io/generated/sisl.io.siesta.wfsxSileSiesta.rst", "api/io/generated/sisl.io.siesta.xvSileSiesta.rst", "api/io/generated/sisl.io.tableSile.rst", "api/io/generated/sisl.io.tbtrans.SileBinTBtrans.rst", "api/io/generated/sisl.io.tbtrans.SileCDFTBtrans.rst", "api/io/generated/sisl.io.tbtrans.SileTBtrans.rst", "api/io/generated/sisl.io.tbtrans.deltancSileTBtrans.rst", "api/io/generated/sisl.io.tbtrans.phtavncSilePHtrans.rst", "api/io/generated/sisl.io.tbtrans.phtncSilePHtrans.rst", "api/io/generated/sisl.io.tbtrans.phtprojncSilePHtrans.rst", "api/io/generated/sisl.io.tbtrans.phtsencSilePHtrans.rst", "api/io/generated/sisl.io.tbtrans.tbtavncSileTBtrans.rst", "api/io/generated/sisl.io.tbtrans.tbtgfSileTBtrans.rst", "api/io/generated/sisl.io.tbtrans.tbtncSileTBtrans.rst", "api/io/generated/sisl.io.tbtrans.tbtprojncSileTBtrans.rst", "api/io/generated/sisl.io.tbtrans.tbtsencSileTBtrans.rst", "api/io/generated/sisl.io.vasp.SileBinVASP.rst", "api/io/generated/sisl.io.vasp.SileVASP.rst", "api/io/generated/sisl.io.vasp.carSileVASP.rst", "api/io/generated/sisl.io.vasp.chgSileVASP.rst", "api/io/generated/sisl.io.vasp.doscarSileVASP.rst", "api/io/generated/sisl.io.vasp.eigenvalSileVASP.rst", "api/io/generated/sisl.io.vasp.locpotSileVASP.rst", "api/io/generated/sisl.io.vasp.outSileVASP.rst", "api/io/generated/sisl.io.wannier90.SileBinWannier90.rst", "api/io/generated/sisl.io.wannier90.SileWannier90.rst", "api/io/generated/sisl.io.wannier90.winSileWannier90.rst", "api/io/generated/sisl.io.xsfSile.rst", "api/io/generated/sisl.io.xyzSile.rst", "api/io/generic.rst", "api/io/gulp.rst", "api/io/index.rst", "api/io/openmx.rst", "api/io/orca.rst", "api/io/scaleup.rst", "api/io/siesta.rst", "api/io/tbtrans.rst", "api/io/vasp.rst", "api/io/wannier90.rst", "api/mixing.rst", "api/physics.rst", "api/physics.brillouinzone.rst", "api/physics.distribution.rst", "api/physics.electron.rst", "api/physics.matrix.rst", "api/physics.phonon.rst", "api/unit_constant.rst", "api/unit_constant.constant.rst", "api/unit_constant.unit.rst", "api/utilities.rst", "api/utilities.misc.rst", "api/utilities.shape.rst", "api/viz/generated/sisl.viz.Animation.rst", "api/viz/generated/sisl.viz.MultiplePlot.rst", "api/viz/generated/sisl.viz.Plot.rst", "api/viz/generated/sisl.viz.SubPlots.rst", "api/viz/index.rst", "changelog/index.rst", "changelog/v0.10.0.rst", "changelog/v0.11.0.rst", "changelog/v0.12.0.rst", "changelog/v0.12.1.rst", "changelog/v0.12.2.rst", "changelog/v0.13.0.rst", "changelog/v0.8.0.rst", "changelog/v0.8.1.rst", "changelog/v0.8.2.rst", "changelog/v0.8.3.rst", "changelog/v0.8.4.rst", "changelog/v0.8.5.rst", "changelog/v0.9.0.rst", "changelog/v0.9.1.rst", "changelog/v0.9.2.rst", "changelog/v0.9.3.rst", "changelog/v0.9.4.rst", "changelog/v0.9.5.rst", "changelog/v0.9.6.rst", "changelog/v0.9.7.rst", "changelog/v0.9.8.rst", "cite.rst", "contribute.rst", "index.rst", "installation.rst", "introduction.rst", "nodes/nodes_intro.ipynb", "other.rst", "publications.rst", "references.rst", "scripts/scripts.rst", "scripts/sdata.rst", "scripts/sgeom.rst", "scripts/sgrid.rst", "scripts/stoolbox.rst", "toolbox/btd/btd.rst", "toolbox/btd/generated/sisl_toolbox.btd.DeviceGreen.rst", "toolbox/btd/generated/sisl_toolbox.btd.DownfoldSelfEnergy.rst", "toolbox/btd/generated/sisl_toolbox.btd.PivotSelfEnergy.rst", "toolbox/index.rst", "toolbox/siesta/atom_plot.rst", "toolbox/siesta/generated/sisl_toolbox.siesta.atom.AtomInput.rst", "toolbox/transiesta/generated/sisl_toolbox.transiesta.poisson.solve_poisson.rst", "toolbox/transiesta/ts_fft.rst", "tutorials.rst", "tutorials/tutorial_01.rst", "tutorials/tutorial_02.rst", "tutorials/tutorial_04.rst", "tutorials/tutorial_05.rst", "tutorials/tutorial_06.rst", "tutorials/tutorial_es_1.ipynb", "tutorials/tutorial_es_2.ipynb", "tutorials/tutorial_siesta_1.ipynb", "tutorials/tutorial_siesta_2.ipynb", "visualization/ase/index.rst", "visualization/viz_module/basic-tutorials/Demo.ipynb", "visualization/viz_module/blender/Getting started.rst", "visualization/viz_module/combining-plots/Intro to multiple plots.ipynb", "visualization/viz_module/diy/00-Intro.rst", "visualization/viz_module/diy/Adding new backends.ipynb", "visualization/viz_module/index.rst", "visualization/viz_module/showcase/BandsPlot.ipynb", "visualization/viz_module/showcase/FatbandsPlot.ipynb", "visualization/viz_module/showcase/GeometryPlot.ipynb", "visualization/viz_module/showcase/GridPlot.ipynb", "visualization/viz_module/showcase/PdosPlot.ipynb", "visualization/viz_module/showcase/WavefunctionPlot.ipynb", "visualization/viz_module/showcase/_template/Showcase template.ipynb"], "titles": ["Basic classes", "Common geometries", "sisl.Atom", "sisl.AtomicOrbital", "sisl.Atoms", "sisl.GTOrbital", "sisl.Geometry", "sisl.Grid", "sisl.HydrogenicOrbital", "sisl.Orbital", "sisl.PeriodicTable", "sisl.Quaternion", "sisl.STOrbital", "sisl.SparseAtom", "sisl.SparseCSR", "sisl.SparseOrbital", "sisl.SphericalOrbital", "sisl.SuperCell", "sisl.constant.G", "sisl.constant.G0", "sisl.constant.PhysicalConstant", "sisl.constant.c", "sisl.constant.h", "sisl.constant.hbar", "sisl.constant.m_e", "sisl.constant.m_p", "sisl.constant.q", "agnr", "bcc", "bcc_slab", "bilayer", "diamond", "fcc", "fcc_slab", "graphene", "graphene_nanoribbon", "hcp", "honeycomb", "nanoribbon", "nanotube", "rocksalt", "rocksalt_slab", "sc", "zgnr", "sisl.mixing.AdaptiveDIISMixer", "sisl.mixing.AdaptivePulayMixer", "sisl.mixing.AndersonMixer", "sisl.mixing.BaseHistoryWeightMixer", "sisl.mixing.BaseMixer", "sisl.mixing.BaseWeightMixer", "sisl.mixing.DIISMixer", "sisl.mixing.History", "sisl.mixing.LinearMixer", "sisl.mixing.PulayMixer", "sisl.mixing.StepMixer", "sisl.oplist.oplist", "sisl.physics.BandStructure", "sisl.physics.Bloch", "sisl.physics.BrillouinZone", "sisl.physics.Coefficient", "sisl.physics.DensityMatrix", "sisl.physics.DynamicalMatrix", "sisl.physics.EnergyDensityMatrix", "sisl.physics.Hamiltonian", "sisl.physics.MonkhorstPack", "sisl.physics.Overlap", "sisl.physics.RealSpaceSE", "sisl.physics.RealSpaceSI", "sisl.physics.RecursiveSI", "sisl.physics.SelfEnergy", "sisl.physics.SemiInfinite", "sisl.physics.SparseOrbitalBZ", "sisl.physics.SparseOrbitalBZSpin", "sisl.physics.Spin", "sisl.physics.State", "sisl.physics.StateC", "sisl.physics.WideBandSE", "bose_einstein", "cold", "degenerate_decouple", "COP", "sisl.physics.electron.CoefficientElectron", "DOS", "sisl.physics.electron.EigenstateElectron", "sisl.physics.electron.EigenvalueElectron", "sisl.physics.electron.EigenvectorElectron", "PDOS", "sisl.physics.electron.StateCElectron", "sisl.physics.electron.StateElectron", "berry_curvature", "berry_phase", "conductivity", "spin_moment", "spin_squared", "wavefunction", "fermi_dirac", "gaussian", "get_distribution", "heaviside", "lorentzian", "sisl.physics.phonon.CoefficientPhonon", "DOS", "sisl.physics.phonon.EigenmodePhonon", "sisl.physics.phonon.EigenvaluePhonon", "sisl.physics.phonon.EigenvectorPhonon", "sisl.physics.phonon.ModeCPhonon", "sisl.physics.phonon.ModePhonon", "PDOS", "step_function", "sisl.shape.Cube", "sisl.shape.Cuboid", "sisl.shape.Ellipsoid", "sisl.shape.NullShape", "sisl.shape.Shape", "sisl.shape.Sphere", "unit_convert", "unit_default", "unit_group", "sisl.unit.units", "sisl.utils.PropertyDict", "angle", "direction", "erange", "fileindex", "iter_shape", "list2str", "lstranges", "math_eval", "str_spec", "strmap", "strseq", "API documentation", "Basic IO methods/classes", "BigDFT", "FHIaims", "sisl.io.BaseSile", "sisl.io.Sile", "sisl.io.SileBin", "sisl.io.SileCDF", "sisl.io.SileError", "sisl.io.SileInfo", "sisl.io.SileWarning", "add_sile", "sisl.io.axsfSile", "sisl.io.bigdft.SileBigDFT", "sisl.io.bigdft.SileBinBigDFT", "sisl.io.bigdft.asciiSileBigDFT", "sisl.io.cubeSile", "sisl.io.fhiaims.SileBinFHIaims", "sisl.io.fhiaims.SileFHIaims", "sisl.io.fhiaims.inSileFHIaims", "get_sile", "get_sile_class", "get_siles", "sisl.io.gulp.SileBinGULP", "sisl.io.gulp.SileGULP", "sisl.io.gulp.fcSileGULP", "sisl.io.gulp.gotSileGULP", "sisl.io.moldenSile", "sisl.io.openmx.SileBinOpenMX", "sisl.io.openmx.SileCDFOpenMX", "sisl.io.openmx.SileOpenMX", "sisl.io.openmx.omxSileOpenMX", "sisl.io.orca.SileBinORCA", "sisl.io.orca.SileORCA", "sisl.io.orca.outputSileORCA", "sisl.io.orca.txtSileORCA", "sisl.io.pdbSile", "sisl.io.scaleup.SileBinScaleUp", "sisl.io.scaleup.SileScaleUp", "sisl.io.scaleup.orboccSileScaleUp", "sisl.io.scaleup.refSileScaleUp", "sisl.io.scaleup.rhamSileScaleUp", "sisl.io.siesta.SileBinSiesta", "sisl.io.siesta.SileCDFSiesta", "sisl.io.siesta.SileSiesta", "sisl.io.siesta.bandsSileSiesta", "sisl.io.siesta.dmSileSiesta", "sisl.io.siesta.eigSileSiesta", "sisl.io.siesta.faSileSiesta", "sisl.io.siesta.fcSileSiesta", "sisl.io.siesta.fdfSileSiesta", "sisl.io.siesta.gridSileSiesta", "sisl.io.siesta.gridncSileSiesta", "sisl.io.siesta.hsxSileSiesta", "sisl.io.siesta.ionncSileSiesta", "sisl.io.siesta.ionxmlSileSiesta", "sisl.io.siesta.kpSileSiesta", "sisl.io.siesta.ncSileSiesta", "sisl.io.siesta.onlysSileSiesta", "sisl.io.siesta.orbindxSileSiesta", "sisl.io.siesta.outSileSiesta", "sisl.io.siesta.pdosSileSiesta", "sisl.io.siesta.rkpSileSiesta", "sisl.io.siesta.structSileSiesta", "sisl.io.siesta.tsdeSileSiesta", "sisl.io.siesta.tsgfSileSiesta", "sisl.io.siesta.tshsSileSiesta", "sisl.io.siesta.tsvncSileSiesta", "sisl.io.siesta.wfsxSileSiesta", "sisl.io.siesta.xvSileSiesta", "sisl.io.tableSile", "sisl.io.tbtrans.SileBinTBtrans", "sisl.io.tbtrans.SileCDFTBtrans", "sisl.io.tbtrans.SileTBtrans", "sisl.io.tbtrans.deltancSileTBtrans", "sisl.io.tbtrans.phtavncSilePHtrans", "sisl.io.tbtrans.phtncSilePHtrans", "sisl.io.tbtrans.phtprojncSilePHtrans", "sisl.io.tbtrans.phtsencSilePHtrans", "sisl.io.tbtrans.tbtavncSileTBtrans", "sisl.io.tbtrans.tbtgfSileTBtrans", "sisl.io.tbtrans.tbtncSileTBtrans", "sisl.io.tbtrans.tbtprojncSileTBtrans", "sisl.io.tbtrans.tbtsencSileTBtrans", "sisl.io.vasp.SileBinVASP", "sisl.io.vasp.SileVASP", "sisl.io.vasp.carSileVASP", "sisl.io.vasp.chgSileVASP", "sisl.io.vasp.doscarSileVASP", "sisl.io.vasp.eigenvalSileVASP", "sisl.io.vasp.locpotSileVASP", "sisl.io.vasp.outSileVASP", "sisl.io.wannier90.SileBinWannier90", "sisl.io.wannier90.SileWannier90", "sisl.io.wannier90.winSileWannier90", "sisl.io.xsfSile", "sisl.io.xyzSile", "Generic files", "GULP", "Input/Output", "OpenMX", "ORCA", "ScaleUP", "Siesta", "TBtrans", "VASP", "Wannier90", "Mixing self-consistent quantities", "Physical objects", "Brillouin zone", "Distribution functions", "Electron related functions", "Physical quantites", "Phonon related functions", "Units and constants", "Constants", "Unit conversion", "Utilities", "Range routines", "Shapes", "sisl.viz.Animation", "sisl.viz.MultiplePlot", "sisl.viz.Plot", "sisl.viz.SubPlots", "Visualization", "Release notes", "0.10.0", "0.11.0", "0.12.0", "0.12.1", "0.12.2", "0.13.0", "0.8.0", "0.8.1", "0.8.2", "0.8.3", "0.8.4", "0.8.5", "0.9.0", "0.9.1", "0.9.2", "0.9.3", "0.9.4", "0.9.5", "0.9.6", "0.9.7", "0.9.8", "Citing sisl", "Contributing", "sisl: Toolbox for electronic structure calculations", "Installation", "Introduction", "Nodes and workflows", "Other resources", "Publications using sisl", "References", "Command line scripts", "<em class=\"xref py py-obj\">sdata</em>", "<em class=\"xref py py-obj\">sgeom</em>", "<em class=\"xref py py-obj\">sgrid</em>", "<em class=\"xref py py-obj\">stoolbox</em>", "Block-tri-diagonal inversion algorithms", "sisl_toolbox.btd.DeviceGreen", "sisl_toolbox.btd.DownfoldSelfEnergy", "sisl_toolbox.btd.PivotSelfEnergy", "Toolboxes", "Plotting <em class=\"xref py py-obj\">atom</em> output", "sisl_toolbox.siesta.atom.AtomInput", "solve_poisson", "TranSiesta Hartree correction for FFT Poisson solver", "Tutorials", "Geometry creation \u2013 part 1", "Geometry creation \u2013 part 2", "Specifying super-cell information", "Electronic structure setup \u2013 part 1", "Electronic structure setup \u2013 part 2", "Electronic structure calculation \u2013 a walk-through", "Berry phase calculation for graphene", "Siesta \u2014 the H2O molecule", "Siesta \u2014 graphene", "ASE", "First steps", "Getting started", "Intro to multiple plots", "Intro to the framework", "Adding new backends", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">sisl.viz</span></code> module", "BandsPlot", "FatbandsPlot", "GeometryPlot", "GridPlot", "PdosPlot", "WavefunctionPlot", "&lt;<span class=\"math notranslate nohighlight\">\\(plotclass\\)</span>&gt;"], "terms": {"sisl": [0, 1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 77, 78, 79, 80, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 107, 108, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 142, 151, 152, 153, 230, 239, 242, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 273, 275, 279, 281, 282, 283, 284, 287, 288, 289, 290, 291, 293, 295, 296, 297, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324], "provid": [0, 6, 7, 17, 60, 61, 62, 63, 71, 72, 74, 75, 83, 84, 85, 87, 88, 102, 103, 104, 105, 106, 119, 182, 183, 190, 193, 201, 206, 207, 208, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 251, 252, 253, 254, 282, 283, 284, 297, 312, 314, 315, 316, 317, 318, 320, 321], "function": [0, 2, 3, 5, 6, 7, 8, 9, 12, 13, 15, 16, 41, 44, 45, 46, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 75, 77, 78, 80, 82, 83, 84, 86, 87, 89, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 107, 108, 123, 126, 129, 130, 131, 151, 152, 165, 166, 178, 183, 191, 196, 206, 207, 208, 210, 211, 212, 213, 239, 240, 248, 249, 251, 252, 253, 254, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 273, 275, 278, 280, 281, 282, 283, 285, 286, 293, 304, 306, 307, 308, 309, 310, 312, 316, 318, 320, 321, 322], "interact": [0, 6, 13, 14, 15, 54, 61, 65, 71, 191, 225, 258, 263, 268, 273, 283, 284, 285, 286, 287, 304, 305, 306, 307, 312, 313, 315, 316, 320], "orbit": [0, 2, 3, 4, 5, 6, 8, 12, 13, 15, 16, 60, 61, 62, 63, 65, 71, 72, 73, 74, 75, 80, 82, 83, 85, 86, 87, 88, 92, 94, 102, 104, 105, 106, 165, 166, 181, 184, 188, 190, 191, 192, 197, 199, 206, 207, 208, 209, 210, 212, 213, 214, 258, 259, 262, 263, 265, 266, 267, 268, 269, 275, 276, 285, 286, 293, 297, 302, 305, 306, 307, 310, 318, 319, 322, 323], "atom": [0, 3, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 60, 61, 62, 63, 65, 66, 67, 71, 72, 102, 107, 147, 150, 165, 166, 170, 180, 181, 184, 188, 190, 191, 192, 194, 197, 199, 200, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 227, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 273, 275, 276, 277, 280, 282, 285, 289, 296, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 314, 319, 321, 322, 323], "geometri": [0, 4, 7, 13, 15, 17, 27, 30, 33, 35, 38, 43, 57, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 74, 75, 83, 85, 87, 88, 94, 102, 104, 105, 106, 131, 143, 146, 147, 150, 157, 158, 162, 166, 167, 171, 172, 177, 180, 181, 183, 184, 188, 189, 191, 192, 194, 195, 197, 199, 200, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 275, 276, 277, 280, 284, 287, 289, 290, 299, 300, 301, 304, 305, 306, 311, 312, 319, 320, 322, 323], "unit": [0, 5, 6, 7, 10, 12, 13, 15, 17, 20, 26, 30, 33, 34, 37, 38, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 83, 85, 87, 88, 91, 94, 102, 103, 104, 105, 106, 115, 116, 117, 120, 131, 147, 156, 180, 181, 182, 183, 187, 192, 193, 199, 200, 206, 207, 208, 209, 210, 212, 213, 214, 222, 227, 246, 251, 252, 253, 254, 258, 261, 262, 264, 269, 273, 274, 280, 289, 290, 300, 302, 303, 304, 305, 307, 308, 309, 310, 312, 314], "cell": [0, 6, 7, 13, 15, 17, 30, 33, 34, 37, 38, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 83, 85, 87, 88, 94, 102, 104, 105, 106, 147, 157, 180, 182, 196, 199, 206, 207, 208, 209, 210, 211, 212, 213, 214, 225, 227, 259, 261, 262, 265, 269, 275, 283, 289, 290, 300, 302, 303, 305, 307, 309, 310, 312, 314, 318, 319, 321, 322, 323, 324], "grid": [0, 3, 5, 6, 8, 9, 12, 16, 17, 56, 58, 60, 62, 64, 66, 67, 83, 85, 87, 88, 91, 94, 147, 181, 182, 183, 188, 198, 214, 218, 221, 226, 251, 252, 253, 254, 258, 272, 273, 274, 275, 277, 280, 282, 287, 300, 308, 309, 310, 312, 313, 314], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 29, 33, 38, 41, 44, 46, 50, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 124, 138, 142, 143, 147, 160, 174, 176, 178, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 196, 197, 198, 199, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 222, 238, 239, 240, 242, 246, 247, 250, 251, 252, 253, 254, 262, 263, 264, 265, 268, 269, 275, 278, 279, 280, 281, 282, 283, 285, 288, 289, 290, 291, 293, 296, 297, 300, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323], "physic": [0, 20, 77, 78, 79, 80, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 107, 108, 131, 181, 206, 207, 208, 210, 212, 213, 240, 245, 246, 261, 267, 273, 278, 279, 280, 282, 284, 285, 293, 307, 309], "matric": [0, 13, 14, 15, 57, 60, 61, 62, 63, 65, 68, 70, 71, 72, 79, 86, 90, 92, 181, 184, 196, 206, 207, 208, 210, 211, 212, 213, 257, 258, 259, 262, 266, 269, 273, 275, 276, 277, 278, 282, 284, 293, 305], "us": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 35, 44, 45, 46, 50, 51, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 124, 127, 129, 131, 136, 141, 143, 147, 150, 151, 162, 178, 180, 181, 184, 188, 190, 191, 192, 194, 196, 197, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 221, 226, 227, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 288, 289, 290, 293, 294, 295, 296, 297, 298, 300, 301, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 320, 322, 323], "intern": [0, 3, 6, 7, 8, 13, 14, 15, 16, 17, 51, 54, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 143, 151, 157, 201, 226, 238, 251, 252, 253, 254, 257, 269, 273, 286, 300, 307, 317], "ar": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 29, 33, 41, 46, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 119, 121, 131, 132, 138, 141, 150, 151, 152, 156, 157, 160, 162, 174, 176, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 196, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 230, 238, 239, 240, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 273, 275, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 293, 296, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "construct": [0, 1, 6, 8, 13, 14, 15, 27, 29, 35, 38, 43, 58, 60, 61, 62, 63, 65, 66, 67, 69, 71, 72, 76, 113, 151, 250, 257, 258, 259, 262, 263, 264, 267, 268, 275, 294, 295, 298, 307, 308, 314, 316, 323], "base": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 119, 130, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 238, 240, 251, 252, 253, 254, 269, 279, 285, 293, 294, 295, 298, 300, 307, 309, 316, 317], "howev": [0, 3, 5, 6, 8, 12, 13, 15, 16, 17, 50, 55, 60, 61, 62, 63, 64, 65, 71, 72, 90, 113, 178, 206, 207, 208, 210, 212, 213, 263, 273, 280, 284, 289, 290, 300, 304, 306, 307, 309, 312, 313, 314, 315, 316, 318, 320, 321, 323, 324], "mai": [0, 2, 4, 6, 7, 13, 14, 15, 16, 17, 30, 31, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 72, 73, 74, 75, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 119, 120, 132, 151, 152, 178, 180, 181, 184, 190, 191, 196, 197, 199, 201, 205, 206, 207, 208, 210, 211, 212, 213, 225, 235, 238, 239, 240, 242, 246, 250, 251, 252, 253, 254, 256, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 275, 276, 279, 280, 281, 282, 285, 286, 289, 290, 293, 295, 297, 300, 301, 302, 304, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 318, 320, 321], "benefici": [0, 83, 87, 197, 275, 300], "read": [0, 6, 7, 17, 60, 61, 62, 63, 65, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 251, 252, 253, 254, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 273, 274, 275, 276, 277, 280, 288, 289, 290, 293, 297, 298, 305, 309, 310, 312, 313, 314, 315, 316, 318, 323], "specif": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 15, 16, 17, 29, 33, 41, 60, 61, 62, 63, 64, 65, 70, 71, 72, 74, 75, 83, 85, 87, 88, 94, 102, 104, 105, 106, 153, 188, 191, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 222, 242, 243, 244, 247, 251, 252, 253, 254, 257, 262, 264, 267, 268, 281, 282, 289, 290, 293, 297, 304, 306, 307, 312, 316, 317, 320, 322], "matrix": [0, 6, 7, 13, 14, 15, 50, 57, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 79, 80, 83, 85, 86, 87, 88, 89, 90, 92, 93, 102, 104, 105, 106, 156, 157, 177, 180, 181, 184, 188, 189, 195, 196, 197, 206, 207, 208, 209, 210, 211, 212, 213, 214, 242, 258, 259, 261, 262, 263, 265, 268, 273, 274, 275, 276, 277, 282, 284, 293, 294, 295, 305, 307, 309], "quantit": [0, 131, 207, 208, 212, 213, 239, 265, 280], "A": [0, 1, 3, 4, 6, 7, 8, 13, 14, 15, 17, 29, 33, 41, 51, 54, 56, 58, 60, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 143, 151, 191, 201, 206, 207, 208, 210, 212, 213, 225, 246, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 283, 285, 286, 289, 293, 300, 302, 304, 305, 307, 308, 309, 310, 311, 312, 321], "set": [0, 2, 4, 6, 7, 13, 14, 15, 16, 17, 29, 33, 41, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 80, 82, 83, 85, 86, 87, 88, 89, 90, 101, 102, 104, 105, 106, 107, 113, 118, 119, 138, 139, 140, 141, 151, 152, 157, 181, 185, 186, 188, 190, 191, 197, 206, 207, 208, 210, 212, 213, 242, 246, 251, 252, 253, 254, 258, 259, 262, 263, 264, 265, 268, 273, 280, 281, 283, 285, 287, 302, 305, 306, 307, 312, 313, 314, 315, 316, 318, 320, 321, 322], "throughout": [0, 249, 273, 316], "code": [0, 7, 139, 196, 205, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 225, 245, 247, 256, 257, 259, 262, 267, 275, 276, 280, 281, 283, 301, 305, 306, 309, 310, 315, 316, 317], "them": [0, 13, 14, 15, 17, 55, 60, 61, 62, 63, 65, 66, 71, 72, 75, 76, 83, 87, 89, 102, 105, 205, 230, 242, 244, 250, 251, 252, 253, 254, 257, 262, 279, 280, 283, 284, 289, 293, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323], "encourag": [0, 1, 6, 212, 263, 266, 278, 279, 281, 291, 300, 307, 312, 315], "combin": [0, 6, 14, 15, 41, 60, 61, 62, 63, 65, 71, 72, 205, 273, 275, 280, 287, 290, 314, 316, 320, 321], "In": [0, 6, 7, 13, 14, 15, 29, 33, 41, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 83, 85, 86, 87, 88, 89, 94, 102, 104, 105, 106, 119, 151, 152, 180, 181, 191, 197, 205, 206, 207, 208, 210, 212, 213, 230, 239, 240, 242, 244, 245, 251, 252, 253, 254, 256, 280, 283, 285, 296, 297, 300, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 320, 321, 322], "particular": [0, 191, 240, 251, 252, 253, 254, 296, 300, 315, 318, 320], "oplist": [0, 56, 58, 64, 80, 93, 240, 262, 275], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 20, 28, 29, 31, 32, 33, 36, 38, 39, 40, 41, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 124, 129, 137, 138, 140, 141, 142, 143, 147, 150, 151, 152, 157, 160, 162, 166, 174, 176, 178, 180, 181, 182, 183, 185, 188, 191, 192, 193, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 235, 239, 240, 243, 247, 250, 251, 252, 253, 254, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 293, 294, 295, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "when": [0, 4, 5, 6, 9, 12, 13, 14, 15, 16, 50, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 83, 85, 86, 87, 88, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 136, 141, 143, 151, 162, 181, 188, 191, 194, 196, 197, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 240, 251, 252, 253, 254, 258, 259, 263, 264, 266, 267, 268, 269, 273, 275, 276, 277, 278, 281, 283, 290, 294, 295, 302, 304, 309, 310, 312, 314, 315, 320], "calcul": [0, 3, 5, 6, 7, 8, 9, 10, 12, 16, 17, 44, 45, 46, 50, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 120, 178, 180, 181, 191, 192, 196, 198, 199, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 220, 221, 239, 242, 244, 251, 252, 253, 254, 257, 258, 259, 261, 262, 263, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 293, 294, 295, 297, 300, 301, 305, 309, 312, 313, 318, 321, 323], "averag": [0, 6, 7, 15, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 89, 91, 191, 206, 207, 208, 209, 210, 212, 213, 214, 240, 265, 273, 275, 280, 287, 308, 310, 312, 321], "brillouin": [0, 56, 58, 64, 66, 67, 71, 72, 90, 91, 131, 199, 206, 207, 208, 210, 212, 213, 239, 280, 308, 318], "zone": [0, 56, 58, 64, 66, 67, 71, 72, 90, 91, 131, 199, 206, 207, 208, 210, 212, 213, 239, 280, 308, 318], "see": [0, 2, 3, 4, 6, 7, 8, 13, 14, 15, 16, 29, 33, 41, 46, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 83, 84, 85, 87, 88, 89, 90, 91, 97, 102, 103, 104, 105, 106, 151, 180, 206, 207, 208, 210, 212, 213, 217, 218, 221, 240, 251, 252, 253, 254, 259, 262, 277, 280, 281, 283, 289, 290, 291, 294, 295, 296, 298, 304, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321], "select": [1, 2, 6, 15, 60, 61, 62, 63, 65, 71, 72, 74, 75, 80, 82, 83, 85, 86, 87, 88, 90, 101, 102, 104, 105, 106, 107, 192, 206, 207, 208, 210, 212, 213, 217, 218, 221, 230, 268, 269, 279, 310, 312, 313, 318, 320, 321, 322], "default": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 27, 29, 30, 31, 33, 34, 35, 37, 41, 43, 50, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 83, 85, 87, 88, 94, 102, 104, 105, 106, 109, 110, 111, 115, 116, 117, 119, 147, 153, 156, 157, 162, 178, 181, 182, 183, 188, 191, 196, 201, 206, 207, 208, 210, 211, 212, 213, 217, 218, 221, 225, 226, 235, 240, 247, 251, 252, 253, 254, 259, 262, 264, 265, 269, 270, 273, 274, 276, 281, 283, 297, 302, 303, 304, 307, 310, 312, 313, 316, 318, 320, 321, 322, 323], "can": [1, 3, 6, 7, 13, 14, 15, 16, 17, 29, 33, 41, 44, 50, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 73, 113, 120, 123, 131, 136, 142, 147, 151, 162, 181, 191, 192, 206, 207, 208, 210, 212, 213, 214, 227, 240, 246, 251, 252, 253, 254, 256, 257, 259, 262, 263, 265, 267, 268, 273, 274, 278, 281, 282, 283, 284, 289, 290, 293, 297, 300, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "fly": [1, 293], "while": [1, 6, 7, 15, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 94, 102, 104, 105, 106, 132, 147, 162, 206, 207, 208, 210, 212, 213, 225, 226, 240, 246, 247, 251, 252, 253, 254, 265, 280, 281, 284, 289, 293, 297, 300, 302, 309, 318, 320, 321], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 29, 30, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 119, 123, 131, 136, 138, 140, 142, 143, 147, 151, 152, 156, 157, 160, 162, 165, 172, 174, 178, 180, 181, 183, 184, 185, 188, 191, 192, 193, 196, 197, 198, 199, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 238, 239, 240, 242, 244, 245, 247, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 288, 289, 290, 293, 294, 295, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "far": [1, 44, 247, 284, 285, 290, 316, 318], "from": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 29, 44, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 79, 80, 82, 83, 85, 86, 87, 88, 92, 94, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 119, 121, 132, 138, 142, 146, 147, 150, 151, 152, 160, 162, 165, 166, 167, 171, 172, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 221, 222, 227, 230, 239, 240, 242, 244, 247, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 289, 293, 294, 295, 297, 298, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322], "complet": [1, 6, 13, 15, 60, 61, 62, 63, 65, 71, 72, 83, 87, 165, 191, 196, 199, 211, 222, 243, 258, 259, 263, 265, 269, 273, 285, 288, 293, 305, 306, 307, 308, 309, 310, 316], "we": [1, 6, 7, 15, 17, 44, 45, 51, 60, 61, 62, 63, 65, 67, 71, 72, 90, 181, 212, 251, 252, 253, 254, 256, 257, 263, 279, 280, 283, 284, 285, 289, 290, 291, 297, 300, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "user": [1, 2, 3, 5, 6, 9, 12, 15, 16, 39, 54, 60, 61, 62, 63, 65, 66, 67, 71, 72, 80, 82, 86, 90, 101, 107, 132, 140, 141, 142, 181, 184, 199, 206, 207, 208, 210, 212, 213, 256, 258, 259, 262, 265, 273, 276, 279, 281, 282, 283, 291, 296, 297, 300, 305, 312, 315, 317], "contribut": [1, 44, 45, 46, 47, 49, 50, 52, 53, 56, 58, 64, 75, 80, 83, 87, 102, 105, 206, 207, 208, 210, 212, 213, 218, 221, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 282, 291, 296, 308, 310, 317, 321, 322], "addit": [1, 6, 8, 13, 15, 17, 30, 55, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 113, 258, 268, 279, 281, 282, 290, 297, 307, 308, 309, 310, 318, 322, 323], "via": [1, 4, 6, 7, 10, 52, 56, 58, 64, 66, 67, 79, 94, 151, 152, 201, 206, 207, 208, 210, 212, 213, 264, 267, 282, 284, 285, 290, 297, 303, 309, 310], "pull": [1, 90, 285], "request": [1, 13, 14, 15, 16, 59, 60, 61, 62, 63, 65, 71, 72, 74, 75, 81, 83, 84, 85, 87, 88, 90, 100, 102, 103, 104, 105, 106, 120, 121, 143, 191, 206, 207, 208, 209, 210, 212, 213, 214, 240, 283, 285, 310, 312], "all": [1, 2, 3, 4, 6, 7, 13, 14, 15, 17, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 76, 80, 83, 85, 87, 88, 89, 102, 104, 105, 106, 113, 119, 129, 131, 132, 135, 136, 138, 141, 143, 146, 147, 150, 153, 157, 160, 162, 165, 166, 167, 171, 172, 174, 176, 178, 180, 181, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 230, 240, 246, 247, 250, 251, 252, 253, 254, 257, 258, 259, 261, 262, 263, 265, 267, 268, 269, 270, 276, 277, 278, 280, 281, 283, 284, 285, 287, 288, 289, 290, 293, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323], "method": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 29, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 83, 84, 85, 87, 88, 90, 91, 94, 97, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 119, 127, 131, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 238, 240, 242, 244, 245, 247, 251, 252, 253, 254, 257, 258, 259, 261, 265, 268, 274, 275, 276, 280, 281, 283, 284, 286, 289, 290, 293, 294, 295, 298, 306, 307, 309, 310, 312, 314, 315, 316, 319, 320, 322], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 29, 30, 33, 34, 37, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 128, 130, 138, 139, 140, 141, 143, 147, 150, 151, 152, 153, 156, 157, 160, 162, 165, 166, 170, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 227, 240, 251, 252, 253, 254, 257, 258, 260, 261, 262, 263, 265, 266, 268, 269, 275, 280, 283, 293, 298, 306, 307, 310, 312, 314, 318, 320], "object": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 83, 84, 85, 87, 88, 90, 94, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 118, 119, 131, 135, 138, 139, 142, 146, 147, 150, 151, 152, 153, 156, 157, 158, 162, 167, 170, 171, 172, 177, 181, 183, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 221, 225, 227, 240, 247, 250, 251, 252, 253, 254, 255, 257, 258, 259, 263, 264, 267, 268, 269, 273, 275, 280, 283, 293, 295, 297, 298, 302, 307, 308, 309, 310, 311, 313], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 118, 119, 123, 131, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 239, 240, 243, 248, 251, 252, 253, 254, 257, 258, 267, 268, 269, 273, 274, 275, 277, 280, 283, 290, 293, 294, 295, 298, 299, 307, 309, 312, 314, 316, 321, 323], "arg": [2, 3, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 47, 48, 49, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 83, 87, 102, 105, 109, 110, 111, 112, 113, 114, 119, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 251, 252, 253, 254, 293, 294, 295, 316], "kwarg": [2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 48, 49, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 83, 87, 102, 105, 109, 110, 111, 112, 113, 114, 119, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 251, 252, 253, 254, 262, 293, 294, 295, 314, 316], "inform": [2, 6, 7, 9, 10, 14, 44, 56, 58, 64, 140, 141, 176, 181, 182, 184, 185, 186, 188, 190, 191, 192, 197, 199, 201, 205, 206, 207, 208, 209, 210, 212, 213, 214, 251, 252, 253, 254, 258, 263, 264, 273, 278, 280, 281, 283, 293, 302, 305, 307, 309, 310, 314, 315, 316, 320], "mass": [2, 4, 6, 10, 24, 25, 61, 83, 87, 102, 117, 181, 191, 261, 273, 302, 304, 305, 306, 307, 309, 310], "name": [2, 3, 5, 6, 8, 9, 10, 12, 15, 16, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 109, 110, 111, 112, 113, 114, 128, 142, 143, 151, 152, 153, 162, 165, 181, 183, 188, 190, 191, 205, 208, 213, 222, 225, 226, 230, 235, 247, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 294, 295, 309, 310, 312, 313, 315, 316, 318, 319, 320, 321, 322], "number": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 27, 29, 33, 35, 38, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 83, 85, 87, 88, 93, 94, 102, 104, 105, 106, 138, 147, 160, 165, 166, 174, 178, 180, 181, 182, 183, 184, 185, 188, 190, 191, 194, 196, 198, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 220, 240, 251, 252, 253, 254, 259, 262, 263, 268, 273, 277, 278, 282, 290, 293, 302, 304, 305, 307, 308, 309, 312, 320, 321, 322, 323], "rang": [2, 3, 5, 6, 8, 9, 12, 13, 15, 16, 54, 55, 56, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 122, 123, 125, 126, 130, 131, 143, 178, 201, 239, 248, 263, 268, 280, 302, 306, 307, 309, 310, 312, 318, 319, 321], "handl": [2, 6, 7, 56, 63, 74, 75, 83, 109, 110, 111, 112, 113, 114, 143, 146, 147, 150, 157, 162, 166, 167, 171, 172, 176, 181, 183, 184, 188, 189, 191, 192, 194, 196, 197, 198, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 221, 225, 226, 227, 230, 240, 243, 245, 247, 258, 259, 260, 261, 262, 269, 273, 275, 276, 280, 282, 284, 304, 307, 309, 321], "speci": [2, 4, 6, 10, 15, 60, 61, 62, 63, 65, 71, 72, 181, 190, 191, 194, 200, 206, 207, 208, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 267, 273, 275, 290, 302, 304, 305, 306, 307, 309, 310, 319, 322], "radiu": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 16, 17, 56, 58, 64, 111, 112, 114, 262, 266, 299, 300, 306, 307, 308], "each": [2, 4, 6, 7, 13, 14, 15, 16, 17, 29, 33, 41, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 82, 83, 85, 87, 88, 94, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 138, 150, 160, 165, 166, 174, 181, 183, 185, 188, 191, 198, 199, 201, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 240, 247, 251, 252, 253, 254, 258, 263, 266, 283, 290, 293, 300, 302, 304, 307, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322], "pickl": [2, 275, 277], "abl": [2, 69, 70, 141, 251, 252, 253, 254, 273, 281, 312, 313, 314, 315, 316, 318, 321, 324], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 127, 128, 129, 130, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 251, 252, 253, 254, 259, 293, 294, 295, 298, 305, 306, 312, 314, 315, 316, 318, 321, 322], "z": [2, 3, 4, 5, 6, 7, 8, 10, 12, 16, 17, 29, 33, 41, 60, 62, 73, 86, 92, 121, 192, 218, 221, 222, 285, 290, 302, 304, 305, 306, 307, 309, 310, 312, 318, 319, 320, 321, 322], "int": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 27, 29, 30, 33, 35, 38, 39, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 81, 83, 84, 85, 87, 88, 90, 91, 94, 100, 102, 103, 104, 105, 106, 121, 123, 124, 129, 130, 138, 143, 147, 160, 162, 174, 180, 181, 182, 183, 184, 185, 188, 189, 191, 196, 197, 198, 199, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 221, 226, 251, 252, 253, 254, 258, 283, 285, 289, 293, 297, 307, 312, 322], "str": [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 29, 33, 41, 51, 56, 59, 60, 61, 62, 63, 65, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 127, 128, 129, 130, 138, 142, 143, 147, 150, 151, 152, 157, 160, 162, 165, 174, 179, 181, 183, 185, 187, 188, 191, 193, 194, 198, 200, 201, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 226, 227, 251, 252, 253, 254, 293, 298, 312, 316, 322], "kei": [2, 10, 55, 119, 157, 162, 178, 181, 191, 222, 251, 252, 253, 254, 259, 275, 282, 314, 320, 322], "lookup": [2, 6, 10, 136, 142, 151, 152, 157, 191, 258], "list": [2, 3, 4, 6, 7, 13, 14, 15, 16, 17, 29, 33, 40, 41, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 75, 81, 83, 84, 86, 87, 89, 90, 93, 100, 102, 103, 105, 125, 126, 131, 143, 153, 157, 162, 165, 166, 181, 188, 190, 191, 201, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 221, 222, 226, 240, 251, 252, 253, 254, 256, 258, 259, 262, 263, 268, 275, 280, 281, 285, 289, 290, 293, 296, 298, 300, 301, 302, 303, 306, 307, 309, 310, 314, 318, 320, 321, 322], "float": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 87, 88, 91, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 120, 130, 147, 156, 157, 162, 180, 181, 188, 191, 195, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 225, 226, 246, 258, 290, 293, 318], "option": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 129, 142, 143, 147, 150, 152, 156, 157, 162, 165, 166, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 240, 251, 252, 253, 254, 258, 263, 273, 274, 275, 281, 288, 289, 290, 293, 298, 300, 307, 312, 313, 314, 316, 317, 320, 321], "associ": [2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 73, 75, 83, 87, 94, 102, 105, 142, 143, 176, 181, 185, 186, 192, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 221, 226, 227, 240, 265, 273, 302, 307, 309, 310, 312, 314], "one": [2, 4, 6, 7, 13, 14, 15, 16, 17, 29, 31, 33, 41, 44, 45, 46, 47, 50, 52, 53, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 83, 85, 87, 88, 90, 97, 102, 104, 105, 106, 108, 136, 138, 143, 147, 151, 152, 160, 162, 165, 166, 174, 178, 180, 181, 182, 183, 184, 185, 188, 191, 196, 197, 198, 199, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 240, 243, 246, 250, 251, 252, 253, 254, 256, 257, 263, 264, 265, 266, 267, 268, 269, 273, 274, 276, 280, 281, 282, 283, 285, 288, 289, 290, 293, 297, 300, 302, 304, 305, 306, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "specifi": [2, 6, 7, 13, 15, 16, 17, 29, 33, 41, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 81, 83, 84, 85, 87, 88, 90, 94, 100, 102, 103, 104, 105, 106, 119, 128, 136, 150, 180, 181, 191, 196, 200, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 251, 252, 253, 254, 259, 265, 282, 289, 302, 305, 306, 307, 308, 309, 312, 313, 314, 318, 322], "periodict": [2, 6, 259], "tag": [2, 3, 4, 5, 6, 8, 9, 12, 16, 319], "arbitrari": [2, 6, 7, 16, 74, 75, 83, 85, 87, 88, 90, 102, 104, 105, 106, 197, 259, 275, 276, 320], "design": [2, 6, 7, 17, 285, 312, 316, 320], "similar": [2, 6, 14, 90, 151, 152, 263, 265, 269, 282, 307], "differ": [2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 51, 54, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 83, 85, 87, 88, 93, 94, 102, 104, 105, 106, 178, 191, 192, 196, 197, 201, 205, 206, 207, 208, 210, 211, 212, 213, 240, 241, 245, 247, 251, 252, 253, 254, 256, 259, 273, 280, 281, 282, 283, 284, 287, 289, 293, 297, 300, 302, 303, 306, 307, 308, 309, 310, 314, 318, 319, 320, 321, 322, 323], "label": [2, 10, 56, 162, 181, 199, 259, 308, 310, 316, 318], "properti": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 119, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 240, 251, 252, 253, 254, 258, 284, 285, 313, 320], "__init__": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 119, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 251, 252, 253, 254, 293, 294, 295, 298, 316], "none": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 27, 29, 30, 31, 33, 34, 35, 39, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 126, 128, 129, 130, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 251, 252, 253, 254, 259, 262, 265, 276, 293, 295, 298, 299, 307, 308, 310, 312, 318, 320, 321, 322, 324], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 29, 34, 41, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 143, 146, 147, 150, 156, 157, 158, 162, 165, 166, 167, 170, 171, 172, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 205, 206, 207, 210, 212, 213, 214, 217, 218, 219, 220, 221, 222, 225, 226, 227, 251, 252, 253, 254, 257, 278, 279, 281, 293, 294, 295, 298, 299, 316, 319, 323], "copi": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 109, 110, 111, 113, 114, 119, 138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 251, 252, 253, 254, 259, 262, 274, 308, 310, 320], "equal": [2, 3, 4, 5, 6, 8, 9, 12, 13, 15, 16, 17, 20, 55, 56, 58, 60, 62, 63, 64, 65, 72, 74, 75, 76, 83, 85, 86, 87, 88, 102, 104, 105, 106, 108, 109, 110, 111, 114, 206, 207, 208, 210, 212, 213, 218, 221, 276, 297, 307, 308], "other": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 60, 61, 62, 63, 65, 66, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 162, 181, 196, 197, 199, 206, 207, 208, 210, 211, 212, 213, 230, 242, 244, 251, 252, 253, 254, 258, 259, 260, 266, 273, 276, 280, 281, 283, 285, 289, 290, 293, 304, 307, 312, 313, 314, 315, 316, 319, 320, 321, 323], "r": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 60, 61, 62, 63, 65, 66, 67, 71, 72, 74, 75, 80, 83, 85, 87, 88, 90, 94, 102, 104, 105, 106, 109, 114, 120, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 259, 263, 265, 268, 285, 286, 289, 297, 306, 307, 308, 309, 310, 314, 318, 319, 323], "true": [2, 3, 4, 6, 7, 9, 10, 13, 14, 15, 16, 17, 20, 29, 33, 34, 37, 41, 44, 45, 46, 47, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 81, 83, 84, 85, 87, 88, 90, 92, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 120, 138, 142, 143, 150, 157, 160, 165, 174, 176, 181, 183, 185, 188, 191, 192, 194, 198, 199, 200, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 220, 221, 222, 225, 240, 251, 252, 253, 254, 275, 283, 293, 294, 298, 299, 307, 309, 310, 312, 314, 316, 318, 319, 320, 322, 323], "psi": [2, 3, 5, 8, 9, 12, 16, 74, 75, 80, 83, 85, 86, 87, 88, 90, 92, 93, 94, 102, 104, 105, 106, 208, 213, 307], "fals": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 28, 29, 30, 32, 33, 34, 36, 37, 40, 41, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 81, 83, 84, 85, 87, 88, 90, 92, 100, 102, 103, 104, 105, 106, 110, 142, 143, 147, 150, 162, 165, 166, 171, 176, 181, 191, 192, 194, 200, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 251, 252, 253, 254, 262, 265, 275, 276, 293, 299, 307, 309, 310, 312, 314, 316, 318, 320], "same": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 56, 58, 60, 61, 62, 63, 64, 65, 68, 71, 72, 74, 75, 77, 78, 82, 83, 85, 86, 87, 88, 89, 90, 93, 95, 96, 98, 99, 101, 102, 104, 105, 106, 107, 108, 124, 181, 182, 183, 187, 188, 190, 191, 193, 196, 199, 205, 206, 207, 208, 210, 211, 212, 213, 218, 221, 240, 247, 251, 252, 253, 254, 261, 263, 264, 269, 275, 276, 278, 280, 283, 288, 289, 290, 293, 303, 309, 312, 313, 314, 315, 318, 319, 320, 321, 322], "check": [2, 4, 6, 13, 14, 15, 17, 60, 61, 62, 63, 64, 65, 71, 72, 92, 94, 109, 110, 111, 112, 113, 114, 138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 251, 252, 253, 254, 256, 261, 262, 268, 273, 275, 290, 307, 309, 310, 312, 313, 315, 316, 323], "againt": 2, "bool": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 28, 29, 30, 32, 33, 34, 36, 37, 40, 41, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 81, 83, 84, 85, 87, 88, 90, 92, 94, 100, 102, 103, 104, 105, 106, 120, 138, 142, 143, 147, 150, 157, 160, 162, 165, 166, 174, 181, 183, 185, 188, 191, 192, 194, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 251, 252, 253, 254, 293, 298, 312, 316], "also": [2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 33, 50, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 83, 85, 87, 88, 90, 102, 104, 105, 106, 108, 113, 143, 147, 150, 178, 191, 200, 201, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 220, 221, 235, 240, 242, 245, 247, 251, 252, 253, 254, 258, 265, 268, 269, 273, 274, 280, 281, 282, 283, 289, 290, 293, 297, 304, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323], "radii": [2, 4, 6, 10, 13, 15, 60, 61, 62, 63, 65, 71, 72, 297, 306, 307], "els": [2, 4, 6, 7, 13, 14, 15, 16, 17, 60, 61, 62, 63, 64, 65, 68, 71, 72, 75, 83, 87, 102, 105, 119, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 227, 256, 283, 307, 309, 312, 316, 318], "thei": [2, 4, 5, 6, 7, 9, 12, 13, 15, 17, 29, 33, 56, 60, 61, 62, 63, 64, 65, 71, 72, 75, 83, 87, 91, 94, 102, 105, 111, 113, 191, 206, 207, 208, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 239, 245, 250, 251, 252, 253, 254, 268, 275, 276, 283, 293, 301, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 320, 321], "compar": [2, 3, 5, 6, 8, 9, 12, 13, 15, 16, 60, 61, 62, 63, 65, 71, 72, 206, 207, 208, 210, 212, 213, 293, 309], "wave": [2, 94, 273], "compon": [2, 13, 14, 15, 16, 17, 60, 61, 62, 63, 65, 71, 72, 73, 74, 75, 76, 83, 85, 86, 87, 88, 93, 94, 102, 104, 105, 106, 178, 182, 183, 188, 192, 196, 199, 211, 220, 259, 262, 290, 305, 310, 318, 323], "index": [2, 4, 6, 7, 13, 14, 15, 17, 29, 33, 41, 51, 55, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 83, 85, 87, 88, 94, 102, 104, 105, 106, 121, 124, 143, 182, 183, 188, 190, 191, 196, 199, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 221, 251, 252, 254, 259, 262, 267, 269, 273, 290, 307, 309, 310, 319], "iter": [2, 4, 6, 13, 14, 15, 50, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 119, 124, 138, 143, 160, 174, 183, 185, 188, 191, 198, 199, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 265, 282, 307, 317], "group": [2, 4, 6, 13, 15, 60, 61, 62, 63, 65, 71, 72, 116, 117, 138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 221, 244, 251, 252, 253, 254, 268, 273, 319], "loop": [2, 4, 6, 13, 14, 15, 56, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 81, 83, 84, 85, 87, 88, 90, 100, 102, 103, 104, 105, 106, 138, 160, 174, 178, 183, 185, 188, 191, 198, 199, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 240, 251, 252, 253, 254, 263, 265, 268, 269, 274, 276, 285, 306, 308, 316, 317], "two": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 30, 31, 33, 40, 41, 50, 54, 55, 58, 60, 61, 62, 63, 65, 68, 71, 72, 74, 75, 83, 85, 87, 88, 93, 102, 104, 105, 106, 178, 182, 183, 188, 196, 199, 201, 206, 207, 208, 210, 211, 212, 213, 214, 240, 250, 251, 252, 253, 254, 265, 268, 269, 276, 278, 279, 280, 281, 282, 283, 285, 289, 290, 296, 302, 307, 308, 312, 314, 316, 317, 318, 320, 321], "share": [2, 251, 252, 254, 279, 312, 314], "togeth": [2, 6, 15, 33, 60, 61, 62, 63, 65, 71, 72, 217, 218, 221, 240, 251, 252, 253, 254, 273, 280, 282, 289, 291, 314, 317], "current": [2, 4, 6, 7, 13, 14, 15, 17, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 81, 84, 91, 94, 100, 103, 113, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 240, 246, 251, 252, 253, 254, 263, 265, 266, 268, 269, 270, 273, 281, 284, 285, 293, 297, 301, 303, 305, 307, 309, 310, 312, 313, 317, 319, 321], "otherwis": [2, 13, 15, 17, 20, 44, 45, 46, 47, 50, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 119, 143, 166, 181, 191, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 251, 252, 253, 254, 258, 281, 300, 302, 312, 316, 318, 320, 323], "singl": [2, 4, 6, 7, 8, 14, 16, 56, 58, 63, 64, 65, 74, 75, 83, 85, 87, 88, 90, 102, 104, 105, 106, 143, 162, 181, 205, 206, 207, 208, 210, 212, 213, 240, 263, 265, 275, 285, 290, 293, 302, 306, 307, 309, 312, 313], "type": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 35, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 117, 120, 128, 151, 156, 157, 162, 165, 166, 178, 180, 181, 182, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 245, 251, 252, 253, 254, 257, 258, 262, 268, 283, 293, 306, 310, 312, 321], "maxr": [2, 4, 6, 268, 302, 304, 305, 306, 307, 309, 310], "maximum": [2, 4, 6, 7, 9, 16, 44, 45, 51, 74, 75, 83, 85, 87, 88, 96, 97, 99, 102, 104, 105, 106, 112, 191, 302, 307, 312, 319, 321], "calc": [2, 6, 10], "ang": [2, 3, 5, 6, 7, 8, 9, 10, 12, 15, 16, 17, 33, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 91, 102, 109, 110, 111, 114, 117, 150, 156, 157, 181, 182, 183, 199, 200, 245, 246, 273, 308, 309, 310, 323], "detail": [2, 6, 7, 8, 13, 15, 16, 29, 33, 41, 46, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 83, 84, 85, 87, 88, 89, 91, 97, 102, 103, 104, 105, 106, 131, 180, 206, 207, 208, 210, 212, 213, 260, 283, 289, 293, 294, 295, 296, 297, 307, 309, 310, 312, 315, 316, 320], "argument": [2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 29, 30, 33, 41, 48, 49, 50, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 101, 102, 103, 105, 107, 109, 110, 111, 112, 113, 114, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 240, 242, 244, 251, 252, 253, 254, 258, 259, 261, 262, 263, 265, 268, 269, 287, 294, 295, 302, 307, 312, 314, 318, 320, 322], "remov": [2, 4, 6, 7, 13, 14, 15, 55, 56, 59, 60, 61, 62, 63, 65, 71, 72, 74, 75, 81, 83, 84, 85, 87, 88, 90, 100, 102, 103, 104, 105, 106, 119, 143, 257, 258, 261, 262, 263, 267, 268, 269, 273, 274, 275, 276, 277, 282, 285, 290, 293, 301, 307, 309, 312, 321, 322], "without": [2, 6, 15, 56, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 128, 151, 162, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 221, 222, 251, 252, 253, 254, 259, 267, 273, 277, 282, 314, 317, 321], "array_lik": [2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 29, 33, 41, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 150, 182, 183, 187, 188, 193, 196, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 221, 293], "indic": [2, 4, 6, 7, 13, 14, 15, 29, 33, 41, 51, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 81, 83, 84, 85, 86, 87, 88, 89, 100, 102, 103, 104, 105, 106, 109, 110, 111, 113, 114, 123, 143, 191, 194, 200, 201, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 251, 252, 254, 262, 265, 268, 275, 306, 307, 309, 312, 318, 320, 321, 322], "sub": [2, 4, 6, 7, 13, 14, 15, 16, 59, 60, 61, 62, 63, 65, 71, 72, 73, 74, 75, 81, 83, 84, 85, 87, 88, 89, 90, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 258, 259, 265, 267, 268, 269, 272, 275, 280, 282, 285, 290, 302, 307, 308, 309, 310], "retain": [2, 4, 6, 7, 13, 14, 15, 17, 51, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 109, 110, 206, 207, 208, 210, 212, 213, 263, 293], "scale": [2, 3, 4, 5, 6, 8, 9, 12, 14, 15, 16, 17, 60, 61, 62, 63, 65, 71, 72, 109, 110, 111, 112, 113, 114, 263, 267, 270, 282, 283, 285, 293, 310, 321], "an": [2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 20, 27, 29, 33, 34, 37, 41, 44, 45, 46, 47, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 94, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 119, 120, 139, 142, 143, 147, 150, 151, 152, 162, 170, 176, 181, 191, 192, 196, 197, 199, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 226, 240, 246, 250, 251, 252, 253, 254, 258, 262, 263, 265, 266, 269, 273, 276, 278, 281, 282, 283, 284, 285, 287, 289, 290, 300, 301, 302, 304, 305, 307, 308, 309, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323], "equival": [2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 29, 33, 34, 37, 40, 41, 54, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 109, 112, 113, 151, 185, 186, 191, 197, 199, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 240, 250, 263, 265, 280, 290, 293, 303, 306, 307, 314, 318, 322], "factor": [2, 4, 5, 6, 12, 17, 57, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 115, 206, 207, 208, 210, 212, 213, 273, 275, 283, 297, 312, 320], "onli": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 29, 33, 41, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 100, 102, 103, 104, 105, 106, 110, 113, 121, 132, 142, 143, 147, 150, 157, 162, 166, 180, 181, 184, 191, 192, 199, 200, 201, 205, 206, 207, 208, 209, 210, 212, 213, 214, 247, 251, 252, 253, 254, 257, 258, 262, 263, 265, 269, 270, 273, 275, 276, 278, 280, 281, 282, 283, 284, 290, 293, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 322, 323], "subset": [2, 4, 6, 13, 15, 60, 61, 62, 63, 65, 71, 72, 75, 83, 87, 102, 105, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 265, 307, 309], "present": [2, 6, 14, 55, 83, 85, 87, 88, 119, 121, 129, 150, 162, 181, 182, 183, 191, 192, 201, 206, 207, 208, 210, 212, 213, 217, 218, 221, 225, 253, 312], "rais": [2, 4, 6, 7, 13, 14, 15, 20, 29, 33, 41, 55, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 119, 147, 181, 184, 191, 212, 240, 273, 313, 316], "valueerror": [2, 7, 13, 14, 15, 20, 33, 55, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "too": [2, 6, 13, 15, 17, 60, 61, 62, 63, 65, 71, 72, 259, 262, 268, 276, 283, 290, 291, 293, 308], "larg": [2, 6, 13, 15, 44, 55, 60, 61, 62, 63, 65, 71, 72, 188, 206, 207, 208, 210, 212, 213, 230, 251, 252, 253, 254, 258, 262, 266, 267, 268, 275, 282, 285, 290, 293, 300, 306, 307, 309, 310], "some": [2, 6, 7, 9, 15, 17, 30, 39, 60, 61, 62, 63, 65, 71, 72, 81, 83, 87, 100, 191, 206, 207, 208, 210, 212, 213, 239, 240, 251, 252, 253, 254, 257, 259, 262, 269, 272, 273, 275, 276, 279, 280, 281, 283, 293, 296, 297, 307, 309, 310, 312, 314, 315, 316, 317, 318, 320, 321, 322, 324], "outsid": [2, 6, 7, 14, 67, 113, 251, 252, 253, 254, 259, 320], "allow": [2, 6, 7, 13, 15, 51, 55, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 90, 109, 110, 111, 112, 113, 114, 142, 165, 196, 205, 206, 207, 208, 210, 211, 212, 213, 218, 221, 240, 250, 256, 257, 258, 259, 262, 264, 275, 283, 288, 298, 305, 307, 312, 314, 315, 317, 320], "symbol": [2, 6, 309], "short": [2, 10, 190, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 280, 286, 288, 289, 290, 291, 293, 309], "au": [2, 6, 10, 285, 302, 304, 305, 306, 307, 309, 310], "79": [2, 10], "tospher": [2, 3, 5, 8, 9, 12, 16, 109, 110, 111, 112, 113, 114], "center": [2, 3, 5, 6, 8, 9, 12, 16, 17, 28, 29, 32, 33, 64, 90, 109, 110, 111, 112, 113, 114, 261, 269, 273, 303, 307, 308, 309, 312, 313, 321], "sphere": [2, 3, 5, 6, 8, 9, 12, 13, 15, 16, 60, 61, 62, 63, 65, 71, 72, 109, 110, 111, 112, 113, 248, 250, 306, 307], "project": [3, 6, 60, 62, 79, 80, 82, 83, 85, 86, 87, 88, 92, 101, 102, 107, 165, 192, 208, 213, 214, 258, 274, 280, 283, 307, 309, 310, 320, 323], "consist": [3, 4, 5, 12, 13, 15, 29, 33, 34, 37, 40, 41, 60, 61, 62, 63, 65, 66, 67, 71, 72, 131, 247, 259, 262, 268, 280, 286, 301, 307, 315], "real": [3, 7, 20, 50, 60, 62, 66, 67, 74, 75, 83, 85, 87, 88, 94, 102, 104, 105, 106, 147, 162, 172, 181, 182, 183, 206, 207, 208, 210, 212, 213, 242, 244, 273, 275, 276, 280, 310, 312, 313, 321], "harmon": [3, 5, 8, 12, 16, 307], "sphericalorbit": [3, 8, 307, 309, 310], "assign": [3, 60, 62, 63, 71, 72, 276, 283, 305, 306, 307], "magnet": [3, 5, 8, 12, 16, 86, 92, 206, 207, 208, 210, 212, 213, 218, 221, 263, 285], "quantum": [3, 5, 8, 12, 16, 19, 199, 212, 262, 285, 286, 307, 322], "m": [3, 5, 6, 7, 8, 12, 13, 14, 15, 16, 18, 19, 20, 21, 30, 39, 46, 50, 56, 57, 60, 61, 62, 63, 65, 71, 72, 74, 75, 79, 80, 83, 85, 87, 88, 102, 104, 105, 106, 246, 251, 259, 281, 285, 286, 303, 307, 308, 310, 313, 318, 319, 322], "should": [3, 4, 6, 7, 13, 14, 15, 16, 17, 51, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 74, 75, 83, 85, 87, 88, 90, 91, 92, 93, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 129, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 240, 247, 251, 252, 253, 254, 262, 263, 264, 266, 267, 269, 273, 275, 276, 278, 279, 281, 283, 284, 289, 293, 296, 297, 298, 300, 304, 307, 309, 310, 312, 313, 316, 318, 320, 321, 322, 324], "alwai": [3, 6, 7, 17, 29, 33, 41, 55, 60, 61, 62, 63, 65, 66, 67, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 112, 138, 160, 174, 183, 184, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 240, 251, 252, 253, 254, 259, 262, 273, 283, 290, 304, 307, 312, 316, 318], "prefer": [3, 4, 206, 207, 208, 210, 212, 213, 268, 281, 293, 306, 309, 315, 316, 318, 321], "over": [3, 6, 9, 14, 36, 56, 58, 59, 60, 62, 63, 64, 72, 74, 75, 80, 81, 83, 84, 85, 86, 87, 88, 90, 100, 102, 103, 104, 105, 106, 107, 199, 201, 206, 207, 208, 210, 212, 213, 240, 258, 262, 265, 318, 321], "becaus": [3, 4, 5, 6, 8, 12, 13, 15, 16, 60, 61, 62, 63, 65, 71, 72, 83, 87, 102, 105, 206, 207, 208, 210, 212, 213, 225, 242, 251, 252, 253, 254, 265, 276, 281, 283, 304, 306, 307, 308, 309, 310, 312, 313, 315, 316, 318, 320, 321, 322, 323], "explicitli": [3, 6, 60, 62, 63, 72, 151, 210, 212, 240, 283, 307, 312, 320], "contain": [3, 4, 6, 7, 13, 14, 15, 16, 17, 29, 33, 41, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 74, 75, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 131, 143, 146, 147, 150, 151, 152, 156, 158, 167, 171, 172, 178, 180, 181, 182, 184, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 240, 251, 252, 253, 254, 263, 264, 275, 276, 280, 281, 283, 284, 288, 290, 291, 293, 295, 298, 307, 308, 309, 312, 314, 316, 320, 323], "ha": [3, 4, 6, 7, 8, 13, 14, 15, 17, 29, 33, 41, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 80, 82, 83, 85, 86, 87, 88, 90, 91, 92, 94, 101, 102, 104, 105, 106, 107, 112, 119, 120, 143, 165, 182, 183, 188, 191, 192, 196, 201, 205, 206, 210, 211, 218, 221, 226, 240, 251, 252, 253, 254, 262, 263, 264, 268, 269, 280, 282, 283, 285, 290, 293, 301, 304, 305, 306, 307, 309, 310, 312, 313, 314, 318, 320, 322], "radial": [3, 5, 8, 9, 12, 16, 111, 114, 307, 309], "part": [3, 5, 6, 7, 8, 9, 12, 13, 15, 16, 20, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 76, 147, 206, 207, 208, 209, 210, 212, 213, 214, 280, 281, 283, 290, 293, 301, 309, 310, 312, 316, 318, 320, 322], "defin": [3, 5, 6, 7, 8, 9, 12, 16, 29, 30, 33, 39, 41, 50, 52, 54, 59, 60, 62, 63, 74, 75, 80, 82, 83, 85, 86, 87, 88, 94, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 131, 139, 147, 181, 191, 196, 206, 207, 208, 210, 211, 212, 213, 217, 218, 221, 239, 247, 259, 264, 265, 266, 269, 273, 283, 284, 293, 297, 298, 300, 302, 304, 307, 309, 310, 312, 313, 322], "extern": [3, 142, 191, 238, 257, 283], "expand": [3, 6, 57, 60, 62, 67, 83, 85, 87, 88, 109, 110, 111, 112, 114, 126, 274, 280], "spheric": [3, 5, 6, 8, 12, 16, 306, 307], "y": [3, 5, 6, 7, 8, 12, 16, 17, 29, 30, 33, 41, 55, 60, 62, 73, 86, 92, 121, 192, 201, 217, 218, 221, 262, 285, 289, 290, 304, 305, 307, 309, 310, 312, 316, 318, 319, 320, 321], "m_l": [3, 5, 8, 12, 16], "theta": [3, 5, 8, 12, 16, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "varphi": [3, 5, 8, 12, 16], "1": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 39, 42, 43, 46, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 110, 115, 121, 123, 124, 127, 129, 131, 138, 143, 147, 160, 174, 178, 180, 181, 182, 183, 185, 187, 188, 191, 193, 196, 198, 199, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 221, 226, 240, 247, 251, 252, 253, 254, 256, 258, 261, 262, 263, 265, 266, 267, 268, 269, 271, 273, 275, 276, 281, 282, 283, 285, 286, 290, 293, 294, 295, 297, 298, 301, 303, 304, 306, 307, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324], "sqrt": [3, 5, 8, 12, 16, 74, 75, 78, 83, 85, 87, 88, 96, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 293], "frac": [3, 5, 6, 8, 12, 16, 46, 57, 74, 75, 77, 78, 83, 85, 87, 88, 89, 91, 95, 96, 99, 102, 104, 105, 106, 181, 206, 207, 208, 210, 212, 213, 290, 312, 321], "2l": [3, 5, 8, 12, 16], "4": [3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 20, 32, 33, 34, 36, 37, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 78, 86, 121, 123, 125, 127, 129, 180, 201, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 240, 247, 256, 257, 259, 261, 263, 269, 272, 274, 275, 276, 277, 280, 283, 286, 289, 297, 300, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323], "pi": [3, 5, 6, 8, 12, 16, 17, 56, 58, 64, 74, 75, 78, 83, 85, 87, 88, 90, 96, 99, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 293, 308], "l": [3, 5, 8, 12, 16, 55, 60, 74, 75, 83, 85, 87, 88, 99, 102, 104, 105, 106, 191, 275, 277, 285, 286, 297, 298, 307, 309, 310, 322], "e": [3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 33, 50, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 111, 117, 119, 138, 160, 174, 178, 181, 182, 183, 185, 188, 191, 192, 196, 198, 199, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 240, 247, 250, 251, 252, 253, 254, 258, 259, 262, 263, 265, 268, 269, 273, 280, 281, 282, 283, 285, 288, 289, 290, 293, 294, 298, 302, 305, 307, 308, 309, 310, 312, 313, 316, 317, 318, 320, 321], "p": [3, 5, 8, 12, 13, 15, 16, 17, 56, 60, 61, 62, 63, 65, 71, 72, 73, 79, 150, 206, 207, 208, 209, 210, 212, 213, 214, 245, 246, 262, 285, 297, 309], "co": [3, 5, 8, 12, 16, 280, 312], "phi_": [3, 5, 8, 12, 16, 60, 62, 206, 207, 208, 210, 212, 213], "lmn": [3, 5, 8, 12, 16], "mathbf": [3, 5, 8, 9, 12, 16, 50, 57, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 74, 75, 79, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 102, 104, 105, 106, 196, 205, 206, 207, 208, 210, 211, 212, 213, 242, 293, 307, 310], "where": [3, 4, 6, 7, 8, 13, 14, 15, 16, 17, 30, 36, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 80, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 101, 102, 104, 105, 106, 107, 178, 191, 196, 205, 206, 207, 208, 210, 211, 212, 213, 220, 226, 240, 247, 251, 252, 253, 254, 257, 264, 268, 273, 276, 283, 284, 289, 290, 293, 297, 300, 304, 305, 309, 312, 314, 315, 316, 318, 320, 321, 322, 323], "input": [3, 5, 6, 8, 10, 12, 14, 15, 16, 17, 44, 45, 46, 50, 52, 53, 56, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 83, 85, 87, 88, 92, 102, 104, 105, 106, 120, 121, 124, 131, 162, 181, 193, 198, 200, 206, 207, 208, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 225, 251, 252, 253, 254, 259, 263, 273, 280, 283, 288, 289, 298, 309, 310, 312, 315], "q0": [3, 4, 5, 6, 8, 9, 12, 16, 63, 297, 307, 309, 310], "initi": [3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16, 60, 61, 62, 63, 65, 66, 67, 71, 72, 112, 150, 199, 251, 252, 253, 254, 262, 265, 273, 280, 293, 301, 308, 309, 312, 313, 314, 316], "charg": [3, 4, 5, 6, 8, 9, 12, 16, 26, 60, 62, 63, 165, 191, 218, 259, 262, 272, 273, 276, 280, 285, 290, 297, 298], "exampl": [3, 4, 6, 7, 8, 9, 10, 13, 15, 16, 17, 29, 33, 41, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 90, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 123, 124, 125, 127, 128, 129, 130, 138, 151, 160, 162, 174, 181, 183, 185, 188, 191, 197, 198, 201, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 221, 225, 226, 240, 251, 252, 253, 254, 265, 280, 283, 290, 293, 294, 295, 298, 300, 301, 306, 307, 312, 314, 315, 316, 317, 318, 320, 321, 322, 323], "np": [3, 4, 6, 7, 15, 16, 17, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 83, 85, 87, 88, 94, 102, 104, 105, 106, 121, 156, 157, 180, 201, 205, 214, 240, 257, 259, 280, 301, 307, 308, 309, 310, 312, 314, 318, 320, 321, 323], "linspac": [3, 16, 240, 280, 307, 308, 310, 314, 320, 321, 323], "0": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 29, 30, 33, 41, 44, 45, 46, 47, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 108, 110, 111, 112, 115, 120, 121, 123, 124, 127, 131, 138, 143, 147, 150, 156, 157, 160, 174, 178, 180, 181, 182, 183, 185, 188, 191, 192, 195, 196, 198, 199, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 221, 222, 225, 226, 240, 246, 251, 252, 253, 254, 256, 281, 282, 283, 285, 290, 293, 294, 295, 297, 298, 300, 302, 304, 305, 306, 307, 308, 309, 310, 312, 314, 316, 318, 319, 320, 321, 322, 323], "5": [3, 4, 6, 7, 33, 41, 44, 45, 55, 56, 58, 60, 62, 63, 64, 72, 74, 75, 83, 85, 87, 88, 98, 102, 104, 105, 106, 108, 121, 123, 125, 127, 130, 178, 182, 183, 184, 188, 196, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 240, 256, 258, 262, 263, 266, 272, 276, 281, 283, 285, 286, 290, 293, 297, 300, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323], "50": [3, 54, 56, 58, 64, 306, 308, 314, 321, 323], "f": [3, 8, 16, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 119, 123, 179, 191, 196, 200, 207, 211, 212, 258, 283, 290, 297, 298, 307, 309, 310, 313, 314, 316, 323], "exp": [3, 16, 74, 75, 77, 78, 83, 85, 87, 88, 94, 95, 96, 102, 104, 105, 106, 257, 307, 312, 314, 323], "n": [3, 5, 6, 8, 12, 14, 16, 30, 39, 46, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 83, 85, 87, 88, 90, 102, 104, 105, 106, 178, 198, 201, 206, 207, 208, 210, 212, 213, 220, 247, 280, 281, 283, 285, 286, 297, 300, 303, 307, 308, 309, 313, 316, 319, 320, 322], "zeta": [3, 8, 16, 309], "orb1": [3, 6], "2": [3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 17, 18, 19, 20, 28, 31, 33, 34, 36, 37, 40, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 119, 121, 123, 124, 125, 127, 129, 130, 156, 157, 180, 181, 196, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 221, 226, 240, 246, 256, 259, 260, 263, 272, 273, 274, 275, 277, 278, 280, 282, 283, 285, 286, 289, 290, 293, 297, 298, 300, 301, 302, 304, 305, 307, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324], "orb2": [3, 6], "orb3": 3, "2pzz": [3, 314, 323], "orb4": 3, "2pzz1": [3, 309, 310, 322], "orb5": 3, "pz": [3, 310], "whether": [3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 28, 32, 36, 40, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 81, 83, 84, 85, 87, 88, 90, 92, 100, 102, 103, 104, 105, 106, 113, 115, 120, 138, 142, 147, 150, 160, 162, 165, 174, 181, 183, 185, 188, 191, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 251, 252, 253, 254, 268, 281, 293, 297, 309, 316, 317], "polar": [3, 5, 8, 12, 16, 60, 62, 63, 72, 73, 92, 93, 192, 199, 207, 212, 218, 221, 262, 275, 277, 285, 309, 318, 323], "shell": [3, 6, 8, 13, 15, 16, 60, 61, 62, 63, 65, 71, 72, 262, 285, 297, 298, 306, 322], "maxmimum": [3, 5, 8, 9, 12, 16], "creat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 29, 33, 34, 37, 41, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 94, 97, 113, 119, 137, 138, 143, 157, 183, 184, 188, 205, 206, 207, 208, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 225, 240, 251, 252, 253, 254, 257, 263, 265, 266, 267, 268, 269, 273, 279, 280, 281, 282, 283, 287, 289, 293, 297, 298, 300, 302, 304, 305, 306, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324], "exact": [3, 5, 6, 7, 8, 9, 12, 16, 66, 151, 152, 197, 209, 214, 251, 252, 253, 254, 308, 312, 313, 321], "possibli": [3, 5, 6, 7, 8, 9, 12, 14, 16, 17, 30, 56, 58, 60, 62, 63, 64, 72, 143, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 221], "comparison": [3, 5, 6, 8, 9, 12, 16, 251, 252, 253, 254, 270, 308, 314], "full": [3, 5, 6, 7, 8, 9, 12, 16, 56, 58, 64, 75, 83, 85, 87, 88, 102, 105, 113, 165, 178, 191, 206, 207, 208, 209, 210, 212, 213, 214, 240, 257, 290, 293, 297, 304, 305, 307, 309, 310, 312, 314, 316, 317], "tex": [3, 5, 8, 9, 12, 16], "orb": [3, 8, 9, 16, 302, 304, 305, 306, 307, 309, 310, 314, 323], "phi": [3, 5, 8, 9, 12, 16, 74, 75, 83, 85, 87, 88, 90, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 308], "given": [3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 33, 50, 55, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 74, 75, 83, 85, 87, 88, 91, 92, 102, 104, 105, 106, 119, 142, 153, 162, 181, 196, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 222, 243, 246, 250, 251, 252, 253, 254, 258, 263, 264, 265, 268, 276, 280, 293, 307, 308, 316, 318, 321], "point": [3, 5, 6, 7, 8, 12, 16, 17, 20, 44, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 75, 77, 78, 80, 83, 85, 87, 88, 90, 92, 93, 94, 95, 96, 98, 99, 102, 105, 108, 111, 112, 114, 147, 178, 187, 193, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 226, 240, 242, 251, 252, 253, 254, 258, 259, 267, 269, 273, 275, 276, 277, 282, 283, 290, 293, 300, 302, 305, 307, 308, 309, 310, 312, 316, 318, 320, 323], "more": [3, 5, 6, 7, 8, 12, 13, 15, 16, 41, 46, 55, 56, 60, 61, 62, 63, 65, 71, 72, 74, 75, 78, 80, 83, 85, 87, 88, 90, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 240, 245, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 269, 273, 274, 275, 276, 277, 281, 283, 289, 290, 305, 306, 309, 310, 313, 315, 316, 318, 320, 321, 323], "posit": [3, 4, 5, 6, 7, 8, 12, 15, 16, 17, 20, 29, 33, 41, 56, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 83, 85, 87, 88, 94, 96, 98, 99, 102, 104, 105, 106, 108, 178, 192, 206, 207, 208, 210, 212, 213, 250, 251, 252, 253, 254, 263, 290, 304, 307, 309, 310, 322], "vector": [3, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 29, 33, 36, 41, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 71, 72, 74, 75, 81, 83, 84, 85, 87, 88, 89, 90, 92, 93, 100, 102, 103, 104, 105, 106, 109, 110, 111, 114, 121, 147, 157, 181, 182, 183, 188, 193, 199, 206, 207, 208, 210, 212, 213, 259, 262, 263, 267, 273, 289, 293, 300, 302, 304, 307, 308, 310, 320, 321], "origin": [3, 5, 6, 7, 8, 12, 15, 16, 17, 20, 56, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 83, 85, 87, 88, 90, 92, 94, 109, 110, 111, 147, 206, 207, 208, 210, 212, 213, 259, 289, 293, 307, 308, 309], "basi": [3, 5, 6, 8, 12, 16, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 86, 87, 88, 89, 90, 102, 104, 105, 106, 162, 165, 166, 181, 185, 186, 188, 190, 191, 197, 199, 206, 207, 208, 210, 212, 213, 225, 240, 242, 258, 259, 262, 273, 285, 293, 307, 309], "valu": [3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 20, 44, 45, 47, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 76, 80, 81, 83, 84, 85, 87, 88, 93, 94, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 119, 121, 123, 139, 147, 156, 157, 162, 178, 180, 181, 182, 187, 191, 192, 193, 199, 201, 206, 207, 208, 209, 210, 212, 213, 214, 225, 226, 240, 245, 251, 252, 253, 254, 258, 259, 261, 262, 267, 274, 275, 283, 290, 293, 300, 306, 307, 308, 309, 312, 314, 318, 319, 320, 321, 322, 323], "numpi": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 44, 45, 50, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 178, 180, 181, 182, 188, 191, 200, 201, 206, 207, 208, 210, 212, 213, 218, 219, 220, 221, 225, 240, 257, 263, 269, 275, 280, 281, 293, 299, 301, 307, 308, 309, 310, 312, 314, 316, 318, 320, 321, 323], "ndarrai": [3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 17, 44, 45, 50, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 143, 165, 166, 178, 180, 181, 188, 191, 200, 206, 207, 208, 210, 212, 213, 219, 220, 240, 293], "psi_spher": [3, 5, 8, 12, 16], "cos_phi": [3, 5, 8, 12, 16], "coordin": [3, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 30, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 113, 121, 147, 150, 151, 181, 187, 192, 196, 199, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 221, 258, 259, 262, 268, 289, 290, 302, 306, 307, 309, 312, 314, 316, 318, 320, 321], "azimuth": [3, 5, 8, 12, 16, 307], "angl": [3, 5, 6, 8, 11, 12, 16, 17, 30, 60, 62, 74, 75, 83, 85, 87, 88, 90, 102, 104, 105, 106, 248, 275, 289], "x": [3, 5, 6, 7, 8, 12, 16, 17, 29, 30, 33, 38, 41, 55, 60, 62, 64, 73, 86, 92, 96, 98, 99, 108, 121, 180, 192, 201, 218, 221, 247, 262, 289, 290, 300, 304, 305, 307, 309, 310, 312, 316, 318, 319, 320, 321], "plane": [3, 5, 6, 7, 8, 12, 16, 17, 29, 33, 41, 56, 58, 64, 285, 290, 307, 310, 320, 321], "axi": [3, 4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 29, 33, 38, 41, 60, 61, 62, 63, 65, 67, 70, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 111, 180, 191, 307, 309, 310, 312, 320, 321], "actual": [3, 5, 8, 12, 16, 17, 60, 62, 63, 65, 66, 67, 71, 72, 240, 251, 252, 253, 254, 300, 309, 318, 322], "which": [3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 30, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 81, 83, 84, 85, 87, 88, 89, 91, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 119, 120, 123, 132, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 240, 246, 247, 250, 251, 252, 253, 254, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 278, 280, 281, 282, 283, 288, 289, 290, 291, 293, 297, 298, 300, 301, 302, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323], "faster": [3, 4, 5, 7, 8, 12, 13, 15, 16, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 80, 261, 264, 265, 268, 269, 274, 293, 294, 295, 312, 321, 322], "necessari": [3, 5, 7, 8, 12, 16, 83, 87, 113, 143, 181, 199, 205, 206, 207, 208, 210, 212, 213, 242, 244, 250, 281, 282, 283, 284, 307], "call": [3, 4, 5, 6, 7, 8, 12, 13, 15, 16, 20, 33, 50, 57, 60, 61, 62, 63, 65, 66, 67, 71, 72, 83, 84, 85, 87, 88, 102, 103, 105, 109, 110, 111, 112, 113, 114, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 238, 251, 252, 253, 254, 258, 261, 265, 268, 269, 281, 282, 283, 297, 298, 300, 307, 310, 312, 314, 315, 316, 321], "wavefunct": [3, 5, 8, 9, 12, 16, 83, 85, 87, 88, 90, 199, 239, 242, 259, 273, 298, 307, 309, 310, 314], "extend": [3, 5, 6, 8, 9, 12, 13, 15, 16, 17, 55, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 239, 257, 281, 282, 304, 307, 317, 319], "set_radi": [3, 8, 16], "updat": [3, 6, 8, 16, 56, 58, 64, 66, 67, 119, 184, 251, 252, 253, 254, 263, 265, 267, 269, 270, 272, 274, 281, 283, 315, 318, 323], "pass": [3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 29, 33, 41, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 81, 83, 84, 85, 87, 88, 90, 91, 92, 94, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 136, 143, 147, 162, 181, 182, 183, 184, 188, 191, 196, 197, 199, 205, 206, 207, 208, 210, 211, 212, 213, 240, 242, 251, 252, 253, 254, 256, 258, 259, 262, 267, 269, 281, 283, 294, 295, 302, 307, 312, 314, 316, 318, 320, 321], "spher": [3, 5, 8, 12, 16], "togrid": [3, 5, 8, 9, 12, 16, 307, 309], "precis": [3, 5, 8, 9, 12, 13, 15, 16, 59, 60, 61, 62, 63, 65, 66, 71, 72, 75, 81, 83, 84, 87, 100, 102, 103, 105, 143, 147, 150, 179, 181, 182, 194, 200, 226, 227, 264, 285, 293], "05": [3, 5, 6, 8, 9, 12, 16, 17, 19, 56, 58, 64, 75, 83, 87, 91, 102, 105, 312, 323], "c": [3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 26, 27, 35, 36, 43, 59, 60, 61, 62, 63, 65, 70, 71, 72, 75, 78, 79, 81, 83, 84, 87, 90, 100, 102, 103, 105, 112, 121, 124, 129, 191, 245, 246, 281, 283, 285, 286, 293, 300, 302, 307, 309, 310, 320, 321], "dtype": [3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 44, 45, 50, 51, 53, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 143, 156, 157, 182, 205, 218, 221, 225, 299, 304, 307, 310], "float64": [3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 60, 61, 62, 63, 65, 71, 72, 73, 143, 156, 157, 182, 218, 221, 225, 299, 307, 318], "separ": [3, 5, 6, 8, 9, 12, 16, 29, 30, 33, 41, 56, 58, 64, 86, 129, 191, 201, 251, 252, 253, 254, 257, 258, 262, 281, 283, 291, 302, 310, 314, 315, 320, 322], "between": [3, 5, 6, 8, 9, 12, 13, 15, 16, 17, 29, 30, 33, 34, 37, 38, 39, 41, 54, 56, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 89, 93, 102, 104, 105, 106, 118, 206, 207, 208, 210, 212, 213, 245, 247, 251, 256, 264, 265, 276, 283, 284, 285, 290, 293, 300, 306, 307, 308, 309, 312, 318, 321, 322], "voxel": [3, 5, 7, 8, 9, 12, 16, 273], "complex": [3, 5, 6, 8, 9, 12, 16, 20, 51, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 75, 83, 87, 94, 102, 105, 196, 211, 226, 247, 258, 259, 264, 273, 275, 283, 290, 293, 309, 310, 312, 313, 316, 320], "coeffici": [3, 5, 8, 9, 12, 16, 44, 45, 50, 53, 74, 75, 81, 83, 84, 85, 87, 88, 94, 100, 102, 103, 104, 105, 106, 206, 207, 208, 209, 210, 212, 213, 214, 239, 276, 293, 320], "box": [3, 5, 8, 9, 12, 16, 60, 62, 63, 72, 73, 109, 110, 259, 276, 281, 291, 299, 300, 320], "size": [3, 5, 6, 7, 8, 9, 12, 15, 16, 29, 33, 41, 57, 60, 61, 62, 63, 64, 65, 71, 72, 73, 83, 85, 86, 87, 88, 109, 110, 112, 113, 147, 181, 182, 196, 199, 206, 207, 208, 209, 210, 211, 212, 213, 214, 226, 279, 287, 293, 304, 307, 308, 309, 312, 316, 318, 319, 320, 321], "either": [3, 5, 6, 8, 9, 12, 15, 16, 17, 29, 33, 41, 56, 60, 61, 62, 63, 65, 71, 72, 86, 113, 119, 120, 178, 201, 205, 251, 252, 253, 254, 263, 279, 281, 290, 295, 309, 318, 320], "instanc": [3, 5, 6, 8, 9, 12, 15, 16, 30, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 83, 85, 87, 88, 90, 91, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 138, 151, 152, 160, 174, 183, 185, 188, 192, 196, 198, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 239, 242, 244, 251, 252, 253, 254, 259, 280, 282, 283, 288, 293, 302, 306, 307, 314], "someth": [3, 5, 6, 8, 9, 12, 16, 56, 58, 64, 283, 300, 313, 316], "would": [3, 5, 6, 8, 9, 12, 14, 15, 16, 60, 61, 62, 63, 65, 66, 67, 71, 72, 90, 188, 191, 197, 206, 207, 208, 209, 210, 212, 213, 214, 250, 262, 263, 280, 281, 283, 296, 300, 305, 309, 314, 315, 316, 317, 318, 320], "convert": [3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 56, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 109, 110, 111, 112, 113, 114, 118, 120, 125, 126, 182, 183, 199, 207, 208, 212, 213, 240, 245, 246, 247, 251, 252, 253, 254, 258, 259, 283, 289, 290, 294, 295, 308, 311, 312, 314], "proper": [3, 5, 6, 8, 9, 12, 16, 258, 307], "h": [4, 6, 56, 58, 63, 64, 66, 67, 68, 75, 83, 87, 90, 98, 102, 105, 108, 184, 188, 196, 197, 205, 210, 211, 212, 214, 225, 240, 245, 253, 257, 259, 262, 267, 268, 280, 285, 293, 302, 304, 305, 306, 307, 308, 309, 310, 314, 316, 318, 319, 323], "na": [4, 6, 15, 41, 60, 61, 62, 63, 65, 71, 72, 143, 147, 165, 166, 180, 206, 207, 208, 209, 210, 212, 213, 214, 226, 302, 304, 305, 306, 307, 309, 310], "like": [4, 6, 7, 8, 13, 14, 15, 17, 20, 29, 33, 41, 55, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 119, 123, 180, 191, 199, 201, 206, 207, 208, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 246, 251, 252, 253, 254, 262, 263, 283, 284, 288, 298, 300, 302, 308, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321], "minimum": [4, 6, 44, 45, 312, 318, 321], "data": [4, 6, 7, 13, 14, 15, 44, 45, 47, 50, 53, 55, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 141, 143, 147, 150, 156, 157, 162, 165, 166, 176, 178, 180, 181, 182, 185, 186, 192, 201, 206, 207, 208, 210, 212, 213, 226, 227, 240, 251, 252, 253, 254, 255, 257, 258, 262, 265, 268, 269, 273, 276, 281, 282, 287, 289, 290, 293, 298, 310, 312, 314, 315, 320, 321, 322], "duplic": [4, 6, 206, 207, 208, 210, 212, 213, 263], "hold": [4, 6, 13, 14, 15, 44, 59, 60, 61, 62, 63, 71, 72, 83, 84, 85, 102, 103, 258, 273, 307, 314], "multipl": [4, 6, 14, 17, 54, 55, 64, 94, 191, 239, 251, 252, 253, 254, 258, 259, 265, 268, 273, 275, 283, 302, 309, 310, 315, 316, 318, 320, 321, 322], "conveni": [4, 240, 290, 306, 312, 318, 320, 321, 322], "have": [4, 6, 7, 13, 14, 15, 17, 29, 33, 41, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 79, 83, 85, 87, 88, 92, 93, 97, 102, 104, 105, 106, 112, 113, 153, 190, 191, 206, 207, 208, 210, 212, 213, 217, 218, 221, 225, 239, 240, 251, 252, 253, 254, 257, 262, 266, 267, 268, 269, 275, 276, 277, 280, 283, 287, 289, 290, 293, 294, 295, 296, 298, 300, 301, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323], "million": 4, "If": [4, 5, 6, 7, 12, 13, 14, 15, 17, 29, 33, 41, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 75, 83, 85, 86, 87, 88, 90, 92, 93, 94, 102, 105, 109, 110, 111, 112, 113, 114, 119, 120, 137, 138, 143, 147, 151, 152, 162, 180, 181, 182, 183, 188, 191, 192, 196, 199, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 221, 247, 251, 252, 253, 254, 265, 266, 276, 278, 279, 281, 283, 288, 289, 290, 291, 293, 300, 301, 304, 306, 307, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323], "result": [4, 6, 7, 13, 14, 15, 16, 17, 46, 52, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 83, 87, 102, 105, 181, 196, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 240, 250, 251, 252, 253, 254, 258, 262, 283, 289, 290, 293, 300, 304, 307, 312, 313, 314, 317, 320, 323], "repeat": [4, 6, 13, 15, 17, 33, 54, 60, 61, 62, 63, 65, 71, 72, 251, 252, 253, 254, 261, 265, 268, 269, 277, 282, 287, 302, 312, 315, 318, 321], "time": [4, 6, 9, 13, 14, 15, 17, 54, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 83, 87, 180, 181, 206, 207, 208, 210, 212, 213, 222, 245, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 289, 290, 293, 307, 310, 312, 313, 314, 315, 316, 319, 320, 321, 322, 323], "uniqu": [4, 6, 7, 13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 73, 112, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254], "item": [4, 6, 33, 55, 56, 58, 64, 119, 201, 300, 305, 312, 314, 318, 319, 321], "dictionari": [4, 6, 59, 74, 75, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 165, 166, 191, 222, 251, 252, 253, 254, 258, 259, 262, 314, 316, 318, 320, 322], "total": [4, 6, 7, 13, 14, 15, 56, 58, 60, 62, 64, 80, 86, 90, 92, 107, 165, 180, 191, 206, 207, 208, 210, 212, 213, 218, 221, 222, 240, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 297, 302, 304, 307, 316, 322], "len": [4, 6, 7, 15, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 80, 83, 84, 86, 102, 103, 107, 192, 201, 307, 308, 309], "smaller": [4, 15, 16, 57, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 83, 85, 87, 88, 94, 102, 104, 105, 106, 300], "than": [4, 6, 13, 14, 15, 44, 45, 46, 47, 49, 50, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 94, 120, 181, 197, 201, 206, 207, 208, 210, 212, 213, 240, 259, 269, 293, 297, 304, 306, 307, 309, 310, 312, 320, 321, 322], "match": [4, 33, 56, 58, 64, 94, 129, 147, 165, 199, 251, 252, 253, 254, 290, 300, 312], "hydrogen": [4, 6, 8, 262, 302, 306, 309], "helium": 4, "altern": [4, 50, 54, 56, 80, 82, 86, 101, 107, 151, 240, 302, 307, 320], "order": [4, 6, 7, 13, 15, 16, 17, 29, 33, 41, 55, 60, 61, 62, 63, 65, 66, 71, 72, 74, 75, 79, 83, 85, 86, 87, 88, 92, 102, 104, 105, 106, 119, 157, 162, 180, 181, 191, 197, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 251, 252, 253, 254, 259, 262, 263, 269, 273, 275, 282, 284, 285, 289, 290, 296, 312, 315, 316, 318, 320, 321], "individu": [4, 6, 7, 17, 55, 56, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 83, 85, 87, 88, 90, 102, 104, 105, 106, 130, 240, 251, 252, 253, 254, 283, 290, 293, 307, 320], "entri": [4, 7, 13, 14, 15, 55, 60, 61, 62, 63, 65, 71, 72, 129, 191, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 262, 269, 312], "h_ghost": 4, "dict": [4, 6, 57, 59, 61, 63, 66, 67, 68, 74, 75, 90, 91, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 258, 312, 318, 319, 321, 323], "arrai": [4, 6, 7, 14, 15, 16, 17, 29, 33, 41, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 81, 83, 84, 85, 87, 88, 93, 94, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 150, 176, 191, 192, 196, 199, 200, 201, 206, 207, 208, 210, 211, 212, 213, 218, 221, 240, 251, 252, 253, 254, 258, 259, 261, 268, 269, 275, 290, 293, 304, 307, 310, 312, 314, 316, 318, 320], "add": [4, 6, 7, 15, 17, 51, 55, 60, 61, 62, 63, 65, 71, 72, 94, 142, 181, 183, 205, 250, 251, 252, 253, 254, 262, 263, 265, 269, 281, 282, 283, 307, 310, 315, 316, 321, 322], "append": [4, 6, 7, 15, 17, 29, 33, 41, 44, 45, 46, 47, 50, 51, 52, 53, 55, 60, 61, 62, 63, 65, 71, 72, 90, 191, 201, 251, 252, 254, 263, 265, 275, 289, 290, 310], "version": [4, 17, 180, 184, 189, 197, 247, 251, 252, 253, 254, 256, 261, 262, 263, 278, 280, 293, 313], "new": [4, 6, 7, 13, 14, 15, 17, 44, 45, 46, 47, 49, 50, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 119, 138, 160, 174, 183, 184, 185, 188, 198, 201, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 246, 251, 252, 253, 254, 257, 258, 262, 268, 269, 273, 281, 283, 293, 309, 310, 311, 312, 313, 315], "ad": [4, 6, 7, 13, 15, 17, 51, 60, 61, 62, 63, 65, 71, 72, 83, 87, 136, 191, 245, 251, 252, 253, 254, 257, 258, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 283, 290, 297, 300, 307, 309, 312, 322], "merg": [4, 6, 15, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 205, 240, 251, 252, 253, 254, 279, 307, 308, 312], "against": [4, 6, 60, 62, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "hassam": 4, "both": [4, 6, 7, 30, 41, 60, 62, 63, 66, 67, 68, 69, 70, 72, 76, 121, 122, 191, 206, 207, 208, 210, 212, 213, 217, 251, 252, 253, 254, 258, 259, 262, 284, 289, 293, 294, 295, 300, 308, 309, 310, 314, 321], "firsto": [4, 6], "first": [4, 6, 7, 13, 14, 15, 17, 29, 33, 41, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 79, 83, 85, 87, 88, 90, 94, 102, 104, 105, 106, 111, 119, 182, 183, 188, 191, 206, 207, 208, 210, 212, 213, 217, 218, 221, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 285, 289, 290, 293, 294, 295, 297, 300, 302, 304, 305, 306, 307, 308, 309, 310, 316, 318, 319, 320, 321, 322, 323], "correspond": [4, 6, 7, 10, 13, 14, 15, 17, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 83, 85, 86, 87, 88, 89, 90, 92, 93, 102, 104, 105, 106, 111, 119, 121, 143, 157, 166, 181, 188, 190, 191, 196, 199, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 221, 225, 240, 242, 247, 251, 252, 253, 254, 276, 289, 290, 293, 294, 295, 302, 305, 306, 307, 310, 316, 323], "consecut": [4, 6, 124, 215, 216, 217, 218, 219, 220, 221, 222, 318], "formula": [4, 90, 93], "system": [4, 6, 7, 13, 15, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 80, 81, 83, 84, 85, 87, 88, 90, 91, 92, 93, 100, 102, 103, 104, 105, 106, 121, 178, 184, 189, 195, 197, 206, 207, 208, 210, 212, 213, 219, 222, 243, 261, 265, 268, 269, 275, 281, 282, 285, 286, 293, 300, 305, 307, 308, 309, 310, 320], "hill": 4, "chemic": [4, 68, 77, 78, 95, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 269], "notat": [4, 83, 87, 212, 251, 252, 253, 254, 301], "case": [4, 6, 7, 13, 14, 15, 16, 17, 29, 33, 41, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 75, 83, 86, 87, 89, 94, 102, 105, 119, 121, 123, 129, 142, 143, 151, 152, 180, 181, 191, 192, 193, 197, 205, 206, 207, 208, 210, 212, 213, 226, 240, 247, 251, 252, 253, 254, 256, 258, 262, 263, 265, 266, 268, 269, 270, 273, 275, 279, 283, 297, 300, 302, 304, 305, 307, 308, 309, 312, 313, 314, 315, 316, 318, 320, 321, 322], "sensit": [4, 142, 285], "group_atom_data": 4, "resolv": [4, 60, 62, 83, 85, 87, 88, 92, 165, 191, 206, 207, 208, 210, 212, 213, 258, 262, 265, 283, 308, 320], "length": [4, 6, 7, 13, 15, 17, 27, 30, 34, 35, 36, 37, 38, 39, 43, 51, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 76, 77, 78, 82, 95, 96, 98, 99, 101, 102, 108, 109, 110, 111, 112, 114, 124, 147, 187, 193, 206, 207, 208, 210, 212, 213, 245, 251, 252, 253, 254, 258, 262, 282, 290, 302, 307, 309], "self": [4, 6, 7, 11, 13, 14, 15, 16, 17, 20, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 83, 84, 85, 87, 88, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 131, 138, 139, 140, 141, 160, 174, 183, 185, 188, 196, 198, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 239, 251, 252, 253, 254, 258, 259, 269, 273, 274, 275, 276, 280, 283, 284, 285, 286, 293, 294, 295, 298, 306, 312, 316, 318], "slice": [4, 6, 7, 124, 129, 262, 265, 267], "6": [4, 6, 10, 15, 17, 18, 22, 27, 30, 33, 35, 39, 41, 43, 55, 60, 61, 62, 63, 65, 71, 72, 75, 83, 87, 102, 105, 121, 123, 125, 127, 130, 201, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 256, 257, 283, 285, 286, 293, 297, 300, 302, 307, 308, 309, 310, 312, 314, 316, 318, 319, 320, 321, 322, 323], "3": [4, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 20, 29, 30, 31, 33, 41, 46, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 83, 85, 87, 88, 89, 90, 91, 92, 102, 104, 105, 106, 109, 110, 111, 113, 121, 123, 124, 127, 129, 130, 143, 147, 178, 181, 182, 191, 199, 201, 205, 206, 207, 208, 209, 210, 212, 213, 214, 218, 220, 221, 226, 240, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 263, 273, 275, 276, 277, 281, 283, 284, 285, 286, 289, 297, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323], "orb_data": 4, "arang": [4, 6, 15, 16, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 201, 251, 252, 253, 254], "10": [4, 6, 7, 8, 16, 20, 33, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 80, 83, 85, 87, 88, 89, 91, 102, 104, 105, 106, 129, 178, 206, 207, 208, 210, 212, 213, 240, 256, 260, 265, 266, 273, 277, 278, 282, 283, 285, 286, 297, 302, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 318, 319, 320, 321, 322], "reshap": [4, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 201, 214, 240], "group_data": [4, 258], "7": [4, 6, 7, 10, 13, 15, 19, 44, 45, 60, 61, 62, 63, 65, 66, 67, 71, 72, 127, 130, 201, 206, 207, 208, 210, 212, 213, 256, 263, 275, 281, 283, 285, 286, 290, 305, 307, 308, 309, 310, 312, 314, 316, 318, 319, 320, 321, 322, 323], "8": [4, 6, 40, 90, 125, 130, 201, 256, 257, 262, 278, 283, 285, 286, 302, 307, 308, 309, 310, 312, 314, 316, 318, 319, 320, 321, 322, 323], "9": [4, 6, 7, 17, 24, 30, 55, 56, 58, 64, 125, 201, 256, 257, 281, 283, 285, 286, 307, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323], "along": [4, 6, 7, 13, 15, 17, 29, 33, 38, 41, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 83, 85, 86, 87, 88, 89, 91, 92, 102, 104, 105, 106, 109, 110, 111, 143, 181, 206, 207, 208, 210, 212, 213, 226, 240, 251, 252, 253, 254, 266, 289, 290, 293, 300, 304, 305, 307, 310, 312, 321], "split": [4, 6, 29, 33, 41, 128, 240, 251, 252, 253, 254, 258, 310, 314], "note": [4, 5, 6, 12, 13, 14, 15, 16, 17, 30, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 101, 102, 104, 105, 106, 107, 120, 147, 157, 181, 185, 186, 187, 191, 193, 196, 199, 205, 206, 207, 208, 210, 211, 212, 213, 214, 222, 240, 251, 252, 253, 254, 262, 273, 276, 281, 283, 289, 290, 294, 295, 297, 298, 300, 302, 304, 305, 306, 307, 308, 310, 312, 316, 318, 319, 320, 321, 322, 323], "doe": [4, 6, 7, 13, 14, 15, 17, 54, 56, 60, 61, 62, 63, 65, 67, 68, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 119, 147, 178, 180, 184, 191, 196, 197, 205, 206, 207, 208, 210, 211, 212, 213, 240, 251, 252, 253, 254, 259, 265, 269, 273, 280, 281, 293, 305, 307, 312, 313, 316, 318, 320, 321, 323], "necessarili": [4, 6, 13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 190, 206, 207, 208, 210, 212, 213, 312], "mean": [4, 6, 7, 13, 14, 15, 29, 30, 33, 41, 60, 61, 62, 63, 65, 71, 72, 80, 92, 112, 138, 191, 206, 207, 208, 210, 212, 213, 217, 218, 221, 261, 263, 268, 273, 283, 289, 293, 300, 302, 307, 309, 312], "nor": [4, 15, 60, 61, 62, 63, 65, 71, 72, 206, 207, 208, 210, 212, 213], "explicit": [4, 6, 29, 33, 41, 206, 207, 208, 210, 212, 213, 265, 307], "insert": [4, 6, 29, 33, 41, 55, 56, 64, 119, 251, 252, 254], "context": [4, 143], "slowest": 4, "yield": [4, 6, 7, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 124, 138, 160, 174, 183, 185, 188, 198, 199, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 278, 289, 290, 307, 309], "per": [4, 6, 7, 13, 14, 15, 16, 17, 34, 37, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 75, 83, 85, 87, 88, 92, 93, 102, 104, 105, 106, 109, 110, 111, 114, 182, 183, 188, 206, 207, 208, 210, 212, 213, 235, 240, 259, 273, 304, 305, 306, 307, 309], "tupl": [4, 6, 13, 14, 15, 16, 17, 30, 44, 45, 50, 51, 53, 60, 61, 62, 63, 65, 71, 72, 89, 119, 124, 128, 130, 191, 208, 213, 251, 252, 253, 254, 258, 267, 293], "much": [4, 6, 13, 14, 15, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 259, 260, 261, 263, 264, 266, 268, 269, 273, 274, 275, 276, 283, 284, 294, 295, 309, 316, 320, 321, 323], "lasto": [4, 6, 206, 207, 208, 209, 210, 212, 213, 214], "last": [4, 6, 13, 15, 17, 29, 33, 41, 55, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 90, 119, 165, 166, 191, 206, 207, 208, 209, 210, 212, 213, 214, 240, 251, 252, 253, 254, 267, 283, 302, 304, 308, 309, 312, 313, 320, 322], "determin": [4, 6, 7, 13, 14, 15, 16, 17, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 83, 85, 87, 88, 94, 102, 104, 105, 106, 142, 206, 207, 208, 210, 212, 213, 251, 258, 263, 268, 289, 297, 307, 310, 316, 320, 323], "scalar": [4, 14, 15, 17, 58, 60, 61, 62, 63, 65, 71, 72, 206, 207, 208, 210, 212, 213], "nspeci": 4, "io": [4, 6, 17, 60, 61, 62, 63, 65, 71, 72, 142, 151, 152, 153, 230, 262, 265, 267, 268, 269, 275, 280, 289, 312, 318, 321, 322], "prepend": [4, 6, 15, 17, 60, 61, 62, 63, 65, 71, 72, 201, 263, 265], "reduc": [4, 6, 13, 15, 17, 23, 55, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 165, 178, 187, 196, 199, 206, 207, 208, 209, 210, 211, 212, 213, 214, 258, 259, 261, 263, 265, 273, 287, 293, 307, 308, 309, 312, 316, 318], "in_plac": 4, "non": [4, 6, 13, 14, 15, 16, 17, 28, 32, 34, 36, 40, 58, 60, 61, 62, 63, 65, 66, 67, 71, 72, 73, 74, 75, 80, 83, 85, 86, 87, 88, 89, 90, 92, 94, 102, 104, 105, 106, 111, 141, 180, 192, 195, 206, 207, 208, 209, 210, 212, 213, 214, 218, 221, 242, 257, 258, 259, 262, 264, 265, 268, 275, 276, 277, 278, 282, 285, 304, 305, 306, 307, 309, 310, 318, 320, 321], "reorder": [4, 6, 13, 15, 60, 61, 62, 63, 65, 71, 72, 180, 215, 216, 217, 218, 219, 220, 221, 222], "so": [4, 5, 6, 7, 10, 12, 13, 15, 60, 61, 62, 63, 64, 65, 71, 72, 73, 80, 111, 140, 181, 191, 206, 207, 208, 210, 212, 213, 238, 251, 252, 253, 254, 262, 273, 276, 280, 283, 290, 293, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323], "ascend": [4, 6, 55, 75, 83, 87, 102, 105], "start": [4, 6, 29, 33, 41, 55, 56, 58, 64, 79, 115, 120, 122, 129, 130, 138, 160, 174, 183, 185, 188, 191, 198, 201, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 226, 259, 281, 289, 302, 307, 312, 315, 316, 317, 318, 321], "exist": [4, 7, 13, 14, 15, 60, 61, 62, 63, 64, 65, 71, 72, 178, 191, 206, 207, 208, 210, 212, 213, 240, 251, 252, 253, 254, 259, 265, 293], "re": [4, 6, 14, 15, 60, 61, 62, 63, 65, 66, 67, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 240, 273, 275, 281, 305, 306, 309], "done": [4, 6, 147, 251, 252, 253, 254, 259, 268, 281, 289, 293, 300, 304, 307, 309, 313, 315, 316, 320, 321], "place": [4, 6, 13, 14, 15, 17, 29, 33, 41, 55, 60, 61, 62, 63, 65, 68, 71, 72, 74, 75, 83, 85, 87, 88, 90, 94, 102, 104, 105, 106, 262, 277, 279, 280, 317, 320], "rep": [4, 6, 7, 13, 15, 17, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 307], "replac": [4, 6, 15, 44, 45, 46, 47, 50, 52, 53, 60, 61, 62, 63, 64, 65, 71, 72, 129, 259, 269, 273, 275, 307, 322], "wai": [4, 6, 13, 14, 15, 16, 60, 61, 62, 63, 65, 71, 72, 197, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 257, 265, 268, 279, 283, 285, 305, 306, 307, 310, 312, 313, 314, 316, 318, 320, 321], "routin": [4, 6, 7, 13, 14, 15, 16, 17, 30, 39, 54, 56, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 83, 84, 85, 87, 88, 92, 94, 102, 103, 105, 113, 131, 141, 156, 192, 206, 207, 208, 210, 212, 213, 242, 244, 247, 248, 250, 259, 262, 264, 266, 268, 269, 275, 277, 280, 282, 294, 295, 304, 307, 318], "defer": [4, 6, 109, 110, 111, 112, 113, 114], "its": [4, 6, 7, 13, 15, 17, 29, 33, 41, 60, 61, 62, 63, 65, 71, 72, 90, 251, 252, 253, 254, 262, 268, 280, 281, 283, 309, 312, 313, 314, 315, 316, 318, 321], "replace_atom": 4, "atom_from": 4, "atom_to": 4, "adapt": [4, 44, 256, 262, 281, 315], "anoth": [4, 6, 15, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 246, 280, 283, 289, 298, 307, 310, 315, 318, 321], "warn": [4, 13, 15, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 75, 83, 87, 102, 105, 140, 141, 206, 207, 208, 209, 210, 212, 213, 214, 230, 258, 259, 261, 283, 323], "found": [4, 6, 10, 29, 30, 33, 41, 56, 119, 150, 162, 165, 178, 181, 191, 199, 209, 214, 222, 239, 278, 279, 280, 293, 305, 306, 320], "noth": [4, 6], "happen": [4, 13, 15, 17, 60, 61, 62, 63, 65, 71, 72, 208, 213, 301, 312, 315, 316, 320], "keyerror": [4, 119], "userwarn": [4, 6, 283], "revers": [4, 6, 17, 55, 60, 62, 63, 64, 66, 67, 72, 180, 261, 285, 310], "enabl": [4, 6, 10, 11, 16, 37, 64, 75, 83, 84, 85, 87, 102, 103, 105, 136, 183, 188, 191, 205, 225, 238, 240, 243, 250, 251, 252, 253, 254, 257, 258, 259, 261, 262, 263, 265, 267, 268, 269, 272, 273, 274, 275, 276, 281, 282, 283, 287, 289, 292, 293, 298, 301, 303, 304, 305, 308], "specie_index": 4, "swap": [4, 6, 7, 13, 15, 17, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 262, 276], "b": [4, 6, 7, 13, 15, 17, 33, 50, 56, 60, 61, 62, 63, 65, 70, 71, 72, 121, 129, 137, 191, 199, 206, 207, 208, 210, 212, 213, 240, 250, 265, 266, 276, 277, 283, 285, 286, 300, 303, 307, 309, 310, 313, 319, 320, 321], "swap_atom": 4, "tile": [4, 6, 7, 13, 15, 17, 60, 61, 62, 63, 65, 66, 67, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 258, 259, 265, 267, 268, 269, 287, 307, 310, 320, 323], "_exponentialorbit": [5, 12], "gaussian": [5, 7, 80, 82, 83, 84, 86, 97, 101, 102, 103, 107, 178, 239, 262, 307, 308, 310], "contract": [5, 12, 286], "depend": [5, 6, 12, 17, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 138, 160, 174, 178, 183, 185, 188, 191, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 240, 251, 252, 253, 254, 259, 262, 263, 273, 280, 283, 285, 288, 293, 304, 310, 312, 314, 318, 319, 321, 322], "r_l": 5, "sum": [5, 6, 7, 12, 17, 55, 56, 58, 60, 63, 64, 74, 75, 83, 85, 86, 87, 88, 90, 94, 102, 104, 105, 106, 107, 110, 181, 182, 183, 188, 192, 205, 206, 207, 208, 210, 212, 213, 240, 262, 269, 283, 287, 293, 307, 309, 310, 321], "c_i": [5, 12], "alpha_i": [5, 12, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "opt": [5, 12, 115, 191, 283, 298], "signific": [5, 12, 251, 252, 254, 262], "chang": [5, 6, 7, 12, 13, 14, 15, 20, 30, 39, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 80, 83, 85, 87, 88, 102, 104, 105, 106, 178, 196, 199, 205, 207, 211, 212, 251, 252, 253, 254, 256, 257, 263, 264, 265, 266, 267, 268, 269, 273, 274, 276, 277, 282, 283, 302, 306, 307, 312, 313, 316, 318, 320, 321, 322, 323], "feedback": [5, 12, 262, 316], "you": [5, 6, 7, 12, 13, 15, 60, 61, 62, 63, 65, 71, 72, 75, 83, 85, 87, 88, 94, 102, 105, 151, 152, 162, 181, 191, 196, 199, 206, 207, 208, 209, 210, 211, 212, 213, 214, 225, 240, 251, 252, 253, 254, 263, 266, 278, 279, 281, 283, 290, 291, 293, 300, 301, 307, 309, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324], "pleas": [5, 6, 12, 13, 15, 29, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 162, 181, 199, 206, 207, 208, 210, 212, 213, 262, 263, 279, 281, 285, 289, 291, 294, 295, 304, 309, 323], "give": [5, 7, 12, 17, 251, 252, 253, 254, 262, 283, 297, 300, 312, 313, 315, 316, 318, 319, 320, 321, 323], "princip": [5, 8, 12, 111], "alpha": [5, 6, 12, 17, 46, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 89, 91, 93, 94, 102, 104, 105, 106, 107, 165, 166, 206, 207, 208, 210, 212, 213, 222, 293, 310], "exponenti": [5, 12, 307], "gener": [5, 8, 10, 12, 13, 15, 44, 45, 50, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 80, 83, 85, 86, 87, 88, 89, 94, 102, 104, 105, 106, 124, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 239, 247, 251, 252, 253, 254, 256, 258, 259, 262, 268, 269, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 300, 306, 307, 310, 312, 313, 316, 317, 318, 319, 320, 322], "convers": [5, 6, 12, 20, 60, 62, 63, 72, 115, 131, 147, 198, 206, 207, 208, 210, 212, 213, 245, 257, 258, 259, 265, 273, 280, 287], "onlin": [5, 12], "tabl": [5, 10, 12, 115, 116, 117, 118, 136, 142, 151, 152, 191, 201, 206, 207, 208, 209, 210, 212, 213, 214, 247, 258, 263, 280, 281, 290], "coeff": [5, 12, 59, 81, 84, 100, 103, 293], "consid": [5, 6, 9, 12, 13, 14, 15, 17, 59, 60, 61, 62, 63, 65, 71, 72, 75, 80, 81, 83, 84, 87, 100, 102, 103, 105, 111, 156, 157, 181, 199, 206, 207, 208, 210, 212, 213, 239, 265, 281, 283, 293, 317, 318], "1e": [5, 6, 7, 9, 12, 59, 60, 62, 63, 66, 67, 68, 75, 80, 81, 83, 84, 87, 91, 100, 102, 103, 105, 109, 110, 111, 112, 114, 207, 212, 274, 293, 299], "keyword": [5, 6, 12, 13, 15, 16, 56, 57, 58, 60, 61, 62, 63, 64, 65, 71, 72, 90, 91, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 251, 252, 253, 254, 259, 262, 265, 268, 269, 275, 314, 322], "xyz": [6, 17, 121, 151, 152, 162, 180, 206, 207, 208, 209, 210, 212, 213, 214, 227, 258, 259, 263, 276, 289, 307, 309, 310, 312, 320, 321, 323], "sc": [6, 7, 17, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 143, 147, 150, 158, 167, 181, 183, 187, 193, 198, 199, 205, 225, 226, 227, 238, 258, 259, 262, 285, 303, 304, 305, 306, 307, 309, 310], "supercellchild": [6, 7, 56, 58, 64, 187, 193], "lattic": [6, 7, 15, 17, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 147, 181, 193, 199, 262, 267, 273, 293, 300, 302, 304, 305, 307, 308, 310, 320, 321], "regard": [6, 7, 14, 17, 64, 75, 83, 87, 97, 102, 105, 180, 184, 240, 263, 273, 280, 297, 307, 309, 310], "It": [6, 7, 13, 15, 16, 17, 44, 56, 58, 60, 61, 62, 63, 65, 71, 72, 83, 87, 94, 109, 110, 111, 112, 113, 114, 142, 143, 199, 206, 207, 208, 210, 212, 213, 235, 251, 252, 253, 254, 258, 263, 264, 265, 268, 269, 273, 278, 279, 280, 281, 283, 297, 300, 306, 307, 309, 312, 313, 314, 315, 316, 318, 320, 321, 322], "structur": [6, 13, 14, 15, 17, 29, 30, 33, 40, 41, 56, 57, 60, 61, 62, 63, 65, 66, 67, 71, 72, 76, 83, 85, 87, 88, 184, 188, 191, 197, 206, 207, 208, 210, 212, 213, 225, 239, 240, 242, 251, 252, 253, 254, 258, 259, 265, 267, 268, 269, 275, 280, 281, 284, 285, 287, 301, 304, 312, 313, 316, 318, 319, 320, 321], "simpl": [6, 13, 15, 42, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 119, 131, 239, 247, 258, 262, 280, 283, 285, 297, 303, 304, 305, 307, 310, 312, 313, 314, 315, 316, 318, 322, 323], "assum": [6, 13, 15, 46, 60, 61, 62, 63, 65, 71, 72, 86, 92, 93, 147, 180, 188, 199, 262, 275, 290, 300, 301, 310, 312], "angstrom": [6, 7, 17, 273, 290, 323], "long": [6, 90, 258, 268, 306], "kept": [6, 64, 181, 251, 252, 253, 254], "irrespect": 6, "squar": [6, 44, 74, 75, 83, 85, 87, 88, 93, 102, 104, 105, 106, 129, 196, 211, 251, 252, 253, 254, 263, 290, 306, 312, 314, 323], "supercel": [6, 7, 13, 15, 56, 58, 60, 61, 62, 63, 64, 65, 66, 71, 72, 74, 75, 83, 85, 87, 88, 94, 102, 104, 105, 106, 143, 146, 147, 150, 157, 158, 162, 167, 171, 181, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 221, 225, 226, 227, 258, 259, 263, 264, 266, 267, 268, 269, 273, 275, 301, 302, 304, 305, 306, 307, 309, 310, 323], "nsc": [6, 7, 13, 15, 17, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 258, 263, 268, 302, 304, 305, 306, 307, 309, 310, 312, 320, 321, 323], "print": [6, 13, 15, 55, 60, 61, 62, 63, 65, 71, 72, 124, 181, 201, 240, 258, 264, 275, 278, 283, 297, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 316, 318, 319, 321], "00794": [6, 302, 304, 305, 306, 309], "00000": [6, 302, 304, 305, 306, 308, 309], "volum": [6, 7, 17, 56, 58, 64, 91, 109, 110, 111, 112, 114, 259, 278], "0000e": 6, "01": [6, 7, 15, 60, 61, 62, 63, 65, 71, 72, 90, 178, 201, 285, 308, 318], "th": [6, 17, 74, 75, 293, 308], "retriev": [6, 7, 10, 13, 14, 15, 16, 17, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 82, 83, 85, 87, 88, 101, 141, 151, 152, 153, 162, 181, 182, 183, 188, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 230, 251, 252, 253, 254, 259, 264, 265, 267, 269, 273, 274, 275, 304], "describ": [6, 7, 13, 14, 15, 17, 60, 61, 62, 63, 65, 71, 72, 73, 74, 75, 81, 87, 88, 89, 92, 93, 100, 102, 105, 106, 110, 131, 206, 207, 208, 210, 212, 213, 243, 284, 307, 308, 309, 310], "period": [6, 7, 10, 13, 15, 17, 29, 33, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 83, 87, 206, 207, 208, 210, 212, 213, 243, 258, 261, 262, 268, 273, 285, 289, 300, 305, 309, 310, 320], "super": [6, 7, 17, 265, 302, 316], "cubic": [6, 16, 28, 29, 32, 33, 42, 303], "g": [6, 13, 15, 33, 60, 61, 62, 63, 65, 66, 67, 71, 72, 90, 96, 115, 117, 181, 206, 207, 208, 210, 212, 213, 245, 247, 251, 252, 253, 254, 258, 259, 263, 281, 285, 286, 290, 293, 307, 309, 310, 312, 313, 316, 317, 318, 320, 321], "follow": [6, 10, 13, 15, 30, 33, 55, 57, 60, 61, 62, 63, 65, 71, 72, 89, 93, 119, 206, 207, 208, 210, 212, 213, 214, 222, 245, 246, 251, 252, 253, 254, 256, 257, 262, 265, 268, 279, 280, 281, 282, 283, 290, 293, 301, 305, 306, 307, 309, 312, 313, 316, 317, 320], "estim": [6, 50, 56, 58, 64, 196, 211], "although": [6, 113, 212, 251, 252, 253, 254, 312, 315, 321], "possibl": [6, 7, 13, 14, 15, 17, 56, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 138, 143, 146, 147, 150, 157, 160, 162, 166, 167, 171, 172, 174, 176, 181, 183, 184, 185, 188, 189, 191, 192, 194, 196, 197, 198, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 221, 225, 226, 227, 251, 252, 253, 254, 262, 275, 283, 286, 288, 289, 290, 291, 297, 312, 313, 315, 317, 318, 320, 321, 322], "recommend": [6, 151, 196, 211, 259, 279, 281, 293, 301, 313, 314, 316], "": [6, 7, 14, 16, 18, 19, 21, 28, 30, 32, 36, 44, 45, 50, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 102, 104, 105, 106, 108, 119, 120, 129, 130, 131, 188, 191, 196, 206, 207, 208, 210, 211, 212, 213, 222, 226, 239, 240, 242, 246, 251, 252, 253, 254, 258, 265, 275, 278, 283, 284, 285, 286, 290, 293, 297, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323], "dispatch": [6, 56, 58, 64, 109, 110, 111, 112, 113, 114, 240, 257, 259], "ase": [6, 311], "ASE": [6, 39, 258, 276, 280, 282, 284], "py": [6, 251, 252, 253, 254, 257, 263, 265, 272, 277, 283], "how": [6, 7, 17, 50, 56, 58, 60, 62, 64, 90, 109, 110, 111, 112, 113, 114, 131, 138, 143, 205, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 258, 259, 279, 290, 293, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324], "rij": [6, 13, 15, 60, 61, 62, 63, 65, 71, 72, 265, 269], "ia": [6, 13, 15, 17, 60, 61, 62, 63, 65, 71, 72, 265, 306], "ja": [6, 206, 207, 208, 210, 212, 213], "r_": [6, 8, 60, 61, 62, 63, 65, 71, 72, 206, 207, 208, 210, 212, 213, 307], "ij": [6, 50, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 89, 102, 104, 105, 106], "r_j": [6, 74, 75, 83, 85, 87, 88, 94, 102, 104, 105, 106], "r_i": [6, 297], "union": [6, 14, 44, 45, 46, 47, 50, 51, 52, 53, 113, 250, 273], "_supportsarrai": [6, 51], "ani": [6, 7, 13, 14, 15, 16, 20, 44, 45, 50, 51, 53, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 102, 109, 110, 111, 112, 113, 114, 120, 181, 191, 201, 206, 207, 208, 210, 212, 213, 217, 218, 221, 250, 251, 252, 253, 254, 256, 269, 274, 279, 281, 283, 285, 288, 289, 290, 293, 294, 295, 296, 304, 307, 312, 313, 314, 316, 319, 320, 321, 323], "_nestedsequ": [6, 51], "byte": [6, 51], "atomcategori": 6, "genericcategori": 6, "shape": [6, 7, 8, 13, 14, 15, 17, 56, 57, 59, 60, 61, 62, 63, 65, 71, 72, 74, 75, 80, 81, 83, 84, 85, 86, 87, 88, 89, 92, 100, 102, 103, 104, 105, 106, 107, 124, 131, 143, 147, 178, 191, 199, 206, 207, 208, 210, 212, 213, 220, 240, 248, 259, 264, 273, 280, 284, 290, 299, 300, 309, 310, 312, 316, 320, 323], "a2isc": 6, "integ": [6, 7, 17, 20, 30, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 75, 83, 87, 102, 105, 121, 143, 162, 181, 191, 199, 206, 207, 208, 209, 210, 212, 213, 214, 226, 265, 290, 307], "multi": [6, 14, 90, 191, 206, 207, 208, 210, 212, 213, 269, 273, 285], "dimension": [6, 11, 14, 56, 58, 60, 62, 63, 64, 71, 72, 91, 285], "flatten": [6, 17], "befor": [6, 17, 55, 66, 67, 68, 69, 70, 75, 76, 79, 83, 87, 102, 105, 138, 160, 174, 183, 185, 188, 196, 198, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 221, 251, 252, 253, 254, 275, 283, 290, 294, 295, 307, 308, 309, 310, 315, 320, 321, 322], "thu": [6, 13, 15, 44, 55, 56, 60, 61, 62, 63, 65, 66, 67, 71, 72, 90, 147, 196, 199, 206, 207, 208, 210, 211, 212, 213, 240, 263, 266, 267, 279, 282, 293, 304, 307, 309, 310, 311], "2d": [6, 91, 131, 201, 259, 280, 285, 286, 304, 305, 312, 316, 323], "1d": [6, 56, 74, 75, 83, 85, 87, 88, 90, 91, 102, 104, 105, 106, 131, 201, 280, 290, 300, 312], "a2o": [6, 206, 207, 208, 209, 210, 212, 213, 214, 309, 310], "said": [6, 7, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "particularli": [6, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 273], "handi": [6, 54, 263, 269, 275, 307], "want": [6, 7, 15, 55, 60, 61, 62, 63, 65, 71, 72, 83, 85, 87, 88, 191, 199, 206, 207, 208, 209, 210, 212, 213, 214, 225, 240, 251, 252, 253, 254, 281, 283, 291, 307, 309, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322], "tb": [6, 139, 140, 141], "model": [6, 13, 15, 60, 61, 62, 63, 65, 71, 72, 157, 188, 205, 282, 284, 305, 307, 308, 310, 313, 314], "preserv": [6, 13, 15, 60, 61, 62, 63, 65, 71, 72, 275], "offset": [6, 14, 15, 17, 44, 45, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 110, 258, 312], "a2sc": 6, "a2transpos": [6, 275], "atoms1": 6, "atoms2": 6, "transpos": [6, 13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 257, 258, 259, 275, 276], "connect": [6, 13, 14, 15, 56, 60, 61, 62, 63, 65, 71, 72, 90, 188, 206, 207, 208, 210, 212, 213, 265, 267, 275, 283, 304], "get": [6, 7, 10, 13, 15, 33, 56, 60, 61, 62, 63, 65, 71, 72, 75, 83, 87, 102, 105, 119, 151, 162, 165, 181, 191, 201, 206, 207, 208, 209, 210, 212, 213, 214, 226, 251, 252, 253, 254, 259, 267, 275, 280, 283, 288, 307, 309, 310, 312, 315, 320, 321, 322, 323], "site": [6, 30, 60, 62, 63, 66, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 276, 283, 305, 307, 308, 319], "j": [6, 13, 15, 17, 22, 23, 57, 60, 61, 62, 63, 65, 71, 72, 73, 74, 75, 83, 85, 87, 88, 89, 93, 94, 102, 104, 105, 106, 115, 205, 275, 278, 285, 286, 309], "coupl": [6, 13, 15, 60, 61, 62, 63, 65, 66, 67, 71, 72, 91, 94, 191, 265, 268, 275, 282, 285, 293, 304, 305], "sinc": [6, 17, 33, 56, 67, 74, 75, 83, 85, 87, 88, 90, 102, 104, 105, 106, 112, 180, 184, 191, 197, 206, 207, 208, 210, 212, 213, 240, 247, 251, 252, 253, 254, 258, 262, 269, 275, 280, 283, 293, 307, 308, 309, 310, 312, 313, 314, 316, 318, 320, 321], "gr": [6, 56], "geom": [6, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56, 66, 67, 143, 146, 192, 197, 205, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 221, 225, 257, 261, 282, 290, 303, 304, 305, 307, 308, 310, 311, 312, 313, 314, 316, 319, 320, 322, 323], "graphen": [6, 27, 30, 35, 37, 38, 43, 56, 66, 67, 205, 217, 218, 221, 262, 280, 282, 285, 286, 301, 303, 307, 311, 313, 314, 316, 319, 320, 323], "close": [6, 13, 15, 36, 44, 45, 60, 61, 62, 63, 65, 71, 72, 90, 136, 138, 143, 144, 146, 147, 149, 150, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 258, 266, 268, 274, 275, 293, 304, 306, 307, 308], "int32": [6, 304, 318], "14": [6, 68, 259, 283, 285, 307, 309, 310, 312, 316, 318, 320, 321, 322], "must": [6, 7, 13, 14, 15, 16, 17, 29, 33, 41, 44, 45, 46, 47, 49, 50, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 79, 83, 87, 90, 94, 102, 105, 113, 142, 143, 196, 200, 211, 225, 242, 283, 289, 290, 310, 312, 313, 316, 318], "simpli": [6, 13, 15, 20, 56, 60, 61, 62, 63, 65, 71, 72, 83, 85, 87, 88, 90, 94, 178, 247, 267, 275, 281, 307, 309, 310, 312, 317, 318], "do": [6, 7, 13, 15, 17, 33, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 80, 83, 84, 85, 86, 87, 88, 90, 92, 102, 103, 104, 105, 106, 107, 162, 178, 183, 191, 192, 196, 199, 206, 207, 208, 210, 211, 212, 213, 219, 239, 240, 242, 244, 251, 252, 253, 254, 259, 262, 263, 265, 266, 269, 273, 275, 276, 280, 281, 283, 288, 289, 290, 291, 293, 294, 295, 300, 302, 305, 307, 308, 309, 312, 314, 315, 316, 318, 320, 321, 324], "prend": 6, "attach": [6, 7, 44, 45, 46, 47, 50, 52, 53, 67, 142, 147, 177, 195, 267, 282, 309], "add_vacuum": [6, 7, 17], "vacuum": [6, 7, 17, 21, 29, 33, 41, 262, 266, 309], "amount": [6, 7, 17, 60, 62, 74, 75, 80, 83, 85, 87, 88, 102, 104, 105, 106, 251, 252, 254, 282, 293], "dir": [6, 312], "ref": [6, 171], "rad": [6, 11, 17, 60, 62, 120, 275, 308], "direct": [6, 7, 13, 15, 17, 27, 33, 35, 38, 43, 50, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 75, 83, 86, 87, 89, 91, 92, 101, 102, 105, 107, 138, 180, 181, 188, 206, 207, 208, 210, 212, 213, 218, 221, 240, 243, 248, 251, 252, 253, 254, 258, 259, 262, 266, 289, 290, 293, 300, 302, 304, 305, 309, 310, 314, 318, 320, 321], "refer": [6, 7, 8, 13, 15, 17, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 74, 75, 80, 81, 83, 84, 85, 87, 88, 90, 100, 102, 103, 104, 105, 106, 131, 147, 151, 162, 181, 182, 183, 188, 191, 205, 206, 207, 208, 210, 212, 213, 218, 221, 247, 259, 262, 268, 269, 298, 302, 318, 322], "written": [6, 60, 61, 62, 63, 65, 71, 72, 102, 143, 147, 150, 167, 178, 179, 180, 181, 191, 201, 206, 207, 208, 210, 212, 213, 217, 218, 219, 220, 221, 226, 227, 312, 316], "arcco": 6, "mathrm": [6, 44, 46, 50, 60, 62, 63, 72, 74, 75, 78, 80, 82, 83, 85, 86, 87, 88, 90, 91, 101, 102, 104, 105, 106, 107, 196, 206, 207, 208, 210, 211, 212, 213, 293, 297, 307, 308, 309, 310], "cdot": [6, 57, 68, 74, 75, 80, 83, 85, 87, 88, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 282], "li": [6, 285, 321], "interv": [6, 90, 321], "cannot": [6, 13, 15, 60, 61, 62, 63, 65, 66, 67, 71, 72, 92, 102, 105, 206, 207, 208, 210, 212, 213, 240, 273, 281, 300, 304], "distinguish": [6, 15, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 230, 264], "orient": [6, 33, 38, 111, 285], "boolean": [6, 7, 14, 113, 176, 191, 251, 252, 253, 254, 273, 314], "drawn": [6, 312, 316, 320, 321], "radian": [6, 11, 17, 60, 62, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 120, 289], "automat": [6, 7, 13, 15, 16, 55, 60, 61, 62, 63, 65, 71, 72, 83, 85, 87, 88, 182, 183, 191, 201, 242, 244, 251, 252, 253, 254, 258, 262, 281, 283, 307, 309, 315, 318, 321], "coordiat": 6, "basic": [6, 13, 15, 41, 54, 61, 65, 71, 73, 131, 206, 207, 208, 210, 212, 213, 230, 238, 247, 250, 258, 280, 281, 282, 301, 302, 305, 307, 309, 310, 312, 314], "algorithm": [6, 7, 13, 15, 17, 57, 60, 61, 62, 63, 65, 68, 71, 72, 79, 131, 206, 207, 208, 210, 212, 213, 265, 280, 282, 296], "oxa": 6, "need": [6, 7, 13, 14, 15, 33, 60, 61, 62, 63, 64, 65, 71, 72, 86, 89, 90, 93, 132, 136, 196, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 240, 251, 252, 253, 254, 256, 261, 262, 265, 273, 280, 281, 283, 290, 300, 302, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324], "conform": [6, 276], "min": [6, 7, 15, 60, 61, 62, 63, 65, 71, 72, 297, 321], "By": [6, 14, 16, 56, 58, 60, 62, 64, 136, 147, 157, 162, 178, 181, 206, 207, 208, 210, 212, 213, 278, 283, 297, 307, 309, 310, 318, 321, 322, 323], "With": [6, 8, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 304, 320], "shift": [6, 14, 62, 63, 94, 176, 178, 192, 261, 268, 289, 293, 308, 309], "coincid": [6, 13, 15, 30, 60, 61, 62, 63, 65, 71, 72], "lastli": [6, 265, 302, 309], "manual": [6, 50, 57, 66, 67, 131, 136, 181, 205, 206, 207, 208, 210, 212, 213, 259, 273, 280, 290, 300], "displac": [6, 41, 64, 102, 105, 180, 181, 188, 244, 273, 308], "That": [6, 283, 302, 315, 318, 320, 321, 322, 323], "appli": [6, 7, 14, 17, 54, 55, 56, 58, 60, 62, 63, 64, 72, 113, 206, 207, 208, 210, 212, 213, 240, 258, 262, 265, 280, 285, 293, 300, 307, 308, 309, 310, 312, 320, 323], "func": [6, 13, 15, 16, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 71, 72, 80, 82, 83, 84, 86, 91, 101, 102, 103, 107, 129, 251, 252, 253, 254, 263], "mapper": [6, 309], "segment": [6, 7, 13, 15, 17, 29, 33, 41, 56, 60, 61, 62, 63, 65, 71, 72, 157, 222], "through": [6, 29, 33, 41, 56, 58, 64, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 120, 138, 160, 174, 181, 183, 185, 188, 197, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 243, 251, 252, 253, 254, 265, 278, 280, 282, 283, 285, 291, 301, 308, 309, 310, 312, 313, 316, 317, 321, 324], "expect": [6, 93, 156, 180, 259, 307, 316, 322], "callabl": [6, 13, 15, 16, 50, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 71, 72, 97, 109, 110, 111, 112, 113, 114, 258, 259], "transform": [6, 14, 60, 62, 63, 72, 90, 259, 262, 289, 290, 300, 312, 314, 323], "selector": 6, "reciev": [6, 251, 252, 253, 254], "move": [6, 17, 56, 58, 64, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 257, 263, 265, 267, 269, 273, 301, 313, 314, 323], "principl": [6, 264, 267, 285], "diamond": [6, 303], "orbital_data": 6, "random": [6, 151, 152, 284], "rand": [6, 13, 15, 60, 61, 62, 63, 65, 71, 72], "atomic_data": 6, "accomblish": [6, 240, 250, 265, 290, 300], "To": [6, 15, 20, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 83, 85, 87, 88, 94, 102, 104, 105, 106, 178, 184, 196, 206, 207, 208, 210, 211, 212, 213, 240, 247, 262, 280, 281, 289, 290, 293, 302, 307, 308, 309, 310, 313, 316, 318, 320, 321], "take": [6, 7, 13, 14, 15, 58, 60, 61, 62, 63, 65, 68, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 112, 115, 207, 208, 212, 213, 246, 251, 252, 253, 254, 259, 263, 275, 276, 277, 289, 290, 293, 300, 307, 308, 310, 314, 315, 318, 320, 321, 323], "out": [6, 15, 46, 50, 55, 56, 60, 61, 62, 63, 65, 66, 67, 71, 72, 112, 119, 143, 178, 181, 191, 201, 206, 207, 208, 210, 212, 213, 243, 250, 251, 252, 253, 254, 257, 258, 259, 261, 264, 265, 273, 275, 277, 278, 280, 285, 289, 290, 300, 308, 312, 313, 320, 322, 324], "everi": [6, 16, 54, 129, 138, 199, 225, 313, 315, 316, 318, 322], "2nd": [6, 15, 36, 60, 61, 62, 63, 65, 71, 72, 75, 83, 87, 89, 92, 93, 102, 105, 180, 188, 206, 207, 208, 210, 212, 213, 217, 218, 221, 227, 259, 267, 297, 322], "alternate_data": 6, "lambda": [6, 16, 50, 55, 79, 109, 110, 111, 112, 113, 114, 251, 252, 253, 254, 280, 293, 307, 308, 310], "idx": [6, 7, 13, 15, 59, 60, 61, 62, 63, 65, 71, 72, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 265, 306], "area": [6, 7, 17, 64], "ax0": [6, 7, 17], "ax1": [6, 7, 17], "span": [6, 7, 17], "as_primari": 6, "na_primari": 6, "ax": [6, 7, 17, 66, 67, 262, 289, 298, 307, 309, 310, 312, 314, 316, 323], "ret_sup": 6, "try": [6, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 240, 251, 273, 283, 304, 305, 307, 310, 312, 313, 316, 320, 321], "primari": [6, 7, 17, 66, 67, 171, 304, 305, 307], "compris": [6, 15, 17, 60, 61, 62, 63, 65, 71, 72], "find": [6, 7, 14, 56, 59, 63, 75, 81, 83, 84, 87, 91, 94, 100, 102, 103, 105, 196, 197, 199, 211, 257, 264, 273, 275, 276, 281, 283, 300, 307, 309, 310, 312, 313, 315, 316, 317, 318, 320], "repetit": [6, 7, 13, 15, 17, 57, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 282, 315], "requir": [6, 7, 13, 14, 15, 33, 57, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 75, 80, 83, 87, 89, 102, 105, 113, 180, 187, 188, 193, 206, 207, 208, 210, 212, 213, 222, 239, 240, 242, 244, 245, 247, 259, 268, 269, 273, 280, 290, 293, 297, 300, 302, 304, 307, 309, 312, 314], "search": [6, 7, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 280, 300, 307], "sislerror": [6, 64], "fail": [6, 184, 259, 281, 312], "asc2uc": 6, "dublic": 6, "sort": [6, 13, 14, 15, 55, 60, 61, 62, 63, 65, 71, 72, 75, 83, 87, 102, 105, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 257, 275, 316], "other_atom": [6, 15, 60, 61, 62, 63, 65, 71, 72], "dist": [6, 178, 308], "respect": [6, 7, 17, 56, 57, 58, 60, 61, 62, 63, 64, 65, 71, 72, 74, 75, 83, 85, 87, 88, 89, 94, 97, 102, 104, 105, 106, 131, 138, 142, 147, 160, 174, 176, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 247, 257, 265, 290, 298, 305, 307, 310, 314, 321], "end": [6, 29, 33, 41, 55, 56, 57, 74, 75, 83, 85, 87, 88, 98, 102, 104, 105, 106, 108, 115, 120, 122, 126, 129, 130, 142, 151, 152, 162, 181, 201, 207, 208, 212, 213, 258, 263, 285, 293, 296, 298, 314, 316, 318, 321], "distanc": [6, 7, 13, 15, 30, 56, 60, 61, 62, 63, 65, 71, 72, 181, 265, 268, 269, 307, 318], "latticevector": [6, 17, 268, 309], "here": [6, 13, 15, 16, 44, 45, 46, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 75, 83, 87, 90, 102, 105, 131, 239, 240, 251, 252, 253, 254, 263, 269, 279, 280, 281, 283, 289, 290, 291, 293, 296, 297, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 316, 318, 319, 320, 321, 322, 323, 324], "Not": [6, 15, 60, 61, 62, 63, 65, 71, 72, 109, 110, 251, 252, 253, 254, 321, 322], "auc2sc": 6, "axyz": [6, 265], "isc": [6, 13, 15, 17, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213], "appropri": [6, 83, 84, 85, 87, 88, 102, 103, 105], "format": [6, 13, 14, 15, 17, 60, 61, 62, 63, 65, 71, 72, 83, 85, 87, 88, 123, 143, 147, 150, 156, 184, 186, 187, 191, 193, 197, 201, 206, 207, 208, 210, 212, 213, 226, 227, 251, 252, 253, 254, 258, 263, 264, 268, 273, 278, 287, 288, 290, 293, 307, 308, 309, 310, 312], "accord": [6, 7, 13, 14, 15, 33, 44, 45, 50, 53, 55, 56, 57, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 84, 85, 87, 88, 90, 94, 102, 103, 104, 105, 106, 209, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 312, 318, 320], "bond_correct": 6, "correct": [6, 7, 13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 75, 83, 87, 90, 102, 105, 132, 138, 151, 152, 160, 165, 174, 180, 182, 183, 184, 185, 188, 191, 192, 193, 198, 199, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 225, 242, 250, 258, 261, 262, 263, 264, 265, 266, 267, 275, 280, 281, 285, 293, 296, 297, 304, 307], "bond": [6, 27, 30, 34, 35, 37, 38, 39, 43, 60, 61, 62, 63, 65, 71, 72, 206, 207, 208, 210, 212, 213, 265, 269, 270, 282, 285, 307], "minim": [6, 15, 44, 60, 61, 62, 63, 65, 71, 72, 113, 258, 268, 307, 316], "inher": [6, 7, 94, 264, 307], "what": [6, 15, 17, 60, 61, 62, 63, 65, 71, 72, 90, 147, 191, 250, 251, 252, 253, 254, 264, 269, 283, 307, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "control": [6, 14, 17, 30, 60, 62, 63, 72, 109, 110, 111, 112, 113, 114, 115, 181, 240, 251, 252, 253, 254, 257, 258, 269, 285, 300, 312, 313, 315, 316, 319, 320, 321, 323], "mm": 6, "pbc": [6, 13, 15, 60, 61, 62, 63, 65, 71, 72, 258, 261], "xyz_ia": 6, "atoms_xyz": [6, 13, 15, 60, 61, 62, 63, 65, 71, 72], "ret_xyz": [6, 266], "ret_rij": [6, 266], "ret_isc": [6, 258], "entir": [6, 17, 64, 206, 207, 208, 210, 212, 213, 268, 289, 308], "within": [6, 7, 13, 15, 17, 60, 61, 62, 63, 65, 71, 72, 91, 109, 110, 111, 112, 113, 114, 258, 264, 268, 283, 304, 306, 307, 313, 318], "heavili": [6, 109, 110, 111, 112, 113, 114, 257, 263, 265], "reli": [6, 13, 15, 61, 65, 66, 67, 71, 90, 109, 110, 111, 112, 113, 114, 242, 244, 273], "close_sc": 6, "made": [6, 7, 15, 17, 60, 61, 62, 63, 65, 71, 72, 227, 251, 252, 253, 254, 258, 262, 273, 276, 283, 290, 320], "neighbour": [6, 13, 15, 17, 60, 61, 62, 63, 65, 71, 72, 268, 302, 304, 305, 307, 319, 320], "deciph": 6, "space": [6, 7, 17, 29, 33, 41, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 89, 90, 94, 102, 112, 172, 178, 182, 183, 196, 206, 207, 208, 210, 211, 212, 213, 242, 244, 273, 275, 276, 280, 308, 310], "variabl": [6, 15, 17, 44, 45, 46, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 240, 251, 252, 253, 254, 257, 258, 264, 281, 283, 293, 306, 312, 313], "relat": [6, 7, 46, 58, 74, 75, 81, 83, 85, 87, 88, 100, 102, 104, 105, 106, 131, 139, 181, 199, 206, 207, 208, 210, 212, 213, 239, 251, 252, 253, 254, 259, 260, 262, 263, 269, 273, 280, 282, 285, 298, 302, 309, 310, 312, 314], "certain": [6, 7, 10, 14, 17, 56, 138, 242, 244, 265, 281, 289, 290, 306, 320, 321], "tol": [6, 7, 17, 56, 60, 62, 80, 109, 110, 111, 114], "max_r": 6, "inf": 6, "toler": [6, 14, 15, 17, 56, 60, 61, 62, 63, 65, 71, 72, 75, 80, 83, 87, 91, 102, 105, 109, 110, 111, 114, 299], "maxim": [6, 67, 90, 306, 309], "unequ": [6, 258], "mode": [6, 7, 61, 74, 75, 83, 85, 87, 88, 101, 102, 103, 104, 105, 106, 107, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 235, 293, 316, 318, 321], "gather": [6, 251, 252, 253, 254, 293], "extract": [6, 13, 15, 16, 56, 60, 61, 62, 63, 65, 71, 72, 165, 178, 206, 207, 208, 209, 210, 212, 213, 214, 257, 261, 265, 269, 273, 282, 293, 309, 310], "quantiti": [6, 7, 10, 11, 14, 48, 49, 58, 60, 61, 62, 63, 65, 66, 67, 71, 72, 81, 87, 88, 90, 92, 100, 105, 106, 131, 165, 181, 191, 206, 207, 208, 210, 212, 213, 225, 239, 242, 243, 244, 262, 265, 267, 273, 279, 280, 282, 284, 290, 293, 309, 310], "chosen": [6, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 90, 102, 104, 105, 106, 151, 152, 320], "scipi": [6, 7, 13, 14, 15, 16, 60, 61, 62, 63, 65, 71, 72, 156, 206, 207, 208, 210, 212, 213, 265, 269, 281, 312], "stat": 6, "string": [6, 7, 17, 20, 60, 61, 62, 63, 65, 120, 121, 123, 125, 127, 128, 129, 130, 181, 191, 201, 222, 251, 252, 253, 254, 258, 312, 320, 321, 322], "getattr": [6, 109, 110, 111, 112, 113, 114], "unsort": [6, 214], "process": [6, 50, 63, 183, 188, 192, 214, 230, 240, 251, 252, 253, 257, 265, 269, 275, 278, 280, 281, 282, 285, 288, 290, 297, 312, 313, 315, 316, 317, 318, 321], "41421356": 6, "20710678": 6, "form": [6, 29, 33, 41, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 258, 284, 288, 302, 320], "sparserij": 6, "spars": [6, 7, 13, 14, 15, 60, 61, 62, 63, 65, 69, 70, 71, 72, 156, 177, 195, 206, 207, 208, 210, 212, 213, 257, 262, 263, 265, 269, 273, 275, 276, 277, 282, 293, 305], "0001": [6, 16, 17, 56, 68, 70, 199, 308, 309], "fxyz": [6, 259], "fraction": [6, 44, 45, 46, 47, 49, 50, 52, 53, 64, 115, 150, 181, 182, 183, 188, 206, 207, 208, 210, 212, 213, 218, 221, 285, 290, 307, 310, 320, 321], "ir": 6, "1000": [6, 7, 13, 15, 60, 61, 62, 63, 65, 66, 67, 71, 72, 115, 307, 308], "20": [6, 14, 29, 33, 41, 246, 283, 285, 307, 309, 310, 312, 316, 318, 320, 321], "approxim": [6, 60, 310], "estitametd": 6, "icel": [6, 7, 17], "right": [6, 13, 15, 60, 61, 62, 63, 65, 68, 71, 72, 74, 75, 83, 85, 87, 88, 98, 102, 104, 105, 106, 108, 251, 252, 253, 254, 262, 274, 282, 293, 300, 310, 312, 313, 315, 316, 317, 320, 321, 323], "is_orthogon": [6, 7, 17], "linearli": [6, 7, 46], "independ": [6, 7, 314, 316, 317], "isc_off": [6, 7, 17], "iter_speci": [6, 265], "across": [6, 7, 251, 252, 253, 254, 262, 267, 269, 285], "iter_orbit": [6, 60, 61, 62, 63, 65, 71, 72, 265, 276], "iter_block": [6, 13, 15, 60, 61, 62, 63, 65, 71, 72, 306], "perform": [6, 13, 17, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 90, 141, 191, 206, 207, 208, 210, 212, 213, 250, 256, 257, 258, 261, 262, 264, 265, 268, 269, 273, 275, 276, 277, 281, 282, 283, 284, 288, 289, 290, 294, 295, 305, 307, 308, 310, 312], "critic": [6, 17], "been": [6, 7, 13, 14, 15, 29, 33, 41, 60, 61, 62, 63, 65, 66, 67, 71, 72, 92, 93, 94, 165, 191, 192, 251, 252, 253, 254, 262, 264, 266, 268, 282, 283, 285, 290, 293, 301, 304, 310, 312, 314, 318, 320], "correctli": [6, 184, 259, 263, 281, 318, 321], "look": [6, 60, 62, 63, 116, 162, 181, 191, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 300, 301, 307, 309, 312, 313, 316, 318, 321, 323], "idx_a": [6, 306], "intend": [6, 16, 198, 278], "remark": [6, 7, 281, 289, 316, 320], "determinist": 6, "taken": [6, 7, 13, 15, 60, 61, 62, 63, 65, 71, 72, 210, 212, 304, 307], "account": [6, 7, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 222, 259, 275, 277, 304, 305, 307, 308, 321], "overwrit": [6, 7, 136, 143, 157, 207, 208, 212, 213, 251, 252, 253, 254], "local": [6, 7, 60, 61, 62, 63, 65, 71, 72, 74, 75, 76, 83, 85, 87, 88, 90, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 240, 265, 285, 286, 307, 318], "effect": [6, 8, 15, 60, 61, 62, 63, 64, 65, 71, 72, 83, 85, 87, 88, 191, 246, 273, 275, 285, 307, 318, 320, 321], "cube": [6, 147, 248, 250, 262, 273, 280, 287, 309, 313], "block": [6, 13, 15, 60, 61, 62, 63, 65, 71, 72, 162, 165, 166, 181, 190, 191, 194, 200, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 256, 258, 259, 275, 280, 293, 296, 309, 310], "equispac": 6, "iter_block_rand": 6, "randomli": 6, "next": [6, 44, 50, 54, 278, 285, 312, 314, 318, 319, 320, 321, 322, 323, 324], "iter_block_shap": 6, "being": [6, 14, 29, 33, 41, 56, 58, 60, 61, 62, 63, 64, 67, 71, 72, 75, 76, 80, 83, 87, 94, 102, 105, 184, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 258, 280, 288, 289, 290, 321], "global": [6, 17, 60, 61, 62, 63, 65, 71, 72, 90, 115, 116, 117, 136, 142, 151, 152, 265, 319], "rel": [6, 44, 60, 61, 62, 63, 65, 71, 72, 251, 252, 253, 254, 312], "resid": [6, 60, 61, 62, 63, 65, 71, 72, 309], "idx_speci": 6, "isinst": [6, 55], "mirror": [6, 7, 259, 285, 320], "about": [6, 13, 15, 60, 61, 62, 63, 65, 71, 72, 75, 83, 87, 90, 102, 105, 141, 181, 199, 206, 207, 208, 209, 210, 212, 213, 214, 251, 252, 253, 254, 261, 281, 283, 297, 312, 313, 315, 316, 320], "normal": [6, 7, 8, 17, 56, 58, 64, 74, 75, 83, 85, 87, 88, 90, 94, 102, 104, 105, 106, 165, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 289, 293, 305, 307, 308, 318, 319, 322], "typic": [6, 13, 15, 16, 61, 65, 71, 273, 280, 281, 282, 283, 290, 310], "care": [6, 15, 60, 61, 62, 63, 65, 71, 72, 90, 206, 207, 208, 210, 212, 213, 276, 293, 321], "xy": [6, 30, 60, 61, 62, 63, 65, 71, 72, 307, 309, 310, 312, 314, 320, 321, 323], "ab": [6, 30, 285, 286, 307, 310, 312, 318, 320, 321], "v": [6, 7, 11, 17, 79, 83, 87, 89, 94, 110, 111, 119, 180, 207, 212, 222, 240, 275, 278, 285, 300], "cartesian": [6, 9, 17, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 75, 83, 87, 89, 102, 105, 111, 121, 181, 206, 207, 208, 210, 212, 213, 218, 221, 240, 266, 302, 304, 312, 320, 321], "xz": [6, 60, 61, 62, 63, 65, 71, 72], "yz": [6, 17, 307, 320], "second": [6, 7, 13, 15, 17, 60, 61, 62, 63, 65, 71, 72, 111, 139, 222, 251, 252, 253, 254, 277, 283, 289, 290, 304, 307, 308, 310, 312, 314, 318, 320, 321, 323], "around": [6, 17, 56, 58, 60, 62, 64, 251, 252, 253, 254, 265, 289, 301, 307, 308, 310, 317, 320], "intersect": [6, 17, 90, 113, 250], "42": [6, 27, 30, 34, 35, 43, 282, 303, 307, 320], "translat": [6, 14, 17, 41, 66, 67, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 181, 191, 206, 207, 208, 209, 210, 212, 213, 214, 261, 263], "One": [6, 14, 15, 16, 17, 54, 60, 61, 62, 63, 65, 71, 72, 90, 91, 102, 105, 151, 162, 178, 181, 206, 207, 208, 210, 212, 213, 240, 242, 251, 252, 253, 254, 282, 283, 284, 289, 290, 293, 307, 312, 316, 318, 321], "suppli": [6, 14, 162, 180, 181, 183, 187, 206, 207, 208, 210, 212, 213, 247, 300], "just": [6, 191, 246, 251, 252, 253, 254, 283, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324], "broad": [6, 310], "castabl": 6, "enlarg": 6, "n_": [6, 7, 17, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213], "na_": [6, 13], "_dispatch": 6, "typedispatch": [6, 109, 110, 111, 112, 113, 114], "no_": [6, 15, 60, 61, 62, 63, 65, 71, 72, 258], "o2a": [6, 269, 275], "indici": 6, "o2isc": 6, "o2sc": 6, "o2transpos": 6, "orij": [6, 265], "orbitals1": 6, "orbitals2": 6, "optimize_nsc": [6, 261, 268], "optim": [6, 46, 263, 282], "after": [6, 7, 13, 15, 17, 29, 33, 41, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 83, 87, 102, 105, 251, 252, 253, 254, 265, 281, 290, 294, 295, 300, 304, 307, 308, 309, 310, 312, 316, 318, 324], "oper": [6, 13, 14, 15, 55, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 94, 113, 191, 206, 207, 208, 210, 212, 213, 240, 250, 257, 259, 262, 263, 264, 266, 275, 283, 288, 289, 290, 305], "origo": [6, 7, 259, 265, 308], "osc2uc": 6, "ouc2sc": 6, "overlap": [6, 13, 15, 60, 61, 62, 63, 67, 71, 72, 74, 75, 80, 83, 85, 86, 87, 88, 90, 92, 93, 102, 104, 105, 106, 177, 181, 184, 188, 189, 195, 196, 197, 211, 242, 259, 261, 262, 276, 277, 280, 297], "ep": [6, 15, 59, 60, 61, 62, 63, 65, 68, 71, 72, 75, 81, 83, 84, 87, 100, 102, 103, 105], "offset_oth": 6, "gr22": 6, "gr44": 6, "shuffl": 6, "idx22": 6, "idx44": 6, "assert": [6, 7, 56, 58, 64, 266], "idx_self": 6, "idx_oth": 6, "plot": [6, 7, 56, 63, 83, 94, 131, 143, 146, 147, 150, 157, 162, 166, 167, 171, 172, 176, 178, 181, 183, 184, 188, 189, 191, 192, 194, 196, 197, 198, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 221, 225, 226, 227, 240, 242, 251, 252, 254, 258, 259, 267, 269, 273, 275, 280, 281, 289, 290, 296, 298, 305, 308, 310, 311, 313, 316, 318, 319, 322, 323], "prependend": 6, "rcell": [6, 7, 17, 56, 58, 64, 269, 308], "static": [6, 7, 17, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 181, 191, 215, 216, 217, 218, 219, 220, 221, 222, 283, 294, 295], "sile": [6, 7, 17, 56, 58, 60, 61, 62, 63, 64, 65, 132, 135, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 257, 259, 261, 262, 264, 265, 269, 274, 276, 290, 321], "read_geometri": [6, 143, 146, 147, 150, 157, 162, 166, 167, 171, 181, 184, 188, 189, 191, 192, 194, 197, 200, 205, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 221, 225, 226, 227, 259, 289, 290], "pathlib": [6, 7, 17, 60, 61, 62, 63, 65, 151, 257, 259, 298], "path": [6, 7, 17, 56, 60, 61, 62, 63, 65, 90, 151, 205, 240, 251, 252, 253, 254, 257, 259, 275, 281, 298, 307, 308, 312, 313, 318, 319], "get_sil": [6, 7, 17, 60, 61, 62, 63, 65, 132, 181, 191, 197, 205, 207, 212, 225, 226, 251, 252, 253, 254, 275, 280, 290, 293, 309, 310, 312, 318, 321, 322], "write": [6, 7, 56, 58, 60, 61, 62, 63, 64, 65, 135, 136, 137, 138, 141, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 257, 258, 273, 277, 280, 283, 285, 290, 297, 309, 310, 313, 315, 316, 319], "file": [6, 56, 58, 64, 123, 132, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 273, 274, 275, 276, 277, 279, 280, 281, 282, 287, 289, 293, 297, 298, 300, 309, 310, 312, 313, 315, 318, 321, 322], "neg": [6, 10, 13, 15, 60, 61, 62, 63, 65, 71, 72, 102, 191, 206, 207, 208, 210, 212, 213, 285, 302, 304, 309], "wrap": [6, 7, 13, 15, 55, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 91, 191, 240, 280, 283, 307, 308, 310, 312, 315], "work": [6, 7, 13, 15, 17, 20, 60, 61, 62, 63, 65, 71, 72, 94, 184, 207, 212, 251, 252, 253, 254, 258, 259, 265, 266, 268, 277, 283, 290, 312, 315, 316, 318, 319, 320, 322], "remove_orbit": [6, 15, 60, 61, 62, 63, 65, 71, 72], "For": [6, 7, 10, 15, 17, 29, 33, 41, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 83, 85, 86, 87, 88, 89, 90, 102, 104, 105, 106, 111, 151, 152, 191, 192, 206, 207, 208, 209, 210, 212, 213, 214, 218, 221, 225, 239, 242, 244, 245, 251, 252, 253, 254, 265, 280, 281, 282, 283, 288, 289, 290, 291, 293, 294, 295, 300, 304, 306, 307, 309, 310, 312, 313, 315, 316, 319, 320, 321, 322, 323], "opposit": [6, 7, 13, 15, 17, 60, 61, 62, 63, 65, 71, 72], "sub_orbit": [6, 15, 60, 61, 62, 63, 65, 71, 72, 259], "occur": 6, "NOT": [6, 60, 61, 62, 63, 65, 71, 72, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254], "expans": [6, 57, 94, 206, 207, 208, 209, 210, 212, 213, 214, 274], "id": [6, 73], "final": [6, 13, 14, 15, 46, 60, 61, 62, 63, 65, 66, 67, 71, 72, 89, 92, 102, 132, 138, 188, 191, 258, 275, 283, 290, 304, 310, 316, 318, 319, 320, 322], "lowest": 6, "instead": [6, 7, 50, 55, 94, 165, 166, 184, 191, 251, 252, 253, 254, 257, 263, 265, 267, 268, 273, 276, 283, 300, 307, 309, 310, 312, 317, 318, 320], "rotat": [6, 7, 11, 17, 60, 62, 74, 75, 83, 85, 87, 88, 89, 90, 102, 104, 105, 106, 257, 265, 269, 275, 282, 286, 287], "abc": [6, 17, 33, 121, 259, 275, 320], "everyth": [6, 13, 14, 15, 44, 45, 50, 53, 60, 61, 62, 63, 65, 71, 72, 181, 191, 212, 240, 261, 275, 281, 282, 283, 298, 301, 312, 313, 315, 316, 320, 323], "align": [6, 13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 98, 102, 104, 105, 106, 108, 259, 276, 277], "degre": [6, 11, 17, 30, 120, 275, 289], "anyth": [6, 59, 64, 74, 75, 214, 268, 302, 307, 320, 322], "subject": 6, "rather": [6, 7, 259, 269, 305, 309], "quaternion": 6, "rotate_mil": 6, "miller": [6, 29, 33, 41], "sc2uc": 6, "sc_index": [6, 7, 17, 206, 207, 208, 210, 212, 213], "sc_off": [6, 7, 17], "scale_atom": 6, "three": [6, 7, 17, 56, 58, 64, 206, 207, 208, 210, 212, 213, 283, 312, 314, 320, 322], "well": [6, 15, 60, 61, 62, 63, 65, 71, 72, 94, 112, 119, 143, 226, 303, 305, 307, 309, 314, 315, 316, 319, 320, 321, 322], "set_nsc": [6, 7, 13, 15, 17, 60, 61, 62, 63, 65, 67, 71, 72, 269, 293, 304], "underli": [6, 7, 13, 15, 60, 61, 62, 63, 65, 71, 72, 188, 206, 207, 208, 210, 212, 213, 240, 304], "set_sc": [6, 7], "set_supercel": [6, 7], "nest": [6, 191, 251, 252, 253, 254], "fashion": [6, 54, 268, 275, 302], "variou": [6, 14, 50, 56, 58, 64, 212, 214, 238, 239, 241, 243, 248, 271, 280, 307, 316], "criteria": [6, 68], "There": [6, 10, 113, 239, 264, 273, 279, 280, 282, 283, 290, 293, 305, 310, 312, 313, 314, 316, 318, 320, 321, 322], "mani": [6, 7, 17, 50, 56, 58, 64, 143, 191, 240, 251, 252, 253, 254, 258, 259, 261, 263, 266, 273, 282, 283, 293, 303, 313, 320, 321], "func_sort": 6, "abov": [6, 7, 10, 14, 15, 16, 17, 55, 59, 60, 61, 62, 63, 65, 71, 72, 74, 75, 81, 83, 84, 85, 86, 87, 88, 92, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 184, 206, 207, 208, 210, 212, 213, 240, 242, 244, 247, 251, 252, 253, 254, 278, 281, 289, 290, 293, 305, 306, 307, 308, 310, 318, 320, 321], "addition": [6, 14, 86, 90, 240, 264, 282, 307, 309, 319], "descend": [6, 55, 75, 83, 87, 102, 105], "_only_": 6, "ret_atom": 6, "axis0": 6, "axis1": 6, "behav": 6, "lexsort": 6, "lattice0": 6, "lattice1": 6, "multipli": [6, 14, 44, 45, 50, 53, 180, 265], "ensur": [6, 13, 14, 15, 55, 60, 61, 62, 63, 65, 71, 72, 83, 87, 90, 138, 151, 160, 174, 183, 184, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 240, 246, 250, 258, 259, 262, 268, 281, 293, 306, 308], "atol": [6, 14], "meaning": [6, 199, 251, 283, 315, 318], "magnitud": [6, 17, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 282], "orthogon": [6, 13, 15, 17, 28, 29, 32, 33, 34, 36, 37, 40, 41, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 86, 87, 88, 89, 90, 102, 104, 105, 106, 111, 196, 211, 242, 259, 262, 263, 273, 290, 307, 309, 310, 314, 316, 323], "subsequ": [6, 7, 13, 15, 16, 60, 61, 62, 63, 64, 65, 71, 72, 138, 196, 206, 207, 208, 210, 211, 212, 213, 247, 267, 268, 281, 289, 290, 307], "element": [6, 7, 13, 14, 15, 17, 29, 33, 40, 41, 44, 45, 46, 47, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 81, 83, 84, 85, 87, 88, 94, 100, 102, 103, 104, 105, 106, 113, 125, 130, 180, 181, 182, 206, 207, 208, 210, 212, 213, 225, 262, 263, 265, 267, 268, 269, 275, 276, 293, 305, 306, 307, 309], "foot": 6, "mention": [6, 312, 314, 321], "interfac": [6, 7, 259, 261, 263, 269, 283, 291, 296, 297, 303, 315, 316, 317, 320], "And": [6, 50, 60, 61, 62, 63, 65, 71, 72, 111, 283, 301, 310, 312, 314, 316, 318, 319, 320, 321, 322], "collect": [6, 7, 51, 56, 58, 64, 178, 285], "etc": [6, 7, 13, 15, 56, 61, 65, 71, 97, 117, 181, 239, 247, 262, 263, 267, 269, 273, 277, 282, 307, 309, 310, 313, 315], "sever": [6, 10, 16, 29, 33, 41, 51, 56, 58, 64, 140, 142, 151, 152, 178, 201, 205, 238, 240, 249, 251, 252, 253, 254, 257, 259, 262, 264, 273, 275, 289, 306, 307, 310, 316], "never": 6, "ones": [6, 251, 252, 254, 312, 316, 318], "those": [6, 50, 56, 113, 153, 251, 252, 253, 254, 263, 298, 316, 318, 320], "down": [6, 60, 62, 63, 72, 192, 206, 207, 208, 209, 210, 212, 213, 214, 218, 221, 290, 316], "compat": [6, 15, 60, 61, 62, 63, 64, 65, 71, 72, 206, 207, 208, 210, 212, 213, 262, 267, 273, 276, 287, 290, 300, 320], "absolut": [6, 14, 60, 62, 74, 75, 83, 85, 87, 88, 94, 102, 104, 105, 106, 109, 110, 111, 114, 156, 157, 181, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 309, 316], "numer": [6, 206, 207, 208, 210, 212, 213, 268, 293, 318], "alter": [6, 16, 289], "unwant": 6, "side": [6, 7, 17, 41, 56, 58, 64, 109, 110, 111, 112, 114, 143, 226, 250, 280, 290, 300, 309, 313, 314], "veri": [6, 13, 15, 55, 56, 60, 61, 62, 63, 65, 71, 72, 90, 191, 206, 207, 208, 210, 212, 213, 243, 251, 252, 253, 254, 257, 258, 263, 264, 265, 275, 279, 282, 283, 293, 296, 300, 301, 306, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323], "suffix": [6, 142, 151, 152, 251, 252, 253, 254, 283], "relev": [6, 59, 60, 62, 74, 75, 290, 321], "execut": [6, 7, 251, 252, 253, 254, 281, 283, 288, 289, 290, 313], "output": [6, 7, 14, 46, 52, 60, 62, 63, 65, 72, 74, 75, 83, 85, 87, 88, 92, 102, 104, 105, 106, 131, 142, 147, 156, 157, 162, 165, 166, 181, 183, 188, 191, 205, 207, 208, 210, 212, 213, 214, 219, 222, 225, 226, 258, 259, 260, 262, 263, 264, 265, 269, 273, 274, 275, 276, 277, 278, 280, 282, 283, 289, 290, 293, 296, 300, 309, 313], "bilay": [6, 34, 37, 257, 285, 286, 320], "top_atom": [6, 30, 320], "bottom_atom": [6, 30, 320], "import": [6, 7, 13, 15, 16, 17, 55, 60, 61, 62, 63, 65, 71, 72, 90, 94, 206, 207, 208, 210, 212, 213, 239, 240, 247, 251, 252, 253, 254, 260, 263, 273, 280, 282, 283, 290, 293, 296, 297, 300, 301, 304, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324], "ascend1": 6, "ascend0": 6, "geom0": 6, "atoms0": 6, "_": [6, 46, 54, 60, 62, 75, 80, 83, 86, 87, 102, 105, 107, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 293, 309, 310, 314], "geom1": 6, "geom2": 6, "concaten": [6, 240], "geom3": 6, "influenc": [6, 60, 62, 94, 321], "_always_": [6, 138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 266], "axis2": 6, "_not_": [6, 15, 60, 61, 62, 63, 65, 71, 72, 90], "_are_": [6, 15, 60, 61, 62, 63, 65, 71, 72], "unalt": [6, 197], "fetch": 6, "group0": 6, "group1": 6, "high": [6, 15, 60, 61, 62, 63, 65, 71, 72, 273, 284, 285, 293, 312, 317, 321], "unexpect": 6, "section": [6, 7, 191, 206, 207, 208, 210, 212, 213, 222, 283, 312, 316, 317, 320, 324], "continu": [6, 305, 309], "break": [6, 257, 268, 276, 285], "linear": [6, 7, 14, 17, 52, 56, 58, 60, 62, 63, 64, 72, 320], "chain": [6, 70, 300, 302], "middl": [6, 97, 290, 307, 318, 321], "shorter": [6, 289, 290], "095": 6, "zero": [6, 13, 14, 15, 16, 17, 56, 60, 61, 62, 63, 64, 65, 71, 72, 83, 87, 112, 200, 206, 207, 208, 210, 212, 213, 225, 268, 276, 304, 305, 306, 307, 309, 310], "si": [6, 20, 246, 258, 298], "stack": [6, 29, 30, 33, 41, 201, 310, 320], "205": 6, "305": 6, "005": [6, 15, 60, 61, 62, 63, 65, 71, 72], "low": [6, 131, 280, 285], "001": [6, 17, 212, 308], "na_ir": [6, 13, 15, 60, 61, 62, 63, 65, 71, 72], "speed": [6, 13, 15, 21, 60, 61, 62, 63, 65, 71, 72, 265, 267, 269, 281, 282, 290, 312, 321], "up": [6, 13, 15, 17, 51, 60, 61, 62, 63, 65, 71, 72, 75, 83, 87, 102, 105, 116, 162, 181, 192, 206, 207, 208, 210, 212, 213, 218, 221, 247, 251, 252, 253, 254, 262, 265, 267, 269, 281, 282, 283, 285, 290, 310, 312, 313, 314, 316, 318, 320, 321], "sparseatom": [6, 15, 60, 61, 62, 63, 65, 71, 72], "fit": [6, 7, 17, 63, 268, 317], "futur": [6, 15, 30, 60, 61, 62, 63, 65, 71, 72, 80, 151, 196, 199, 207, 211, 212, 251, 252, 253, 254, 315, 320, 321], "implement": [6, 13, 15, 29, 33, 39, 41, 50, 51, 55, 58, 60, 61, 62, 63, 65, 71, 72, 73, 80, 82, 83, 86, 87, 90, 91, 101, 102, 105, 107, 113, 191, 207, 210, 212, 239, 240, 242, 244, 247, 250, 253, 258, 262, 265, 272, 277, 279, 280, 281, 282, 284, 285, 287, 289, 290, 296, 307, 310, 312, 316, 321], "popul": [6, 13, 15, 60, 61, 62, 63, 65, 71, 72, 80, 165], "carbon": [6, 10, 15, 31, 34, 37, 60, 61, 62, 63, 65, 71, 72, 215, 216, 217, 218, 219, 220, 221, 222, 285, 302, 303, 307, 310], "oxygen": [6, 15, 60, 61, 62, 63, 65, 71, 72, 309, 321, 322], "o": [6, 15, 16, 60, 61, 62, 63, 65, 71, 72, 206, 207, 208, 210, 212, 213, 240, 285, 297, 309, 310, 312, 321, 322], "now": [6, 15, 60, 61, 62, 63, 65, 71, 72, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 275, 276, 283, 289, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323], "new_geom": 6, "1st": [6, 15, 36, 60, 61, 62, 63, 65, 71, 72, 75, 83, 87, 102, 105, 206, 207, 208, 210, 212, 213, 217, 218, 221, 259, 307], "3rd": [6, 15, 29, 33, 36, 41, 50, 60, 61, 62, 63, 65, 71, 72, 180, 188, 257, 293, 304], "4th": [6, 15, 60, 61, 62, 63, 65, 71, 72], "obj": [6, 15, 59, 60, 61, 62, 63, 65, 71, 72, 74, 75, 109, 110, 111, 112, 113, 114, 139, 151, 196, 199, 211, 251, 252, 253, 254], "5th": [6, 15, 60, 61, 62, 63, 65, 71, 72], "atoms_a": 6, "atoms_b": 6, "swapax": [6, 7, 17], "axis_a": 6, "axis_b": 6, "decid": [6, 14, 251, 252, 253, 254], "bigger": [6, 7, 44, 45, 46, 47, 49, 50, 52, 53, 293, 312, 321], "until": [6, 13, 15, 17, 60, 61, 62, 63, 65, 71, 72, 178, 199, 261, 276, 283, 301, 312], "__get__": [6, 109, 110, 111, 112, 113, 114], "objectdispatch": [6, 109, 110, 111, 112, 113, 114], "upon": [6, 63, 74, 75, 83, 85, 87, 88, 89, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 199, 285], "invoc": [6, 109, 110, 111, 112, 113, 114, 178, 289], "invok": [6, 109, 110, 111, 112, 113, 114, 240], "placehold": [6, 109, 110, 111, 112, 113, 114], "attribut": [6, 17, 59, 74, 75, 109, 110, 111, 112, 113, 114, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 251, 252, 253, 254, 283, 302, 312, 316, 318], "special": [6, 56, 58, 64, 109, 110, 111, 112, 113, 114, 191, 193, 240, 251, 252, 254, 283, 291, 296, 312, 314, 315, 317, 321, 323], "obj_getattr": [6, 109, 110, 111, 112, 113, 114], "attr": [6, 109, 110, 111, 112, 113, 114, 153, 318], "instance_dispatch": [6, 109, 110, 111, 112, 113, 114], "abstractdispatch": [6, 109, 110, 111, 112, 113, 114], "type_dispatch": [6, 109, 110, 111, 112, 113, 114], "classdispatch": [6, 109, 110, 111, 112, 113, 114], "translate2uc": [6, 261], "ly": 6, "edg": [6, 13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 275, 276, 285, 305, 321], "due": [6, 13, 15, 56, 60, 61, 62, 63, 64, 65, 71, 72, 206, 207, 208, 210, 212, 213, 258, 265, 275, 290], "small": [6, 44, 196, 211, 257, 258, 259, 268, 269, 273, 275, 282, 290, 293, 308, 310], "round": 6, "error": [6, 15, 60, 61, 62, 63, 64, 65, 71, 72, 113, 139, 147, 184, 191, 240, 259, 279, 313, 316], "situat": [6, 251, 252, 253, 254, 316, 320], "lower": [6, 109, 110, 121, 207, 212, 293, 318, 321], "uc2sc": 6, "unrepeat": [6, 13, 15, 17, 60, 61, 62, 63, 65, 71, 72, 261], "similarli": 6, "rtol": 6, "cut": [6, 7, 13, 15, 60, 61, 62, 63, 65, 71, 72, 261, 307], "region": [6, 7, 15, 60, 61, 62, 63, 65, 66, 67, 71, 72, 178, 206, 207, 208, 209, 210, 212, 213, 214, 243, 275, 293, 308, 318], "could": [6, 13, 15, 55, 60, 61, 62, 63, 65, 71, 72, 240, 251, 252, 253, 254, 262, 265, 312, 316, 319, 322, 323], "symmetr": [6, 13, 15, 60, 61, 62, 63, 65, 71, 72, 192, 262, 306, 308], "setup": [6, 7, 60, 61, 62, 63, 65, 71, 72, 257, 259, 278, 293, 300, 301, 304, 307], "op": 6, "issu": [6, 15, 56, 60, 61, 62, 63, 65, 71, 72, 113, 140, 141, 262, 269, 276, 277, 279, 280, 281, 291, 318], "allclos": [6, 16, 56, 58, 64, 214], "gxyz": 6, "within_sc": 6, "within_inf": [6, 262], "infinit": [6, 66, 67, 68, 70, 243, 262, 313], "boundari": [6, 7, 13, 15, 60, 61, 62, 63, 64, 65, 71, 72, 109, 110, 111, 114, 275, 285, 299, 300, 312], "imag": [6, 7, 20, 147, 258, 309, 310, 312, 313], "insid": [6, 251, 252, 253, 254, 312, 313, 314, 318, 320, 322], "includ": [6, 60, 62, 63, 72, 86, 90, 181, 206, 207, 208, 210, 212, 213, 247, 251, 252, 253, 254, 257, 281, 306, 309, 310, 313, 316, 320], "increas": [6, 13, 56, 58, 60, 62, 63, 64, 71, 72, 257, 258, 263, 269, 273, 275, 276, 277, 291, 308, 316, 321], "geometr": [6, 109, 110, 111, 112, 113, 114, 206, 207, 208, 210, 212, 213, 250], "vital": [6, 206, 207, 208, 210, 212, 213, 309], "write_geometri": [6, 143, 146, 147, 150, 158, 167, 171, 181, 188, 194, 200, 205, 217, 218, 221, 225, 226, 227, 267, 289], "directli": [6, 7, 13, 15, 16, 41, 44, 45, 46, 47, 50, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 90, 91, 109, 110, 111, 112, 113, 114, 197, 205, 206, 207, 208, 209, 210, 212, 213, 214, 251, 252, 253, 254, 273, 277, 279, 292, 294, 295, 296, 307, 309, 310, 311, 312, 313, 314, 317, 321], "bc": [7, 33], "divis": [7, 55, 56, 277, 283, 307, 318], "condit": [7, 13, 15, 60, 61, 62, 63, 65, 71, 72, 285, 300, 312, 318], "repres": [7, 58, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 289, 302, 305, 312, 314, 321], "preced": [7, 14, 60, 62, 63, 72, 120, 182, 183, 188, 201, 218, 221], "grid1": 7, "grid2": 7, "grid3": 7, "complex128": [7, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 73, 83, 87, 196, 205, 211, 310], "dirichlet": [7, 300], "neumann": [7, 300], "open": [7, 137, 138, 157, 162, 181, 196, 201, 211, 278, 279, 285, 291, 298, 300, 308, 309, 310, 311, 313, 321], "function_": 7, "mayb": [7, 251, 252, 253, 254, 317], "measur": [7, 286, 318], "modul": [7, 56, 58, 64, 131, 238, 242, 244, 257, 260, 263, 280, 281, 282, 290, 312, 314, 315, 316, 321], "go": [7, 17, 44, 45, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 270, 283, 296, 305, 308, 312, 313, 314, 316, 318, 320, 321, 322, 324], "weight": [7, 44, 45, 46, 47, 49, 50, 52, 53, 56, 58, 63, 64, 178, 187, 193, 196, 199, 206, 207, 208, 209, 210, 211, 212, 213, 214, 220, 240, 293, 307, 309, 310], "cross_sect": 7, "cross": [7, 90, 285, 320], "api": [7, 212, 256, 262, 263, 266, 267, 268, 275, 280, 291, 296, 317], "might": [7, 253, 283, 312, 313, 315, 316, 318, 320, 321, 322, 323], "dcell": [7, 310], "dkind": [7, 13, 14, 15, 59, 60, 61, 62, 63, 65, 71, 72, 73, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106], "dvolum": [7, 94, 309], "fill": [7, 14, 15, 56, 60, 61, 62, 63, 65, 71, 72, 90, 206, 207, 208, 210, 212, 213, 278, 309], "val": [7, 251, 252, 254, 283, 312, 318, 321, 323], "coord": [7, 265, 307], "index2xyz": 7, "index_fold": 7, "placement": 7, "fold": [7, 57, 66, 67, 83, 87, 102, 105, 206, 207, 208, 209, 210, 212, 213, 214], "index_trunc": 7, "truncat": [7, 191, 269], "interp": [7, 16, 312], "interpol": [7, 16, 251, 258, 286, 300, 312, 323], "ndimag": 7, "zoom": [7, 64, 308], "finer": [7, 312, 321, 323], "spline": 7, "quadrat": 7, "constant": [7, 13, 14, 15, 29, 31, 33, 34, 37, 41, 60, 61, 62, 63, 65, 71, 72, 109, 110, 111, 112, 114, 131, 156, 180, 181, 188, 206, 207, 208, 210, 212, 213, 258, 262, 280, 308], "reflect": [7, 60, 62, 206, 207, 208, 210, 212, 213, 258, 262, 275], "nearest": [7, 191, 304, 305, 307], "comput": [7, 17, 90, 278, 283, 285, 286, 312, 321], "border": 7, "isosurfac": [7, 258, 312], "level": [7, 63, 75, 83, 87, 102, 105, 131, 138, 160, 174, 176, 178, 181, 183, 184, 185, 188, 189, 192, 195, 197, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 219, 258, 268, 276, 277, 280, 307, 309, 310, 316, 317, 318], "step_siz": [7, 312, 321], "skimag": 7, "marching_cub": 7, "scikit": 7, "instal": [7, 280, 282, 283, 296], "contour": [7, 90, 91, 312], "max": [7, 8, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 191, 307, 316, 318, 321], "step": [7, 15, 50, 54, 60, 61, 62, 63, 65, 71, 72, 98, 108, 122, 143, 165, 166, 178, 191, 222, 238, 251, 252, 253, 254, 275, 281, 289, 300, 314, 315, 321], "larger": [7, 57, 60, 62, 63, 65, 71, 72, 111, 114, 206, 207, 208, 210, 212, 213, 267, 289, 297, 306], "coarser": 7, "topolog": [7, 285, 286], "though": [7, 129, 251, 252, 253, 254, 304, 307, 313, 314, 320], "vert": 7, "spatial": [7, 112], "mesh": [7, 182, 300], "vertic": [7, 17], "n_face": 7, "face": [7, 17, 32, 33, 303, 316], "triangular": [7, 285], "referenc": 7, "vertex": 7, "triangl": [7, 316], "exactli": [7, 15, 17, 20, 60, 61, 62, 63, 65, 71, 72, 112, 205, 207, 212, 251, 252, 253, 254, 259, 275, 283, 312, 313, 314, 316, 319, 320, 322], "visual": [7, 131, 178, 281, 283, 297, 307, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320], "tool": [7, 212, 230, 242, 244, 278, 280, 281, 282, 284, 285, 286, 288, 289, 290, 291, 296, 301, 312, 313], "colormap": 7, "classmethod": [7, 13, 14, 15, 17, 54, 55, 60, 61, 62, 63, 64, 65, 71, 72, 205, 251, 252, 253, 254, 293, 298], "mgrid": [7, 310], "pyamg_boundary_condit": 7, "pyamg": [7, 300], "csr_matrix": [7, 13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 206, 207, 208, 210, 212, 213], "rh": [7, 129], "solut": [7, 198, 275, 300, 318], "stencil": 7, "pyamg_fix": 7, "pyamg_indic": 7, "fix": [7, 60, 62, 102, 105, 181, 217, 218, 221, 251, 252, 253, 254, 256, 257, 258, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 300], "csc_matrix": 7, "lh": [7, 129], "equat": [7, 16, 17, 57, 75, 83, 87, 102, 105, 120, 198, 206, 207, 208, 210, 212, 213, 293, 299, 300], "pyamg_index": 7, "queri": [7, 17, 76, 151, 152, 178, 182, 189, 191, 195, 196, 197, 199, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 258, 263, 273, 312, 321], "passabl": 7, "contrari": [7, 300, 309, 310], "below": [7, 14, 15, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 156, 157, 181, 191, 199, 206, 207, 208, 210, 212, 213, 240, 285, 290, 293, 301, 305, 307, 308, 309, 310, 312, 316, 318, 320], "pyamg_sourc": 7, "term": [7, 17, 60, 62, 63, 66, 67, 72, 205, 207, 212, 251, 252, 253, 254, 269, 291, 300, 308, 319], "read_grid": [7, 147, 181, 182, 183, 188, 198, 218, 221, 290, 309, 312, 321], "remove_part": 7, "sub_part": 7, "set_bc": 7, "third": [7, 17, 289, 290, 300, 304, 321], "set_boundari": 7, "set_boundary_condit": 7, "set_geometri": [7, 290], "entiti": 7, "viabl": [7, 66, 67, 263], "set_grid": 7, "smooth": [7, 312, 323], "make": [7, 13, 15, 60, 61, 62, 63, 65, 68, 71, 72, 74, 75, 83, 85, 87, 88, 92, 93, 102, 104, 105, 106, 181, 196, 205, 206, 207, 208, 210, 211, 212, 213, 238, 248, 251, 252, 253, 254, 258, 259, 262, 263, 266, 270, 275, 282, 293, 312, 313, 315, 316, 317, 318, 320, 321, 323], "smoother": [7, 321], "filter": [7, 258, 320], "standard": [7, 60, 62, 63, 71, 72, 183, 240], "deviat": [7, 297], "uniform": 7, "smoothen": [7, 312], "gaussian_filt": 7, "topyamg": [7, 198], "suit": [7, 281, 285, 296], "complic": [7, 309], "solver": [7, 60, 61, 62, 63, 65, 71, 72, 262, 280, 296], "prove": 7, "best": [7, 65, 240, 261, 268, 312, 313, 314, 320, 321, 323], "varieti": [7, 188, 212, 230, 238, 282, 284, 310], "3d": [7, 66, 67, 91, 109, 111, 114, 290, 307, 312, 313, 323], "poisson": [7, 198, 212, 275, 280, 296, 299], "problem": [7, 15, 60, 61, 62, 63, 65, 71, 72, 181, 205, 275, 276, 293, 296, 307], "linalg": [7, 17, 60, 61, 62, 63, 65, 71, 72, 269], "cg": 7, "ml": 7, "aggreg": 7, "smoothed_aggregation_solv": 7, "max_level": 7, "asprecondition": 7, "cycl": [7, 191, 238, 313], "w": [7, 50, 52, 64, 143, 187, 193, 201, 205, 217, 218, 221, 226, 285, 286, 309, 310], "pre": [7, 50, 201, 246, 273], "condition": 7, "info": [7, 59, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 206, 207, 208, 209, 210, 212, 213, 214, 263, 264, 308, 310, 321], "12": [7, 10, 55, 256, 258, 274, 277, 283, 285, 286, 290, 307, 308, 310, 312, 313, 316, 318, 320, 321, 322], "write_grid": [7, 143, 147, 183, 198, 226], "atomicorbit": [8, 16, 259, 274, 297, 307, 309, 310, 314, 323], "usual": [8, 90, 251, 252, 253, 254, 283, 313, 316, 320], "valenc": [8, 262, 297, 310], "electron": [8, 24, 63, 76, 80, 82, 86, 89, 90, 91, 92, 93, 94, 131, 165, 166, 184, 188, 191, 197, 206, 207, 208, 209, 210, 212, 213, 214, 222, 225, 235, 239, 262, 268, 269, 270, 273, 277, 280, 285, 286, 290, 298, 301, 304, 312, 321], "properli": [8, 251, 252, 253, 254, 258, 321], "hydrogenico": 8, "familiar": [8, 315], "nl": 8, "big": [8, 15, 60, 61, 62, 63, 65, 66, 67, 71, 72, 74, 75, 77, 78, 80, 83, 85, 87, 88, 95, 96, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 251, 252, 254, 273, 293, 312, 320, 321], "2z": 8, "na_0": 8, "2n": 8, "zr": 8, "2zr": 8, "l_": [8, 60], "laguerr": 8, "polynomi": 8, "http": [8, 10, 278, 281, 283, 285, 286, 298, 312, 318], "en": [8, 10, 286], "wikipedia": [8, 10], "org": [8, 10, 278, 283, 285, 286], "wiki": [8, 10], "like_atom": 8, "angular": [8, 60, 276, 307], "momentum": [8, 60, 276], "carbon_pz": 8, "still": [9, 14, 17, 50, 60, 62, 63, 72, 141, 258, 273, 283, 305, 312, 318, 320, 321], "experiment": [9, 80], "stage": 9, "probabl": [9, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 312, 313, 314, 315, 316, 318, 320], "evolv": [9, 317], "orb_tag": 9, "orbq": 9, "avail": [10, 56, 58, 64, 181, 188, 206, 207, 208, 209, 210, 212, 213, 214, 230, 240, 251, 252, 253, 254, 287, 290, 291, 307, 312, 316, 317, 323], "atomic_radii_of_the_elements_": 10, "data_pag": 10, "access": [10, 58, 60, 61, 62, 63, 65, 71, 72, 119, 138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 251, 252, 253, 254, 258, 273, 283, 293, 318], "empir": [10, 299], "van": 10, "der": [10, 16], "waal": 10, "z_int": 10, "z_short": 10, "z_label": 10, "gold": 10, "0107": 10, "atomic_mass": 10, "67": 10, "vdw": 10, "store": [10, 14, 51, 56, 58, 64, 65, 138, 143, 147, 176, 178, 180, 181, 188, 191, 192, 196, 211, 218, 221, 226, 238, 246, 251, 252, 253, 254, 257, 263, 283, 289, 307, 308, 314, 315, 316, 318], "easi": [11, 51, 60, 62, 63, 71, 72, 178, 206, 207, 208, 210, 212, 213, 225, 240, 251, 252, 253, 254, 258, 259, 262, 263, 267, 269, 273, 281, 282, 283, 284, 287, 305, 307, 313, 314, 320, 321], "conj": [11, 50], "conjug": [11, 20, 60, 62, 63, 72], "deepcopi": [11, 14, 17], "itself": [11, 55, 65, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 109, 110, 143], "norm": [11, 44, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 276, 307, 309], "slater": [12, 262], "r_n": 12, "dim": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72], "nnzpr": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72], "_sparsegeometri": [13, 15], "row": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 251, 252, 253, 254, 265, 314], "pattern": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 257, 269], "inequival": [13, 15, 60, 61, 62, 63, 65, 71, 72], "eta": [13, 15, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 76, 83, 85, 87, 88, 94, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 240, 273, 274, 293], "variant": [13, 15, 60, 61, 62, 63, 65, 71, 72, 259, 289], "create_construct": [13, 15, 60, 61, 62, 63, 65, 71, 72, 263], "examin": [13, 15, 60, 61, 62, 63, 65, 71, 72, 90], "bound": [13, 15, 44, 45, 50, 53, 60, 61, 62, 63, 65, 71, 72, 206, 207, 208, 210, 212, 213, 275, 317, 321], "idxs_xyz": [13, 15, 60, 61, 62, 63, 65, 71, 72], "def": [13, 15, 16, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 240, 283, 309, 310, 316, 318], "44": [13, 15, 60, 61, 62, 63, 65, 66, 67, 71, 72, 307, 308, 310, 314, 316, 323], "param": [13, 15, 60, 61, 62, 63, 65, 71, 72, 251, 252, 253, 254, 263], "leviat": [13, 15, 61, 65, 71], "creation": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 258, 261, 265, 267, 282, 283, 289, 301, 305], "simplist": [13, 15, 60, 61, 62, 63, 65, 71, 72, 284], "ix": [13, 15, 60, 61, 62, 63, 65, 71, 72], "zip": [13, 15, 60, 61, 62, 63, 65, 71, 72, 240, 307, 309, 318], "your": [13, 15, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 162, 225, 240, 251, 252, 253, 254, 263, 280, 283, 300, 309, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "less": [13, 15, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 147, 276, 317, 320], "100": [13, 15, 41, 60, 61, 62, 63, 65, 71, 72, 112, 143, 240, 273, 282, 285, 300, 307], "exclud": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 276, 322], "sparsecsr": [13, 15, 60, 61, 62, 63, 65, 71, 72, 257, 259, 263, 265, 266, 267, 275], "eliminate_zero": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 267], "empti": [13, 14, 15, 55, 56, 60, 61, 62, 63, 65, 71, 72, 90, 119, 259, 308, 309], "keep_nnz": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72], "memori": [13, 15, 60, 61, 62, 63, 65, 71, 72, 80, 251, 252, 253, 254, 261, 275, 293, 307, 314, 323], "consum": [13, 15, 60, 61, 62, 63, 65, 71, 72, 222, 290, 312], "represent": [13, 15, 20, 60, 61, 62, 63, 65, 71, 72, 75, 83, 87, 102, 105, 206, 207, 208, 210, 212, 213, 243, 283, 307, 312, 315, 316, 320, 321], "fromsp": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72], "preset": [13, 15, 60, 61, 62, 63, 65, 71, 72, 251, 252, 253, 254], "sparsegeometri": [13, 15, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 76, 257, 261], "iter_nnz": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 265], "column": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 178, 201, 251, 252, 253, 254, 263, 265, 273, 290, 293], "nnz": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72], "nonzero": [13, 14, 15, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 309, 310], "only_col": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72], "alreadi": [13, 15, 60, 61, 62, 63, 65, 71, 72, 90, 91, 251, 252, 253, 254, 289, 293, 312, 313, 314, 315, 316, 320, 321, 323], "extrapol": [13, 15, 44, 45, 50, 53, 60, 61, 62, 63, 65, 71, 72], "reset": [13, 15, 60, 61, 62, 63, 65, 71, 72, 251, 252, 253, 254, 293, 309, 315], "sparsiti": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 269], "had": [13, 15, 60, 61, 62, 63, 65, 71, 72, 283, 315, 320], "were": [13, 15, 60, 61, 62, 63, 64, 65, 71, 72, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 312, 320], "dimens": [13, 14, 15, 17, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 75, 80, 83, 86, 87, 89, 92, 93, 102, 105, 107, 138, 143, 157, 160, 174, 180, 183, 185, 188, 191, 192, 198, 201, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 259, 262, 290, 293, 304, 312, 321], "datatyp": [13, 15, 60, 61, 62, 63, 65, 71, 72], "delet": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72, 258, 265, 267, 269, 313], "spalign": [13, 15, 60, 61, 62, 63, 65, 71, 72], "spsame": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72], "obtain": [13, 15, 60, 61, 62, 63, 65, 71, 72, 206, 207, 208, 210, 212, 213, 290, 293, 304, 318, 319, 321], "greatli": [13, 266, 269, 290], "tocsr": [13, 14, 15, 60, 61, 62, 63, 65, 71, 72], "interchang": [13, 15, 61, 65, 71, 269], "symmetri": [13, 15, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 206, 207, 208, 210, 212, 213, 273, 285, 305, 309, 310], "pictur": [13, 15, 61, 65, 71, 304, 305], "ideal": [13, 15, 61, 65, 71], "hamiltonian": [13, 15, 56, 58, 61, 64, 65, 66, 67, 71, 80, 83, 85, 87, 88, 89, 90, 91, 172, 181, 184, 188, 196, 197, 205, 211, 214, 225, 239, 240, 243, 251, 252, 253, 254, 257, 258, 263, 264, 265, 267, 268, 269, 273, 275, 278, 280, 282, 284, 293, 304, 305, 306, 308, 312, 314, 316, 318, 319, 322], "densiti": [13, 15, 60, 61, 62, 65, 71, 82, 83, 84, 86, 101, 102, 103, 107, 177, 181, 188, 195, 206, 207, 208, 210, 212, 213, 218, 219, 239, 242, 243, 244, 257, 268, 272, 273, 290, 293, 307, 309, 310, 312, 321, 322], "k": [13, 14, 15, 16, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 80, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 102, 104, 105, 106, 119, 178, 187, 193, 196, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 220, 240, 242, 258, 264, 265, 267, 268, 269, 273, 275, 276, 277, 285, 286, 293, 294, 308, 310, 316, 318, 319, 323], "forc": [13, 15, 30, 60, 61, 62, 63, 65, 71, 72, 75, 83, 87, 90, 102, 105, 143, 156, 162, 179, 180, 181, 188, 191, 226, 245, 262, 273, 276, 283, 285, 290, 300, 304, 320], "hermitian": [13, 15, 60, 61, 62, 63, 65, 71, 72, 157, 181, 258], "sp": [13, 14, 15, 61, 65, 71], "sparseorbit": [13, 60, 61, 62, 63, 65, 71, 72, 259, 275], "sym": [13, 15, 60, 61, 62, 63, 65, 71, 72], "recreat": [13, 15, 17, 60, 61, 62, 63, 65, 71, 72, 293], "individiu": [13, 15, 60, 61, 62, 63, 65, 71, 72], "help": [13, 15, 60, 61, 62, 63, 65, 71, 72, 73, 191, 240, 251, 252, 253, 254, 257, 263, 283, 285, 288, 289, 290, 291, 300, 312, 314, 316, 317, 318, 319, 321, 322, 323], "uncov": [13, 15, 60, 61, 62, 63, 65, 71, 72, 285], "inconsist": [13, 15, 60, 61, 62, 63, 65, 71, 72, 268], "debug": [13, 15, 60, 61, 62, 63, 65, 71, 72], "wish": [13, 15, 17, 55, 60, 61, 62, 63, 65, 71, 72, 239, 276, 281, 289, 304, 312, 315, 321], "therefor": [13, 15, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 191, 199, 251, 252, 253, 254, 281, 283, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324], "As": [13, 15, 60, 61, 62, 63, 65, 71, 72, 138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 240, 283, 284, 288, 305, 310, 312, 314, 315, 316, 318, 320, 321, 322, 323], "halv": [13, 15, 60, 61, 62, 63, 65, 71, 72, 83, 85, 86, 87, 88], "left": [13, 15, 60, 61, 62, 63, 65, 68, 71, 72, 74, 75, 83, 85, 87, 88, 98, 102, 104, 105, 106, 108, 109, 110, 208, 213, 214, 274, 293, 300, 316], "clearli": [13, 15, 60, 61, 62, 63, 65, 71, 72, 312, 316], "wrong": [13, 15, 60, 61, 62, 63, 65, 71, 72, 197, 259, 261, 262, 268, 269, 275, 293], "latter": [13, 15, 34, 37, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 281, 296], "spm": [13, 15, 60, 61, 62, 63, 65, 71, 72], "conseuct": [13, 15, 60, 61, 62, 63, 65, 71, 72], "often": [13, 15, 60, 61, 62, 63, 65, 71, 72, 240, 283, 290, 297, 307, 309], "few": [13, 15, 60, 61, 62, 63, 65, 71, 72, 73, 113, 273, 289, 290, 310], "again": [13, 15, 60, 61, 62, 63, 65, 71, 72, 283, 289, 300, 308, 309, 312, 315, 316, 318], "arg1": 14, "ndarrayoperatorsmixin": 14, "compress": [14, 55, 138, 263, 309, 310], "slightli": [14, 316], "csr": [14, 60, 61, 62, 63, 65, 71, 72, 268, 293], "tri": [14, 15, 17, 60, 61, 62, 63, 64, 65, 71, 72, 162, 181, 280, 293, 296, 300], "resembl": 14, "nr": 14, "instanti": [14, 151, 258, 259, 283, 316], "veriou": 14, "mergeabl": 14, "col": [14, 251, 252, 253, 254, 307, 309, 314], "delete_column": 14, "keep_shap": 14, "action": [14, 141, 251, 252, 253, 254, 288, 290, 316], "higher": [14, 75, 80, 83, 87, 102, 105, 201, 321], "diagon": [14, 17, 56, 58, 60, 62, 63, 64, 73, 74, 75, 76, 83, 85, 87, 88, 89, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 258, 262, 280, 293, 296, 312], "diag": [14, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 121, 293], "extra": [14, 60, 62, 63, 251, 252, 253, 254, 262, 263, 312, 314, 322], "elememt": 14, "essenti": [14, 210, 251, 252, 254, 288, 306, 308, 316], "keep": [14, 29, 33, 41, 60, 62, 63, 72, 181, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 283, 290, 312, 313, 315, 321, 323], "mere": [14, 73, 206, 207, 208, 210, 212, 213], "advantageg": 14, "old": [14, 50, 181, 257, 263, 265, 268], "previous": [14, 50, 251, 252, 253, 254, 265], "mainli": [14, 56, 58, 64, 198, 214, 251, 252, 253, 254, 282], "largest": [14, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 111, 282, 309], "ncol": 14, "ptr": 14, "scale_column": [14, 15, 60, 61, 62, 63, 65, 71, 72], "sparsity_union": 14, "spmat": 14, "todens": 14, "dens": [14, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 76, 268], "rightarrow": [14, 60, 62, 63, 72], "act": [14, 60, 62, 63, 72, 251, 252, 253, 254, 320, 322], "common": [14, 62, 131, 201, 251, 252, 253, 254, 257, 268, 280, 291, 307, 315, 320, 321], "translate_column": 14, "clean": [14, 257, 258, 261, 275, 293, 296, 312], "kind": [15, 16, 35, 38, 60, 61, 62, 63, 65, 71, 72, 73, 288, 307, 309, 310, 312], "parent": [15, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 81, 83, 84, 85, 87, 88, 90, 91, 94, 100, 102, 103, 104, 105, 106, 196, 199, 208, 211, 213, 240, 251, 252, 253, 254, 258, 307, 312, 315], "even": [15, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 102, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 269, 285, 293, 304, 312, 314, 316, 319, 320, 321, 322], "commensur": [15, 30, 60, 61, 62, 63, 65, 71, 72, 240], "neighbor": [15, 60, 61, 62, 63, 65, 71, 72], "caus": [15, 60, 61, 62, 63, 64, 65, 71, 72], "equi": [15, 60, 61, 62, 63, 65, 71, 72], "sporb": [15, 60, 61, 62, 63, 65, 71, 72], "sporb2": [15, 60, 61, 62, 63, 65, 71, 72], "sporbt": [15, 60, 61, 62, 63, 65, 71, 72], "hermit": [15, 60, 61, 62, 63, 65, 71, 72, 275], "sm": [15, 60, 61, 62, 63, 65, 71, 72], "half": [15, 60, 61, 62, 63, 65, 71, 72, 182, 183, 188, 273, 320], "closest": [15, 56, 60, 61, 62, 63, 65, 71, 72, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 304], "ambigu": [15, 60, 61, 62, 63, 65, 71, 72, 268], "stricter": [15, 60, 61, 62, 63, 65, 71, 72], "baselin": [15, 60, 61, 62, 63, 65, 71, 72], "scheme": [15, 44, 54, 60, 61, 62, 63, 65, 68, 71, 72, 165, 269, 297], "join": [15, 60, 61, 62, 63, 65, 71, 72, 201], "But": [15, 60, 61, 62, 63, 65, 71, 72, 283, 315, 316, 320, 321, 322], "belong": [15, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 117, 199, 251, 252, 253, 254], "becom": [15, 17, 46, 55, 60, 61, 62, 63, 65, 71, 72, 206, 207, 208, 210, 212, 213, 273, 282], "big2": [15, 60, 61, 62, 63, 65, 71, 72], "hermitici": [15, 60, 61, 62, 63, 65, 71, 72], "rest": [15, 60, 61, 62, 63, 65, 71, 72, 251, 252, 253, 254, 312, 313, 314, 320, 321], "util": [15, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 178, 206, 207, 208, 210, 212, 213, 214, 235, 243, 247, 249, 264, 269, 273, 275, 280, 282, 288, 289, 297, 308], "prone": [15, 60, 61, 62, 63, 65, 71, 72], "good": [15, 60, 61, 62, 63, 65, 71, 72, 90, 251, 252, 253, 254, 283, 291, 312, 314, 315, 316], "idea": [15, 57, 60, 61, 62, 63, 65, 71, 72, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 279, 283, 287, 318, 323], "diff": [15, 60, 61, 62, 63, 65, 71, 72, 280, 290, 309], "least": [15, 17, 56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 289], "assertionerror": [15, 60, 61, 62, 63, 65, 71, 72], "sislwarn": [15, 60, 61, 62, 63, 65, 71, 72, 141, 181, 273, 283], "arrang": [15, 60, 61, 62, 63, 65, 71, 72, 251, 252, 253, 254], "new_obj": [15, 60, 61, 62, 63, 65, 71, 72], "tosparseatom": [15, 60, 61, 62, 63, 65, 71, 72], "alloc": [15, 60, 61, 62, 63, 65, 71, 72], "rf_or_func": 16, "y_l": 16, "equiv": [16, 60, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 310], "ln": [16, 90], "clarifi": [16, 262, 273], "implicit": [16, 33], "interp1d": 16, "fill_valu": 16, "bounds_error": 16, "univariatesplin": 16, "ext": [16, 191], "check_finit": 16, "regardless": [16, 55, 240, 280], "aa": [16, 30, 320], "evalu": [16, 57, 61, 63, 66, 67, 68, 77, 78, 92, 93, 95, 127, 192, 269], "accept": [16, 56, 58, 60, 62, 63, 64, 80, 82, 86, 97, 101, 107, 130, 201, 251, 252, 253, 254, 258, 259, 269, 319, 320, 322, 323], "custom": [16, 54, 136, 315, 316, 317, 321], "300": [16, 178, 258, 300, 307], "i_univari": 16, "i_interp1d": 16, "i_splin": 16, "functool": [16, 55, 309], "partial": [16, 60, 61, 62, 63, 65, 71, 72, 75, 83, 87, 102, 105, 259, 309], "tck": 16, "splrep": 16, "splev": 16, "400": [16, 307, 308, 310], "f_univari": 16, "f_interp1d": 16, "f_spline": 16, "toatomicorbit": 16, "q_0": 16, "behind": [17, 307], "tocel": 17, "cell2length": [17, 262], "prescrib": 17, "solv": [17, 269, 280, 296, 299, 300, 321], "t": [17, 44, 45, 46, 48, 49, 50, 52, 53, 54, 60, 62, 66, 67, 68, 74, 75, 79, 83, 85, 87, 88, 94, 102, 104, 105, 106, 191, 201, 206, 207, 210, 212, 214, 222, 251, 252, 253, 254, 259, 273, 274, 276, 283, 289, 293, 300, 307, 309, 310, 312, 313, 314, 315, 316, 319, 320, 321, 322, 323], "know": [17, 44, 151, 191, 242, 251, 252, 253, 254, 273, 283, 285, 300, 308, 310, 312, 313, 315, 316, 318, 322], "encompass": [17, 66, 67, 109, 110, 111, 113, 310], "analyz": [17, 265, 274, 297], "neglect": [17, 308], "reciproc": [17, 56, 58, 64, 66, 67, 68, 187, 193, 307, 308], "invers": [17, 50, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 259, 280, 286, 296], "lapack": 17, "is_cartesian": 17, "threshold": [17, 199, 312], "off": [17, 60, 62, 284, 293, 307, 312], "product": [17, 74, 75, 83, 85, 87, 88, 90, 102, 104, 105, 106, 276, 316, 320], "ib": 17, "ic": 17, "parallel": [17, 67, 239, 259, 268, 281], "ax2": 17, "corner": [17, 56, 109, 110, 285, 305, 321], "normal_v": 17, "outward": 17, "n1": 17, "p1": 17, "n2": 17, "p2": 17, "n3": 17, "p3": 17, "n4": 17, "p4": [17, 110], "n5": 17, "p5": 17, "n6": 17, "p6": 17, "advantag": [17, 55, 191, 196, 211, 240, 307], "uc": [17, 206, 207, 208, 210, 212, 213], "secondli": [17, 263, 284, 307, 309], "henc": [17, 46, 91, 180, 190, 225, 239, 242, 264, 289, 304, 305, 306, 307], "further": [17, 56, 58, 64, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 263, 293], "read_supercel": [17, 147, 150, 157, 162, 167, 171, 181, 182, 183, 188, 189, 194, 197, 198, 200, 205, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 221, 225], "tocuboid": [17, 109, 110, 111, 112, 113, 114], "cuboid": [17, 109, 111, 112, 113, 114, 248, 273], "3x3": [17, 289, 307], "beta": [17, 46, 60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 89, 91, 93, 94, 102, 104, 105, 106, 165, 166, 206, 207, 208, 210, 212, 213, 293], "gamma": [17, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 83, 87, 99, 102, 105, 199, 205, 209, 214, 263, 264, 273, 275, 293, 294, 295, 305, 307, 309, 310, 316, 318, 319, 323], "put": [17, 67, 251, 252, 253, 254, 314, 315, 320], "cell_1_1_1": 17, "cell_1_2_3": 17, "6740831e": 18, "11": [18, 89, 90, 206, 207, 208, 210, 212, 213, 256, 267, 283, 285, 286, 307, 308, 309, 310, 312, 316, 318, 320, 321, 322], "gravit": 18, "kg": [18, 24, 25, 115, 117, 247], "748091729863649e": 19, "conduct": [19, 239, 259, 262, 277, 285, 286], "capabl": [20, 269, 281, 282, 290, 309, 314, 317, 320], "desir": [20, 66, 67, 251, 252, 253, 254, 281, 307, 318], "m2nm": 20, "nm": [20, 285], "1000000000": 20, "__call__": [20, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 298], "as_integer_ratio": 20, "ratio": [20, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 212, 286], "pair": [20, 119, 251, 252, 253, 254, 285], "whose": [20, 283, 318, 320], "denomin": [20, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 251, 252, 253, 254], "overflowerror": 20, "infin": [20, 44, 45], "nan": [20, 56], "25": [20, 178, 271, 283, 285, 307, 313, 318, 320, 321], "fromhex": 20, "hexadecim": 20, "0x1": 20, "ffffp10": 20, "2047": 20, "984375": 20, "0x1p": 20, "1074": 20, "5e": [20, 147, 201, 226], "324": 20, "hex": 20, "999999999999ap": 20, "14159": [20, 308], "921f9f01b866ep": 20, "imaginari": [20, 60, 62, 63, 66, 67, 70, 72, 76, 147, 206, 207, 208, 209, 210, 212, 213, 214, 310], "is_integ": 20, "299792458": [21, 246], "light": [21, 313], "62607015e": 22, "34": [22, 23, 283, 285, 312, 314, 320], "planck": [22, 23], "hz": [22, 23], "0545718176461565e": 23, "1093837015e": 24, "31": [24, 265, 285, 313, 320], "67262192369e": 25, "27": [25, 283, 318, 320, 321], "proton": 25, "602176634e": 26, "19": [26, 115, 269, 283, 285, 307, 312, 313, 316, 318, 320, 321], "width": [27, 35, 38, 43, 251, 252, 253, 254, 310, 318, 320], "armchair": [27, 35, 38, 43], "nanoribbon": [27, 35, 43, 257, 259, 285], "transvers": [27, 35, 38, 43, 285], "honeycomb": [27, 30, 34, 35, 38, 43, 262, 303], "graphene_nanoribbon": [27, 38, 43, 320], "zgnr": [27, 35, 38], "zigzag": [27, 35, 38, 43, 285], "alat": [28, 29, 31, 32, 33, 40, 41, 42], "bodi": [28, 29, 303], "layer": [29, 30, 33, 41, 285], "surfac": [29, 33, 41, 67, 131, 196, 211, 258, 262, 280, 285, 286, 309, 312, 321], "slab": [29, 33, 41, 131, 261, 262, 280], "bcc": [29, 33, 41, 303], "crystal": [29, 33, 40, 41, 80, 285, 286], "fcc": [29, 33, 41, 303], "facet": [29, 33, 41], "locat": [29, 33, 41, 56, 64, 66, 67, 250, 251, 252, 253, 254, 261, 301, 312], "zip_longest": [29, 33, 41, 56, 58, 64], "intact": [29, 33, 41], "discourag": [29, 33, 41], "fcc_slab": [29, 41, 261], "notimplementederror": [29, 33, 41, 316], "fault": [29, 33, 41], "introduc": [29, 33, 41, 60, 62, 63, 72, 263, 265, 274, 283, 301, 307, 312, 317, 321], "fulli": [29, 33, 56, 67, 90, 109, 110, 111, 112, 113, 114, 273, 310], "rocksalt_slab": [29, 33, 261], "rocksalt": [29, 33, 41, 261], "halit": [29, 33, 40, 41], "twist": [30, 257, 285, 322], "35": [30, 307, 320], "ret_angl": 30, "hexagon": [30, 36, 285], "prescript": 30, "bottom": [30, 263, 285, 320], "top": [30, 201, 263, 307, 316, 320, 321], "ba": 30, "sequenc": [30, 138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 251, 252, 253, 254], "57": [31, 272, 303], "unitcel": 31, "111": [33, 275], "electrod": [33, 198, 206, 207, 208, 209, 210, 212, 213, 214, 269, 275, 276, 280, 285, 293, 300], "bcabca": 33, "bca": 33, "4x5": 33, "maintain": [33, 55, 283, 285, 296], "surround": 33, "bcabc": 33, "cab": 33, "wrongli": 33, "bcc_slab": [33, 41, 261], "ribbon": [35, 38, 320], "agnr": [35, 38, 43], "coa": 36, "63333": 36, "pack": [36, 64, 240, 277, 280, 283, 307, 308, 310], "bn": [37, 319], "eas": [37, 289], "chiral": [39, 285, 303], "cosmet": 39, "nano": [39, 285, 286], "tube": 39, "nacl": [40, 41, 285], "rock": 41, "salt": 41, "interlock": 41, "64": [41, 112, 127], "cl": [41, 142, 151, 152, 205, 302], "gap": [41, 285, 308, 309, 316], "\u00e5": [41, 290, 306, 307], "abab": 41, "03": [44, 45, 206, 207, 208, 210, 212, 213, 308], "histori": [44, 45, 46, 47, 50, 52, 53, 54, 238, 251, 252, 253, 254, 261, 315], "metric": [44, 45, 50, 53, 238], "diismix": [44, 53], "lagrang": [44, 45, 50, 53], "dii": [44, 50, 238, 262], "pulai": [44, 45, 50, 53, 238], "residu": [44, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 276], "adjust": [44, 45], "our": [44, 283, 307, 308, 309, 310, 312, 313, 316, 318, 320, 321, 323], "guess": [44, 180, 201, 312, 318, 323], "f_": 44, "saddl": 44, "df": [44, 45, 46, 47, 48, 49, 50, 52, 53, 54], "delta": [44, 45, 46, 50, 52, 53, 56, 74, 75, 80, 82, 83, 85, 86, 87, 88, 89, 90, 101, 102, 104, 105, 106, 107, 205, 262, 269, 308], "omit": [44, 45, 47, 50, 53], "typevar": [44, 45, 46, 48, 49, 50, 52, 53, 54], "adjust_weight": [44, 45], "13": [44, 45, 256, 261, 280, 281, 283, 285, 307, 312, 316, 318, 320, 321, 322], "spread": [44, 45, 96, 99, 178, 308], "onc": [44, 45, 55, 283, 293, 301, 312, 314, 316, 318], "converg": [44, 45, 68, 286, 310], "toward": [44, 45, 320], "fermi": [44, 45, 63, 91, 95, 176, 178, 181, 184, 188, 189, 191, 192, 195, 197, 212, 219, 258, 268, 276, 277, 307, 310, 316, 318], "hit": [44, 45, 318], "suitabl": [44, 45, 278, 313], "scalartyp": [44, 45, 50, 53], "covari": [44, 45, 50, 53], "track": [44, 45, 46, 47, 50, 52, 53], "mixer": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 257, 261], "set_histori": [44, 45, 46, 47, 50, 52, 53], "set_weight": [44, 45, 46, 47, 49, 50, 52, 53], "solve_lagrang": [44, 45, 50, 53], "deriv": [44, 45, 46, 47, 49, 50, 52, 53, 60, 61, 62, 63, 65, 71, 72, 75, 83, 87, 89, 102, 105, 257, 259, 262], "adaptivediismix": 45, "basehistoryweightmix": [46, 50, 52], "anderson": [46, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "bar": [46, 240, 273, 281, 313], "rangl": [46, 50, 74, 75, 83, 85, 86, 87, 88, 90, 92, 93, 102, 104, 105, 106, 208, 213, 293], "choic": [46, 94, 312, 316], "delta_i": [46, 50], "f_i": [46, 50, 91, 212], "langl": [46, 50, 74, 75, 83, 85, 86, 87, 88, 90, 92, 93, 102, 104, 105, 106, 208, 213, 293], "delta_": [46, 293], "m_": [46, 50, 57, 60, 62, 63, 72], "baseweightmix": 47, "abstract": [48, 49, 316], "basemix": [49, 54], "subspac": [50, 293], "known": [50, 90, 108, 151, 212], "trial": 50, "Its": [50, 73, 193, 282, 293, 315], "sens": [50, 68, 92, 93, 141, 181, 199, 251, 252, 253, 254, 284, 307, 314, 318, 320, 321], "delta_j": 50, "regular": [50, 120, 132, 181, 217, 218, 221, 281, 293, 305, 314], "test": [50, 80, 89, 128, 201, 214, 256, 258, 259, 263, 265, 266, 268, 269, 272, 273, 277, 279, 280, 283, 290, 293, 317, 321], "ravel": [50, 310], "dot": [50, 251, 252, 253, 254, 318, 322], "lagrangian": [50, 53], "dequ": 51, "manag": [51, 143, 253, 273, 283, 312, 313], "history_max": 51, "queue": 51, "clear": [51, 54, 55, 66, 67, 119, 251, 252, 253, 283, 316], "max_el": 51, "sole": 52, "yield_func": 54, "yield_repeat": 54, "mix1": 54, "mix2": 54, "gen": 54, "restart": [54, 240], "yield_chain": 54, "turn": [54, 56, 58, 59, 64, 74, 75, 112, 280, 312], "wise": [55, 56, 58, 64], "inherit": [55, 113, 132, 136, 142, 239, 276, 315, 316, 320], "extens": [55, 109, 110, 111, 114, 151, 152, 182, 183, 205, 251, 252, 253, 254, 267, 296, 305, 317, 320, 323], "list_sum": 55, "easili": [55, 191, 201, 212, 246, 257, 263, 264, 265, 267, 273, 275, 282, 283, 290, 300, 307, 311, 313, 314, 315, 316, 318, 320, 321, 322, 323], "tediou": 55, "oplist_sum": 55, "natur": [55, 56, 66, 67, 276, 283], "deal": [55, 280, 289, 290, 304, 307, 309, 310, 312], "l1": [55, 275], "l2": [55, 275], "l3": 55, "18": [55, 171, 262, 275, 281, 283, 286, 307, 310, 312, 313, 316, 318, 320, 321, 322], "24": [55, 278, 283, 285, 307, 318, 320, 321], "decor": [55, 283], "my_func": 55, "elementwis": 55, "mathemat": [55, 56, 58, 64, 120, 127, 240, 308], "subtract": [55, 280, 290], "power": [55, 115, 207, 212, 240, 243, 274, 314, 320, 322, 323], "shallow": [55, 119], "count": [55, 94, 192, 222, 240, 268], "occurr": 55, "myret": 55, "stop": [55, 251, 252, 253, 254, 321], "9223372036854775807": 55, "pop": [55, 119], "indexerror": 55, "IN": 55, "modifi": [55, 251, 252, 253, 254, 286, 312, 314, 315, 316, 317, 318], "stabl": [55, 277, 296], "flag": [55, 60, 62, 63, 72, 181, 217, 218, 221, 222, 225, 240, 261, 264, 268, 281, 290], "brillouinzon": [56, 63, 64, 66, 67, 90, 91, 187, 193, 196, 211, 240, 257, 259, 267, 269, 273, 275, 281, 307, 308], "band": [56, 74, 75, 76, 83, 85, 87, 88, 90, 102, 104, 105, 106, 176, 178, 181, 191, 220, 222, 240, 242, 251, 252, 253, 254, 259, 265, 267, 273, 276, 284, 285, 286, 305, 306, 307, 308, 310, 312, 316, 319], "constraint": [56, 276, 322], "jump_dk": 56, "percentag": 56, "lineark": [56, 240, 259, 310], "discontinu": [56, 259], "jump": [56, 259, 282], "disconnect": 56, "lineartick": 56, "200": [56, 64, 273, 300, 307, 321], "Such": [56, 76], "interest": [56, 206, 207, 208, 210, 212, 213, 265, 305, 307, 308, 309, 310, 312, 316, 321, 322], "potenti": [56, 58, 64, 68, 77, 78, 95, 196, 198, 206, 207, 208, 209, 210, 211, 212, 213, 214, 221, 269, 273, 297, 298, 300], "run": [56, 58, 64, 180, 181, 184, 191, 197, 217, 218, 221, 240, 251, 252, 253, 254, 258, 263, 264, 265, 280, 281, 283, 289, 290, 293, 309, 310, 312, 313, 315], "computation": [56, 58, 64], "heavi": [56, 58, 64, 321], "straight": [56, 58, 64], "forward": [56, 58, 64, 270, 316], "manner": [56, 58, 64, 238, 280, 310], "eigenvalu": [56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 80, 82, 83, 84, 85, 86, 89, 90, 101, 102, 103, 104, 107, 178, 206, 207, 208, 210, 212, 213, 220, 222, 240, 242, 244, 267, 273, 280, 293, 307, 308, 309, 310], "bz": [56, 58, 63, 64, 66, 67, 90, 91, 187, 193, 196, 211, 240, 258, 259, 307, 308, 310], "ik": [56, 58, 64], "eigh": [56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 240], "enumer": [56, 58, 64, 307, 308, 310], "expos": [56, 58, 64, 247, 257, 278, 282, 291], "weigh": [56, 58, 64], "python": [56, 58, 60, 62, 63, 64, 71, 72, 212, 214, 257, 259, 263, 269, 280, 281, 282, 283, 284, 290, 292, 310, 312, 313, 315, 318, 321], "greater": [56, 58, 64], "flexibl": [56, 58, 64, 257, 269, 316, 317, 319, 321, 322], "datarrai": [56, 58, 64], "xarrai": [56, 58, 64, 176, 192, 257, 260, 273, 281, 318], "dataarrai": [56, 58, 64, 176, 192, 257, 273, 318], "in_primit": [56, 58, 64], "primit": [56, 58, 64], "insert_jump": 56, "easier": [56, 206, 207, 208, 210, 212, 213, 248, 251, 252, 253, 254, 259, 261, 262, 264, 265, 266, 270, 283, 293], "line": [56, 178, 181, 191, 201, 212, 214, 222, 227, 240, 258, 263, 269, 275, 280, 291, 296, 305, 309, 310, 312, 313, 315, 316, 318, 321, 322], "interpret": [56, 120, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 258, 259, 313, 318, 321], "graph": 56, "bandrstructur": 56, "data_with_jump": 56, "ret_weight": [56, 58, 64], "kpt": [56, 58, 64, 206, 207, 208, 209, 210, 212, 213, 214], "tick": [56, 176, 318], "meant": [56, 251, 252, 253, 254, 265, 276, 315, 318], "eig": [56, 60, 61, 62, 63, 65, 71, 72, 80, 82, 83, 84, 86, 178, 181, 269, 275, 309, 310], "plt": [56, 240, 280, 307, 308, 309, 310], "lk": 56, "kt": [56, 77, 78, 95, 178, 206, 207, 208, 209, 210, 212, 213, 214, 264], "kl": 56, "xtick": [56, 310], "linspace_bz": 56, "parameter": [56, 58, 64], "linear_k": [56, 310], "ticklabel": [56, 176, 318], "mark": [56, 251, 252, 253, 254, 290, 307, 316], "weight_scal": [56, 58, 64], "strategi": [56, 58, 64, 314], "field": [56, 58, 64, 150, 188, 190, 191, 206, 207, 208, 210, 212, 213, 226, 251, 252, 253, 254, 263, 283, 285, 312, 320], "itertool": [56, 58, 64], "fillvalu": [56, 58, 64], "param_circl": [56, 58, 64, 90, 308], "n_or_dk": [56, 58, 64], "kr": [56, 58, 64, 90, 308], "circl": [56, 58, 64, 308], "perfect": [56, 58, 64, 308], "discret": [56, 58, 64, 90, 308], "circular": [56, 58, 64, 66, 67, 90, 308], "90": [56, 58, 64, 259], "60": [56, 58, 64, 285], "bz_rec": [56, 58, 64], "parametr": [56, 58, 64, 259], "accordingli": [56, 58, 64, 251, 252, 253, 254, 293], "doubl": [56, 58, 60, 61, 62, 63, 64, 65, 71, 72, 90, 222, 277, 309], "sai": [56, 58, 64, 73, 251, 252, 253, 254, 267, 273, 290, 307, 315, 316, 322], "own": [56, 58, 64, 240, 280, 312, 313, 314, 316, 324], "set_par": [56, 58, 64, 308], "tocartesian": [56, 58, 64, 308], "transfer": [56, 58, 60, 62, 63, 64, 208, 213, 269, 285], "tolinear": 56, "ret_index": [56, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 215, 216, 217, 218, 219, 220, 221, 222], "toreduc": [56, 58, 64], "ret_dim": [56, 58, 64], "auxilliari": [56, 58, 64], "integr": [56, 58, 64, 66, 67, 90, 91, 206, 207, 208, 210, 212, 213, 243, 259, 262, 274, 297, 307, 308, 309, 317], "vol": [56, 58, 64], "d": [56, 58, 60, 61, 64, 74, 75, 80, 82, 83, 85, 86, 87, 88, 91, 101, 102, 104, 105, 106, 107, 119, 121, 180, 188, 191, 206, 207, 208, 210, 212, 213, 285, 286, 297, 300, 303, 309, 312], "0d": [56, 58, 64], "tablesil": [56, 58, 64, 230], "theorem": [57, 239], "unfold": [57, 66, 67, 258], "wrapper": [57, 206, 210, 251, 252, 253, 254, 283], "summar": [57, 73, 320, 321], "frac1n": 57, "sum_": [57, 60, 62, 66, 67, 74, 75, 83, 85, 86, 87, 88, 89, 102, 104, 105, 106, 107, 206, 207, 208, 210, 212, 213], "substack": 57, "k_j": 57, "quad": [57, 74, 75, 83, 85, 87, 88, 98, 102, 104, 105, 106, 108], "begin": [57, 74, 75, 83, 85, 87, 88, 98, 102, 104, 105, 106, 108, 120, 263, 307, 309, 322], "bmatrix": 57, "vdot": 57, "ddot": 57, "otim": 57, "k_unfold": 57, "unfold_point": 57, "shorthand": [57, 206, 207, 208, 210, 212, 213, 289, 290], "sampl": [57, 63, 64, 66, 67, 206, 207, 208, 209, 210, 212, 213, 214, 308], "prod": [57, 259], "parentcontain": [59, 74], "degener": [59, 75, 81, 83, 84, 87, 89, 90, 91, 100, 102, 103, 105, 259], "08": [59, 81, 84, 100, 103, 109, 110, 111, 114, 299, 313], "asarrai": [59, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 257], "coeffic": [59, 81, 84, 100, 103], "inplac": [59, 74, 75, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 259], "_densitymatrix": [60, 62], "dm": [60, 62, 177, 181, 188, 195, 257, 273, 276, 309], "rememb": [60, 62, 63, 71, 72, 199, 261, 314], "spin": [60, 62, 63, 66, 67, 68, 71, 72, 80, 82, 83, 85, 86, 87, 88, 92, 93, 94, 165, 178, 182, 183, 188, 191, 192, 196, 199, 207, 211, 212, 218, 220, 221, 239, 242, 257, 258, 259, 260, 262, 265, 268, 269, 275, 276, 285, 290, 305, 306, 307, 309, 310, 316, 319, 322, 323], "onsit": [60, 62, 63, 305], "colinear": [60, 62, 63, 72, 83, 85, 86, 87, 88, 92, 94, 242, 258, 262, 268, 318], "bit": [60, 62, 63, 283, 314, 315, 317, 321], "tricki": [60, 62, 63], "m11": [60, 62, 63], "m22": [60, 62, 63], "m12r": [60, 62, 63], "m12i": [60, 62, 63], "im": [60, 62, 63, 89, 90, 206, 207, 208, 210, 212, 213], "m11r": [60, 62, 63], "m11i": [60, 62, 63], "m22r": [60, 62, 63], "m22i": [60, 62, 63], "m21r": [60, 62, 63], "m21i": [60, 62, 63], "unchang": [60, 62, 63, 251, 252, 253, 254], "dk": [60, 61, 66, 67, 259, 286, 308], "gaug": [60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 90, 94, 102, 104, 105, 106, 259], "d_": [60, 61, 62], "nu": [60, 61, 62, 63, 65, 71, 72, 74, 75, 80, 83, 85, 86, 87, 88, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213], "mu": [60, 61, 62, 63, 65, 71, 72, 77, 78, 80, 95, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 293], "coo": [60, 61, 62, 63, 65, 71, 72, 156], "prefix": [60, 61, 62, 63, 65, 71, 72, 162, 275, 281, 293], "phase": [60, 61, 62, 63, 65, 71, 72, 74, 75, 83, 85, 87, 88, 90, 94, 102, 104, 105, 106, 258, 273, 274, 276, 280, 285, 286, 301], "ignor": [60, 62, 63, 138, 191, 276, 283, 312], "ddk": [60, 61], "dddk": [60, 61], "_matrix": [60, 61, 62, 63, 65, 71, 72, 265], "sk": [60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 83, 85, 87, 88, 293], "s_": [60, 61, 62, 63, 65, 71, 72, 206, 207, 208, 210, 212, 213, 293], "hop": [60, 61, 62, 63, 65, 71, 72, 305, 306, 307, 309], "dsk": [60, 61, 62, 63, 65, 71, 72, 75, 83, 87, 89, 102, 105], "ddsk": [60, 61, 62, 63, 65, 71, 72], "reliev": [60, 62, 63, 72], "le": [60, 62, 63, 72, 285], "nabla_k": [60, 61, 62, 63, 65, 71, 72], "derivati": [60, 61, 62, 63, 65, 71, 72], "voigt": [60, 61, 62, 63, 65, 71, 72, 75, 83, 87, 102, 105], "xx": [60, 61, 62, 63, 65, 71, 72], "yy": [60, 61, 62, 63, 65, 71, 72], "zz": [60, 61, 62, 63, 65, 71, 72], "zy": [60, 61, 62, 63, 65, 71, 72], "spinor": [60, 62, 73, 83, 85, 87, 88, 94, 259], "07": [60, 62, 323], "rho": [60, 62, 181, 269, 280, 290, 309, 312, 321], "collinear": [60, 62, 73, 80, 192, 218, 221, 259, 265, 285], "rho_": [60, 62, 206, 207, 208, 210, 212, 213, 297], "boldsymbol": [60, 62, 63, 66, 67, 68, 69, 70, 72, 76, 79, 86, 89, 92, 196, 206, 207, 208, 210, 211, 212, 213, 293, 294, 295], "sigma": [60, 61, 62, 63, 66, 67, 68, 69, 70, 76, 86, 96, 196, 205, 209, 211, 214, 222, 293, 294, 295, 307, 310], "ident": [60, 62, 63, 65, 72, 74, 75, 83, 85, 86, 87, 88, 92, 93, 102, 104, 105, 106, 113, 206, 207, 208, 210, 212, 213, 293, 302], "pauli": [60, 62, 86, 92], "sigma_x": [60, 62, 86, 92], "un": [60, 62, 83, 87, 102, 105, 273, 305, 309], "2x2": [60, 62, 310], "treat": [60, 62, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 206, 207, 208, 209, 210, 212, 213, 214, 251, 252, 253, 254, 282, 305, 314, 316], "strictli": [60, 62], "show": [60, 62, 181, 191, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 279, 280, 288, 298, 304, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324], "progressbar": [60, 62, 94, 273], "stdout": [60, 62, 240], "eigvals_onli": [60, 61, 62, 63, 65, 71, 72], "spectrum": [60, 62, 63, 72, 178, 280], "valid": [60, 62, 63, 64, 72, 184, 253, 312, 320], "eigsh": [60, 61, 62, 63, 65, 71, 72], "mulliken": [60, 62, 165, 191, 273, 276], "channel": [60, 62, 63, 93, 281, 293, 318], "uparrow": [60, 62], "downarrow": [60, 62], "sz": [60, 62], "sx": [60, 62], "sy": [60, 62, 313], "non_orthogon": [60, 61, 62, 63, 65, 71, 72], "orbital_momentum": 60, "siesta": [60, 65, 207, 212, 230, 245, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 273, 274, 275, 276, 277, 280, 282, 284, 285, 289, 290, 293, 296, 297, 300, 312, 318, 321, 322], "enforc": [60, 181, 300, 305], "limit": [60, 67, 153, 162, 178, 181, 207, 212, 251, 252, 253, 254, 280, 281, 282, 290, 320, 324], "obei": [60, 61, 67, 206, 207, 208, 210, 212, 213, 276], "neq": [60, 89, 307], "zeta_": 60, "moment": [60, 80, 82, 83, 85, 86, 87, 88, 92, 150, 191, 242, 251, 252, 253, 254, 260, 283, 307, 320], "l_x": 60, "l_y": 60, "l_z": 60, "read_density_matrix": [60, 177, 181, 188, 195, 309], "spin_align": [60, 62], "vec": [60, 62, 79], "configur": [60, 62, 63, 72, 73, 83, 85, 86, 87, 88, 94, 180, 251, 252, 253, 254, 307], "spin_rot": [60, 62], "pure": [60, 62, 265, 283, 304], "flip": [60, 62, 320], "upscal": [60, 62, 63, 72], "unpolar": [60, 62, 63, 72, 73, 307, 309, 310], "spinorbit": [60, 62, 63, 72, 73], "four": [60, 62, 63, 72, 285, 314], "downscal": [60, 62, 63, 72], "mix": [60, 62, 63, 72, 131, 196, 211, 261, 280, 320, 321], "drop": [60, 62, 63, 72, 300], "empli": [60, 62, 63, 72], "tr": [60, 62, 63, 64, 66, 67, 72, 206, 207, 208, 210, 212, 213, 276, 277, 293], "sign": [60, 62, 63, 72, 262, 307], "sigma_i": [60, 62, 63, 72, 86, 92], "write_density_matrix": [60, 177, 188, 195], "sparseorbitalbz": [61, 65, 66, 67, 72, 75, 83, 87, 102, 105, 268], "dynam": [61, 157, 181, 188, 217, 218, 221, 251, 252, 253, 254, 257, 268, 273, 277, 278], "i_": [61, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "j_": [61, 206, 207, 208, 210, 212, 213], "q": [61, 63, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 245, 259], "apply_newton": 61, "sometim": [61, 184, 240, 256, 281, 283, 290, 300, 321, 322, 323, 324], "newton": 61, "law": 61, "impos": [61, 300, 322], "k_": [61, 63, 75, 83, 87, 90, 102, 105], "eigenmod": [61, 102, 103, 104, 105, 106], "eigenmodephonon": 61, "phonon": [61, 101, 107, 131, 206, 207, 235, 239, 273, 274, 280, 285], "hw": [61, 101, 102, 103, 107], "eigenvaluephonon": 61, "read_dynamical_matrix": [61, 157, 181, 188], "write_dynamical_matrix": [61, 188], "energi": [62, 63, 66, 67, 68, 69, 70, 75, 76, 77, 78, 80, 82, 83, 84, 86, 87, 89, 95, 101, 102, 103, 105, 107, 116, 117, 165, 166, 176, 178, 181, 188, 191, 192, 195, 196, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 222, 239, 245, 258, 262, 263, 268, 269, 273, 274, 275, 276, 285, 286, 293, 294, 295, 305, 307, 308, 310, 318], "edm": [62, 188, 195, 262], "ek": 62, "e_": [62, 293], "dek": 62, "ddek": 62, "read_energy_density_matrix": [62, 181, 188, 195], "mathfrak": [62, 206, 207, 208, 210, 212, 213, 293], "ev": [62, 63, 66, 67, 75, 83, 87, 91, 102, 103, 105, 115, 116, 117, 156, 157, 165, 166, 178, 181, 182, 183, 188, 191, 205, 206, 207, 208, 209, 210, 212, 213, 214, 219, 221, 222, 225, 245, 247, 263, 264, 273, 274, 280, 307, 308, 310, 316, 318], "densitymatrix": [62, 188, 195, 206, 207, 208, 210, 212, 213, 273], "write_energy_density_matrix": [62, 188], "sparseorbitalbzspin": [63, 205, 239], "ham": 63, "hk": [63, 268, 293], "h_": [63, 206, 207, 208, 210, 212, 213], "dhk": [63, 89], "ddhk": 63, "eigenst": [63, 74, 75, 80, 83, 85, 87, 88, 90, 91, 94, 102, 104, 105, 106, 199, 208, 213, 240, 242, 259, 262, 273, 275, 314, 323], "eigenstateelectron": [63, 94, 199, 208, 213, 242, 259, 307], "post": [63, 192, 214, 230, 240, 257, 278, 280, 282, 290, 297], "eigenvalueelectron": [63, 239], "fermi_level": [63, 277], "distribut": [63, 77, 78, 80, 82, 83, 84, 86, 91, 95, 96, 97, 98, 99, 101, 102, 103, 107, 108, 131, 178, 191, 212, 239, 263, 275, 280, 285, 307, 308, 309], "fermi_dirac": [63, 83, 84, 97, 239], "q_tol": 63, "target": [63, 282], "approach": [63, 280, 285], "seek": 63, "read_hamiltonian": [63, 172, 181, 184, 188, 196, 197, 211, 225, 280, 309, 310, 318], "write_hamiltonian": [63, 188, 196, 197, 211, 267], "nkpt": [64, 206, 207, 208, 209, 210, 212, 213, 214], "monkhorst": [64, 240, 277, 280, 307, 308, 310], "evenli": 64, "displ": 64, "mp": [64, 240, 280], "as_index": 64, "check_vol": 64, "analysi": [64, 165, 206, 207, 208, 210, 212, 213, 265, 280, 281, 301, 307, 321], "chunk": [64, 289], "mb": 64, "lot": [64, 80, 257, 264, 269, 273, 274, 277, 283, 300, 307, 309, 319], "effici": [64, 66, 67, 196, 211, 240, 263, 280, 283, 285, 293, 310, 314], "my": [64, 283, 316, 322], "view": [64, 119, 311, 320], "3x3x3": 64, "4x4x4": 64, "4x4x1": 64, "eg": 65, "nearli": 65, "read_overlap": [65, 181, 184, 188, 189, 197], "write_overlap": [65, 188], "semi_axi": 66, "k_ax": [66, 67], "selfenergi": [66, 67, 68, 70, 76, 196, 211, 294, 295], "bulk": [66, 67, 68, 131, 191, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 280, 285, 289, 294, 300], "green": [66, 67, 68, 196, 206, 207, 208, 210, 211, 212, 213, 269, 278, 285, 286, 293, 304, 307, 309, 310, 318, 320, 321, 322, 323], "mathcal": [66, 67, 90, 206, 207, 208, 210, 212, 213, 297], "g_": [66, 67, 206, 207, 210, 212], "recursivesi": [66, 67, 293], "bloch": [66, 67, 74, 75, 83, 85, 87, 88, 90, 102, 104, 105, 106, 206, 207, 208, 209, 210, 212, 213, 214, 239, 274, 294, 308], "semi": [66, 67, 68, 70, 243, 262, 285], "fine": [66, 67, 257, 312, 316, 321, 323], "rse": 66, "set_opt": [66, 67], "monkhorstpack": [66, 67, 196, 211, 240, 273, 280, 307, 308, 310], "1j": [66, 67, 205], "broadening_matrix": [66, 67, 68, 69, 70, 76, 209, 214, 294, 295], "broaden": [66, 67, 68, 69, 70, 76, 77, 78, 95, 206, 207, 208, 209, 210, 212, 213, 214, 293, 294, 295, 310], "self_energi": [66, 67, 68, 69, 70, 76, 196, 209, 211, 214, 294, 295], "dagger": [66, 67, 68, 69, 70, 76, 79, 206, 207, 208, 209, 210, 212, 213, 214, 293, 294, 295], "se": [66, 67, 68, 69, 70, 76, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 273, 274, 293, 294, 295], "huge": [66, 67, 68, 69, 70, 76, 257, 258, 269, 275, 277, 290, 294, 295], "boost": [66, 67, 68, 69, 70, 76, 261, 268, 294, 295], "se2broaden": [66, 67, 68, 69, 70, 76, 294, 295], "pk": [66, 67, 68], "hasn": [66, 67], "real_space_coupl": [66, 67], "ret_indic": [66, 67], "inner": [66, 67, 74, 75, 83, 85, 87, 88, 90, 102, 104, 105, 106, 259, 261, 263, 276, 321], "real_space_par": [66, 67], "coupling_geometri": [66, 67], "semiinfinit": [67, 68], "uniti": 67, "hsurf": 67, "rsi": 67, "atom_index": 67, "semi_bulk": 67, "spgeom": [68, 70, 76], "lopez": 68, "sancho": 68, "recurs": [68, 79, 283], "self_energy_lr": 68, "lr": 68, "simultan": [68, 74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 194, 200, 284], "host": [68, 280], "won": [68, 251, 252, 253, 254, 283, 312, 315, 316, 319], "intrins": [71, 72, 198, 263, 269, 273, 282, 303, 304, 305, 307, 309, 310], "usag": [73, 193, 239, 240, 242, 244, 257, 261, 265, 273, 275, 281, 289, 290, 307, 312, 317], "noncolinear": 73, "nc": [73, 142, 181, 183, 185, 188, 198, 205, 206, 207, 208, 210, 212, 213, 257, 258, 264, 265, 268, 269, 273, 274, 276, 277, 280, 290, 293, 300, 309], "soc": [73, 257, 258], "who": 73, "is_colinear": 73, "is_diagon": 73, "is_noncolinear": 73, "is_polar": 73, "is_spinorbit": [73, 318], "is_unpolar": 73, "subclass": [74, 75, 113, 136, 259, 316], "align_norm": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 276], "sum_i": [74, 75, 80, 82, 83, 85, 86, 87, 88, 91, 93, 94, 101, 102, 104, 105, 106, 107], "beta_i": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "smallest": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 309, 310], "self_swap": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "align_phas": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "onto": [74, 75, 82, 83, 85, 87, 88, 101, 102, 104, 105, 106, 107, 111, 310], "got": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 157, 281, 315, 318, 320, 321], "change_gaug": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "tild": [74, 75, 83, 85, 87, 88, 94, 102, 104, 105, 106, 293], "c_j": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "ket": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "a_": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 206, 207, 208, 210, 212, 213, 293], "psi_i": [74, 75, 83, 85, 87, 88, 92, 93, 102, 104, 105, 106, 208, 213, 310], "_j": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "bra": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "sandwich": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "ii": [74, 75, 83, 85, 87, 88, 90, 102, 104, 105, 106], "ipr": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "particip": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 259, 286], "psi_": [74, 75, 80, 83, 85, 86, 87, 88, 90, 94, 102, 104, 105, 106], "2q": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "lim_": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "infti": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "text": [74, 75, 83, 85, 87, 88, 98, 102, 104, 105, 106, 108, 142, 201, 309, 313, 316], "const": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "eigen": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 207, 212, 293], "euclidean": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 110], "norm2": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 259, 276, 307, 309, 310], "roughli": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 151, 273, 280, 293, 307], "norm_stat": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "outer": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 259, 261, 293, 310, 321], "_i": [74, 75, 83, 85, 87, 88, 92, 102, 104, 105, 106, 208, 213], "euler": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "dagger_": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "amplitud": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "propto": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "a_0": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "a_1": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "a_2": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "a_i": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 293], "thoroughli": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "explain": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106, 293, 316], "statevector": [74, 75, 83, 85, 87, 88, 102, 104, 105, 106], "state": [75, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 106, 199, 206, 207, 208, 210, 212, 213, 219, 242, 244, 251, 252, 253, 254, 259, 261, 272, 274, 276, 285, 293, 298, 307, 308, 309, 310, 316, 318, 322, 323], "ascoeffici": [75, 83, 87, 102, 105], "asstat": [75, 83, 87, 102, 105], "degenerate_dir": [75, 83, 87, 89, 91, 102, 105, 259], "These": [75, 83, 86, 87, 92, 102, 105, 131, 141, 191, 281, 285, 305, 309, 312, 314, 316, 318, 322], "analyt": [75, 83, 87, 102, 105, 285], "express": [75, 83, 87, 89, 102, 105, 127], "shown": [75, 83, 87, 102, 105, 178, 181, 199, 240, 251, 252, 253, 254, 312, 314], "psi_j": [75, 83, 87, 93, 102, 105], "substitut": [75, 83, 87, 102, 105, 283, 285], "epsilon_i": [75, 80, 82, 83, 86, 87, 89, 102, 105], "berri": [75, 83, 87, 89, 90, 91, 102, 105, 258, 273, 276, 277, 280, 286, 301], "curvatur": [75, 83, 87, 89, 91, 102, 105, 277], "2_": [75, 83, 87, 93, 102, 105], "frac12": [75, 78, 83, 87, 102, 105], "epsilon_j": [75, 83, 87, 89, 102, 105], "advis": [75, 83, 87, 102, 105, 239, 251, 252, 253, 254, 281], "perturb": [75, 83, 87, 102, 105], "cast": [75, 83, 87, 102, 105, 123, 126, 130, 276], "decoupl": [75, 79, 83, 87, 89, 91, 102, 105, 259, 261, 281], "degeneraci": [75, 83, 87, 102, 105], "prior": [75, 83, 87, 89, 102, 105, 180, 281], "veloc": [75, 83, 87, 89, 102, 105, 150, 200, 240, 242, 244, 257, 258, 259, 273], "dpk": [75, 83, 87, 102, 105], "dv": [75, 83, 87, 102, 105], "ddv": [75, 83, 87, 102, 105], "wide": 76, "overrid": [76, 197], "bose": 77, "einstein": 77, "n_b": 77, "k_bt": [77, 78, 95], "temperatur": [77, 78, 95, 178, 206, 207, 208, 209, 210, 212, 213, 214, 274], "smear": [78, 97, 178, 241, 308, 310], "erf": 78, "frac1": 78, "sqrt2": 78, "bigg": 78, "m_i": [79, 102], "u": [79, 102, 191, 281, 283, 293, 305, 307, 310, 312, 313, 320], "disentangl": 79, "aquir": [80, 86, 107], "curv": [80, 82, 86, 92, 206, 207, 208, 210, 212, 213], "coop": [80, 82, 83, 86, 92, 206, 207, 208, 210, 212, 213, 259, 262, 273], "cohp": [80, 82, 83, 86, 92, 206, 207, 208, 210, 212, 213, 259, 273], "eigenvector": [80, 83, 84, 85, 86, 92, 93, 102, 104, 107, 273, 293, 307], "epsilon": [80, 86, 107], "discard": [80, 201, 293], "substanti": [80, 293], "pdo": [80, 82, 83, 87, 92, 101, 102, 105, 192, 239, 240, 242, 244, 258, 259, 260, 262, 273, 307, 314], "spin_moment": [80, 82, 83, 85, 86, 87, 88, 239, 258, 259, 262, 275], "approx": [82, 101], "cop": [82, 83, 86, 92, 239, 262], "statecelectron": [83, 293], "textur": [83, 92, 316, 319], "fake": [83, 85, 87, 88, 251, 252, 253, 254, 293, 320], "berry_curvatur": [83, 87, 91, 239], "effective_mass": [83, 87], "tensor": [83, 87, 273], "invert": [83, 87], "statec": [83, 87, 102, 105], "occup": [83, 84, 91, 102, 103, 277], "eq": [83, 87, 89, 206, 207, 208, 210, 212, 213], "miss": [83, 87, 251, 252, 253, 254, 258, 279, 307, 314], "later": [83, 87, 251, 252, 253, 254, 281, 283, 285, 306, 307, 309, 312, 315], "edit": [83, 87], "sake": [83, 87, 308, 320], "omega_i": [83, 87, 101, 107], "coefficientelectron": 84, "stateelectron": [85, 293], "sigma_z": [86, 92], "trigger": [86, 251, 252, 253, 254, 283, 313, 323], "_electron_st": [87, 88], "kubo": 89, "omega_": [89, 91], "frac2": 89, "hbar": [89, 91, 101, 102, 103, 107, 245], "alpha_": 89, "beta_": 89, "ji": 89, "59": 89, "s_k": 89, "velocity_matrix": 89, "flux": [89, 91], "eigval": 90, "eigenstate_kwarg": [90, 91], "ret_overlap": 90, "prod_i": 90, "k_i": 90, "det": 90, "exchang": [90, 191, 222, 285], "investig": 90, "manifold": [90, 261], "unitari": 90, "wannier": [90, 225, 267, 286], "k_n": 90, "k_1": 90, "zak": [90, 274, 286], "svd": [90, 293], "pythtb": [90, 284], "except": [90, 139, 140, 141, 199, 239, 273], "convent": [90, 222, 246, 259], "discuss": [90, 206, 207, 208, 210, 212, 213, 312], "131": [90, 276], "definit": [90, 196, 211, 247], "invari": [90, 181, 286], "unaffect": 90, "lowdin": [90, 208, 213, 259], "choos": [90, 178, 261, 310, 317, 319, 320], "understand": [90, 251, 252, 253, 254, 283, 312, 315, 316, 317, 318, 322], "30": [90, 283, 285, 309, 312, 320, 321], "singular": 90, "dirac": [91, 95, 212, 285, 286, 308], "ahc": [91, 277], "anomal": [91, 286], "hall": [91, 286], "sigma_": [91, 196, 211], "dc": 91, "de": [91, 178, 206, 207, 208, 210, 212, 213, 285, 286, 307, 310], "cond": 91, "cm": 91, "state_alpha": 93, "state_beta": 93, "sum_j": 93, "instruct": [94, 279, 282, 293, 300], "phi_i": 94, "rangle_i": 94, "incorrect": [94, 206, 207, 208, 210, 212, 213, 261], "v_j": 94, "shouldn": [94, 251, 252, 253, 254, 276, 310, 313], "unless": [94, 251, 252, 253, 254, 290], "displai": [94, 251, 252, 253, 254, 281, 283, 312, 314, 315, 316, 317, 319, 322, 323], "consol": [94, 313], "n_f": [95, 206, 207, 208, 210, 212, 213], "x0": [96, 97, 98, 99, 108], "x_0": [96, 98, 99, 108], "lorentzian": [97, 178, 239], "document": [97, 212, 240, 258, 262, 275, 276, 279, 288, 312, 313, 316, 319], "bose_einstein": [97, 102, 103, 239], "step_funct": [97, 239], "heavisid": [97, 108, 239, 275], "modecphonon": 102, "characterist": 102, "epsilon_": [102, 107], "omega": [102, 103], "frequenc": 102, "equilibrium": [102, 195, 278, 285], "coefficientphonon": 103, "modephonon": 104, "minu": [108, 180], "edge_length": [109, 110], "toellipsoid": [109, 110, 111, 112, 113, 114], "ellipsoid": [109, 110, 112, 113, 114, 248, 250, 273], "within_index": [109, 110, 111, 112, 113, 114], "pureshap": [110, 111, 112], "rectangular": [110, 309], "prism": 110, "diamet": [111, 114], "composit": 112, "null": 112, "divid": [112, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 293, 314, 322], "baseclass": 113, "logic": [113, 316], "predefin": [113, 251, 252, 253, 254], "binari": [113, 132, 181, 182, 196, 199, 211, 269, 273, 274, 312], "__or__": 113, "__add__": 113, "__and__": 113, "__sub__": 113, "complement": [113, 131, 198], "__xor__": 113, "disjunct": [113, 250], "sure": [113, 251, 252, 253, 254, 268, 316, 320], "fr": 115, "tbl": [115, 116, 117, 201], "60217733e": 115, "unitpars": 118, "unit_t": 118, "parsabl": 118, "fromkei": 119, "popitem": 119, "lifo": 119, "setdefault": 119, "lack": 119, "in_rad": 120, "2pi": 120, "360": [120, 259, 285], "intercept": [120, 281], "eval": 120, "gotten": 121, "included": 122, "pars": [123, 129, 132, 191, 206, 207, 208, 209, 210, 212, 213, 214, 227, 251, 252, 253, 254, 261, 269, 273, 293, 298], "filenam": [123, 132, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 298, 312], "bracket": [123, 129, 290], "hello": [123, 128, 181, 196, 201, 211, 273], "slc": 124, "lst": [125, 126], "erang": [126, 248, 307, 308, 314, 318, 322], "strmap": [126, 248], "expr": [127, 313], "safe": [127, 306, 315, 321], "math": [127, 266, 305], "delimit": [128, 129, 201], "sep": 129, "wa": [129, 165, 181, 191, 199, 222, 257, 258, 259, 262, 266, 268, 269, 276, 280, 301, 307, 309, 312, 315, 320, 322], "map": [129, 320], "curli": 129, "brace": 129, "content": [130, 191, 205, 262, 280, 281, 298], "parser": 130, "releas": [131, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281], "dev1": 131, "g0d78d3d": 131, "date": 131, "feb": [131, 313], "23": [131, 264, 270, 283, 286, 307, 312, 313, 318, 320, 321], "2023": [131, 262, 278], "tutori": [131, 259, 273, 279, 280, 286, 307, 308, 309, 310, 318], "submodul": [131, 303], "advanc": [131, 265, 280, 281, 287, 307], "materi": [131, 280, 285, 313, 320], "viz": [131, 259, 260, 280, 281, 307, 308, 309, 310, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324], "anim": [131, 252, 253, 254, 280, 314, 315, 317, 321], "multipleplot": [131, 251, 253, 254, 280, 315], "subplot": [131, 251, 252, 253, 280, 307, 309, 310, 314, 315, 317], "miscellan": [131, 248, 280], "basesil": [132, 136, 137, 138, 142], "ascii": [132, 136, 142, 146, 201, 262, 290], "netcdf": [132, 183, 185, 188, 205, 212, 262, 273], "silecdf": [132, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214], "silebin": [132, 145, 148, 154, 159, 163, 168, 173, 202, 215, 223], "base_fil": [135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "dir_fil": [135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "filename_bas": [135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "overload": [135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "child": [135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 251, 252, 254, 314], "read_": [135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "remain": [135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 251, 252, 253, 254, 290, 320], "to_json": [135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "write_": [135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 267], "benefit": [136, 212, 314, 315], "buffer": [136, 147, 206, 207, 208, 209, 210, 212, 213, 214, 226, 262], "buffer_cl": 136, "mysil": 136, "othersislsil": 136, "mybufferclass": 136, "lvl": [138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214], "root": [138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 251, 252, 253, 254, 312], "dataset": [138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214], "travers": [138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214], "script": [138, 160, 162, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 256, 262, 263, 265, 268, 269, 276, 280, 282, 284, 288, 290, 313], "gv": [138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214], "isgroup": [138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214], "elif": [138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 310], "isdimens": [138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214], "isvari": [138, 160, 174, 183, 185, 188, 198, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214], "oserror": 139, "characters_written": 139, "errno": 139, "posix": 139, "filename2": 139, "strerror": 139, "with_traceback": [139, 140, 141], "__traceback__": [139, 140, 141], "sislinfo": [140, 212, 308, 310], "hidden": [140, 251, 252, 253, 254, 312], "thing": [141, 191, 196, 211, 214, 253, 261, 266, 273, 276, 280, 283, 290, 293, 304, 305, 307, 310, 312, 313, 315, 316, 318, 321, 322, 324], "careful": 141, "whenev": [141, 283, 314], "unabl": [141, 240], "influenti": 141, "gzip": 142, "public": [142, 286, 313], "tbt": [142, 206, 207, 208, 210, 212, 213, 261, 264, 265, 269, 273, 274, 275, 276, 293, 300], "applic": [142, 285, 288, 313], "gz": 142, "xsfsile": [143, 230], "axsf": [143, 258], "xcrysden": [143, 226, 280, 290], "denot": [143, 191, 307, 309], "repeatedli": [143, 199], "ret_data": [143, 226], "load": [143, 251, 252, 253, 254, 276, 284], "lead": [143, 206, 207, 208, 210, 212, 213, 297], "auxiliari": [143, 226], "nindex": 143, "natom": [143, 191], "nperatom": 143, "fmt": [143, 146, 147, 150, 158, 171, 179, 181, 187, 193, 194, 200, 201, 225, 226, 227], "8f": [143, 146, 150, 158, 181, 225, 226, 227, 264], "save": [143, 178, 188, 205, 226, 251, 252, 253, 254, 283, 290, 309, 310, 312, 314], "write_supercel": [143, 147, 150, 158, 167, 181, 183, 198, 205, 225, 226, 267], "silebigdft": 146, "bohr": [147, 180, 181, 182, 183, 187, 193, 247, 262, 273, 297], "15": [147, 206, 207, 208, 210, 212, 213, 283, 307, 309, 312, 316, 318, 320, 321, 322], "10e": 147, "buffers": [147, 226], "6144": [147, 226], "silefhiaim": 150, "fhi": 150, "aim": [150, 313, 317], "read_moment": [150, 191], "read_veloc": [150, 200], "as_frac": 150, "get_sile_class": 151, "recogn": [151, 273, 312], "quri": [151, 152], "water": [151, 152], "dat": [151, 162, 178, 201, 265, 290], "xyzsil": [151, 152, 230, 259], "forcefulli": 151, "proof": 151, "anyfil": 151, "another_xyz": 151, "water2": 151, "hasattr": 153, "silegulp": [156, 157], "read_force_const": [156, 180, 181, 188], "cutoff": [156, 157, 181, 225, 293, 307], "fc": [156, 157, 180, 181, 261, 273], "coo_matrix": 156, "directori": [157, 162, 181, 251, 252, 253, 254, 272, 279, 297, 298, 312], "gout": 157, "fcsilegulp": [157, 230], "force_constants_2nd": 157, "read_sup": 157, "set_dyn_kei": 157, "set_dynamical_matrix_kei": 157, "set_geometry_kei": 157, "set_kei": 157, "set_supercell_kei": 157, "molden": 158, "sileopenmx": 162, "omx": 162, "tmp": [162, 181], "folder": [162, 181], "conjunct": [162, 180, 276], "sgeom": [162, 261, 264, 278, 280, 282, 287, 288], "read_basi": [162, 181, 185, 186, 188, 190, 191, 199], "disregard": [162, 181], "fdf": [162, 181, 191, 193, 197, 251, 252, 253, 254, 258, 259, 262, 264, 265, 273, 274, 276, 280, 289, 290, 293, 300, 309, 310, 312], "sileorca": [165, 166], "termin": [165, 206, 207, 208, 210, 212, 213, 240, 275, 285], "read_charg": [165, 191], "loewdin": 165, "propertydict": [165, 166, 191, 222], "read_electron": [165, 166], "read_energi": [165, 166, 191, 222, 258], "scf": [165, 178, 191, 257, 260], "dft": [165, 191, 230, 239, 284, 285, 309], "dispers": [165, 318], "read_orbital_energi": 165, "txt": [166, 264], "dft_energi": 166, "vdw_correct": 166, "pdb": 167, "silescaleup": [170, 171, 172], "orbocc": 170, "read_atom": 170, "8e": 171, "rham": 172, "simul": [172, 251, 252, 253, 254, 284, 285, 290, 300, 309, 312], "silesiesta": [176, 178, 179, 180, 181, 186, 187, 190, 191, 192, 194, 200], "bandstructur": [176, 240, 259, 273, 308, 310, 316, 318, 319], "read_data": [176, 178, 179, 187, 191, 192, 193, 200, 201, 206, 207, 208, 210, 212, 213, 219, 220, 251, 252, 253, 254], "as_dataarrai": [176, 192], "under": [176, 251, 252, 253, 254, 259, 278, 285, 312, 315, 321], "read_fermi_level": [176, 178, 181, 184, 188, 189, 192, 195, 197, 219, 260], "silebinsiesta": [177, 184, 189, 199], "sparsematrix": [177, 195], "sdata": [178, 212, 260, 263, 264, 265, 275, 278, 280, 282, 287], "dure": [178, 257, 283, 316], "command": [178, 207, 208, 212, 213, 258, 263, 269, 275, 278, 280, 281, 290, 291, 296], "eigenspectrum": [178, 267], "png": [178, 312, 314, 318, 319, 320, 321, 322, 323, 324], "eig_spread": 178, "1mev": 178, "5k": 178, "25k": 178, "mev": 178, "kp": 178, "nk": [178, 199, 206, 207, 208, 209, 210, 212, 213, 214, 220, 310], "nb": [178, 220], "e_f": [178, 192, 307, 308, 309, 310], "ef": [178, 181, 188, 189, 195, 197, 219], "read_forc": [179, 180, 181, 188, 191], "write_data": [179, 187, 193, 201], "9e": [179, 187, 193], "write_forc": 179, "phonopi": 180, "notic": [180, 207, 208, 212, 213, 283, 309, 312, 313, 314, 318, 320, 321, 322, 323], "roll": 180, "b4": 180, "04": 180, "layout": [180, 251, 252, 253, 254, 276, 313, 314], "with_unit": 181, "readlin": [181, 201], "labelev": 181, "labelri": 181, "ry": [181, 182, 183, 247, 263, 273, 309, 310], "fakeint": 181, "line2": 181, "endblock": [181, 310], "unit_convert": [181, 245, 247], "pretti": 181, "figur": [181, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 258, 259, 273, 285, 298, 305, 312, 316, 322], "ion": [181, 185, 186, 191, 222], "orb_indx": [181, 190], "tsde": [181, 195, 273], "let": [181, 240, 251, 252, 253, 254, 283, 305, 307, 308, 309, 310, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323], "atomicmass": 181, "cutoff_dist": 181, "farther": [181, 304], "trans_inv": 181, "sum0": 181, "highli": [181, 212, 289, 301, 307, 316, 317], "untest": [181, 266, 310], "errorn": 181, "report": [181, 285], "back": [181, 206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 279, 293, 305, 318, 320, 321], "develop": [181, 239, 278, 279, 280, 283, 285, 315, 316, 317, 320], "suggest": [181, 261, 277, 297], "dynamic_matrix": 181, "dynamicalmatrix": [181, 188, 273], "tsh": [181, 184, 197, 263, 264, 318], "fa": 181, "force_const": 181, "xv": [181, 194, 200, 273], "hsx": [181, 184, 258, 261, 262], "struct": [181, 194, 309, 310], "totalpotenti": 181, "insensit": 181, "bin": 181, "read_supercell_nsc": [181, 188, 190], "stamp": 181, "overwritten": [181, 281], "_gridsilesiesta": 182, "grid_unit": 182, "read_grid_s": 182, "silecdfsiesta": [183, 185, 188], "gridfunc": 183, "nspin": [183, 192, 196, 199, 211], "satisfi": 184, "advic": [184, 206, 207, 208, 210, 212, 213, 256], "tshssilesiesta": [184, 230], "older": [184, 207, 208, 212, 213, 263], "xml": [185, 186, 273, 302], "read_brillouinzon": [187, 193, 199], "write_brillouinzon": [187, 193], "counter": 188, "intuit": [188, 276, 312], "phtran": [188, 206, 207, 208, 209, 230, 278, 280], "write_basi": 188, "energydensitymatrix": [188, 195, 273], "transiesta": [189, 191, 197, 198, 230, 262, 264, 275, 278, 280, 285, 296, 299], "job": [191, 258, 315, 316, 323], "At": [191, 251, 252, 253, 254, 283, 307, 309, 310, 312, 313], "initatom": 191, "basis_spec": 191, "pao": [191, 259, 309, 310], "iscf": 191, "imd": 191, "key_scf": 191, "as_datafram": 191, "md": [191, 275], "encount": [191, 304, 305], "letter": [191, 285], "voronoi": 191, "hirshfeld": 191, "most": [191, 201, 251, 252, 253, 254, 275, 281, 283, 289, 290, 293, 297, 302, 307, 312, 314, 316, 318, 320, 321, 324], "welcom": [191, 279, 297], "enum": 191, "panda": 191, "datafram": 191, "stress": 191, "read_stress": 191, "kinet": 191, "hartre": [191, 198, 222, 280, 296], "electrostat": [191, 221], "dftu": 191, "spin_orbit": 191, "xc": [191, 222, 297], "correl": 191, "bulkv": 191, "bia": [191, 206, 207, 208, 210, 212, 213, 262, 300], "negf": [191, 210, 212, 285, 300], "unrecogn": 191, "ion_energi": 191, "ionic": 191, "outsil": [191, 257], "writeforc": 191, "nmdstep": 191, "read_scf": [191, 257], "ret_head": [191, 201], "header": [191, 196, 201, 211, 301], "kpsilesiesta": [193, 230], "main": [193, 251, 252, 253, 254, 282, 314, 315, 318], "kgrid": [193, 310], "species_z": [194, 200], "chemicalspecieslabel": [194, 200, 309], "9f": [194, 200], "dmsilesiesta": [195, 230], "write_density_matric": 195, "_gfsilesiesta": [196, 211], "statement": [196, 211, 307], "fortran": [196, 211, 212, 275, 281], "twice": [196, 211, 215, 216, 217, 218, 219, 220, 221, 222, 300, 302], "symlink": [196, 211], "snippet": [196, 211, 282, 290, 305], "gf": [196, 211], "read_head": [196, 211], "ispin": [196, 211], "new_k": [196, 211], "sehs": [196, 211], "read_self_energi": [196, 211], "write_head": [196, 211, 298], "write_self_energi": [196, 211], "eindex": [196, 206, 207, 208, 209, 210, 211, 212, 213, 214], "hksk": [196, 211], "kindex": [196, 206, 207, 208, 209, 210, 211, 212, 213, 214], "disk_usag": [196, 211], "disk": [196, 211, 265], "gb": [196, 211], "no_u": [196, 206, 207, 208, 209, 210, 211, 212, 213, 214], "reach": [196, 211, 222, 283, 304], "reason": [196, 206, 207, 208, 210, 211, 212, 213, 251, 252, 253, 254, 283, 310, 314, 315, 316], "cmplx": [196, 211], "onlyssilesiesta": [197, 230, 276], "somewhat": [197, 281, 300, 307, 308], "backend": [197, 251, 252, 253, 254, 258, 313, 317, 318, 321], "gridncsilesiesta": [198, 230, 312], "tsv": [198, 277, 300], "wfsx": [199, 312], "reader": 199, "read_eigenst": 199, "ktol": 199, "yield_eigenst": 199, "read_info": 199, "nwf": 199, "kpoint": 199, "read_siz": 199, "tabular": [201, 269], "accommod": [201, 256, 262, 280], "00000e": 201, "00": [201, 298], "comment": [201, 227, 298], "10000e": 201, "ret_com": 201, "vstack": 201, "newlin": 201, "charact": 201, "gnuplot": 201, "footer": 201, "silecdftbtran": 205, "transport": [205, 206, 207, 208, 210, 212, 213, 235, 284, 285, 293, 300], "write_delta": 205, "featur": [205, 265, 279, 282, 287, 310, 314, 317, 321, 323], "dh": [205, 269], "deltah": 205, "has_level": 205, "ilvl": 205, "fname": 205, "implementor": 205, "init": 205, "read_delta": 205, "tbtavncsiletbtran": [206, 230], "ado": [206, 207, 208, 210, 212, 213], "elec": [206, 207, 208, 209, 210, 212, 213, 214, 262, 293], "kavg": [206, 207, 208, 210, 212, 213, 275], "spectral": [206, 207, 208, 210, 212, 213, 293], "devic": [206, 207, 208, 209, 210, 212, 213, 214, 276, 285, 293], "el": [206, 207, 208, 210, 212, 213, 285], "gamma_": [206, 207, 208, 210, 212, 213, 293], "unweigh": [206, 207, 208, 210, 212, 213], "bdo": [206, 207, 208, 210, 212, 213], "adensity_matrix": [206, 207, 208, 210, 212, 213], "ldo": [206, 207, 208, 210, 212, 213, 276], "density_matrix": [206, 207, 208, 210, 212, 213], "a2p": [206, 207, 208, 209, 210, 212, 213, 214, 265], "pivot": [206, 207, 208, 209, 210, 212, 213, 214, 265, 275, 293, 294, 295], "o2p": [206, 207, 208, 209, 210, 212, 213, 214, 265], "Will": [206, 207, 208, 209, 210, 212, 213, 214, 251, 252, 253, 254], "a_buf": [206, 207, 208, 209, 210, 212, 213, 214], "a_dev": [206, 207, 208, 209, 210, 212, 213, 214], "a_down": [206, 207, 208, 209, 210, 212, 213, 214], "pristin": [206, 207, 208, 209, 210, 212, 213, 214, 283, 307, 308], "downfold": [206, 207, 208, 209, 210, 212, 213, 214, 293], "a_elec": [206, 207, 208, 209, 210, 212, 213, 214], "atom_acohp": [206, 207, 208, 210, 212, 213], "orbital_coop": [206, 207, 208, 210, 212, 213], "atom_coop": [206, 207, 208, 210, 212, 213], "orbital_acoop": [206, 207, 208, 210, 212, 213], "atom_acoop": [206, 207, 208, 210, 212, 213], "orbital_cohp": [206, 207, 208, 210, 212, 213], "atom_cohp": [206, 207, 208, 210, 212, 213], "orbital_acohp": [206, 207, 208, 210, 212, 213], "sparse_orbital_to_atom": [206, 207, 208, 210, 212, 213], "atom_curr": [206, 207, 208, 210, 212, 213], "elec_oth": [206, 207, 208, 210, 212, 213], "activ": [206, 207, 208, 210, 212, 213, 281, 313], "quantifi": [206, 207, 208, 210, 212, 213], "flow": [206, 207, 208, 210, 212, 213, 285, 315], "redistribut": [206, 207, 208, 210, 212, 213], "rigor": [206, 207, 208, 210, 212, 213], "merit": [206, 207, 208, 210, 212, 213, 285], "explan": [206, 207, 208, 210, 212, 213, 251, 252, 253, 254, 281], "jij": [206, 207, 208, 210, 212, 213], "orbital_curr": [206, 207, 208, 210, 212, 213], "sparse_orbital_to_scalar": [206, 207, 208, 210, 212, 213], "window": [206, 207, 208, 210, 212, 213, 262, 311, 313], "elec_from": [206, 207, 208, 210, 212, 213, 293], "orbital_transmiss": [206, 207, 208, 210, 212, 213, 262], "transmiss": [206, 207, 208, 210, 212, 213, 262, 274, 286, 293], "bond_transmiss": [206, 207, 208, 210, 212, 213], "bond_curr": [206, 207, 208, 210, 212, 213, 270], "vector_transmiss": [206, 207, 208, 210, 212, 213], "vector_curr": [206, 207, 208, 210, 212, 213, 270], "atom_transmiss": [206, 207, 208, 210, 212, 213], "t_": [206, 207, 208, 210, 212, 213, 293], "Be": [206, 207, 208, 210, 212, 213, 289], "hand": [206, 207, 208, 210, 212, 213, 262, 293, 309, 313, 316], "jab1": [206, 207, 208, 210, 212, 213], "jab2": [206, 207, 208, 210, 212, 213], "btd": [206, 207, 208, 209, 210, 212, 213, 214], "chemical_potenti": [206, 207, 208, 209, 210, 212, 213, 214], "current_paramet": [206, 207, 208, 210, 212, 213], "electron_temperatur": [206, 207, 208, 209, 210, 212, 213, 214], "fano": [206, 207, 208, 210, 212, 213, 273, 275], "ne": [206, 207, 208, 209, 210, 212, 213, 214], "n_btd": [206, 207, 208, 209, 210, 212, 213, 214], "partion": [206, 207, 208, 209, 210, 212, 213, 214], "na_b": [206, 207, 208, 209, 210, 212, 213, 214], "na_buff": [206, 207, 208, 209, 210, 212, 213, 214], "na_d": [206, 207, 208, 209, 210, 212, 213, 214], "na_dev": [206, 207, 208, 209, 210, 212, 213, 214], "na_down": [206, 207, 208, 209, 210, 212, 213, 214], "na_u": [206, 207, 208, 209, 210, 212, 213, 214], "signal": [206, 210, 283], "no_d": [206, 207, 208, 209, 210, 212, 213, 214], "no_down": [206, 207, 208, 209, 210, 212, 213, 214], "plu": [206, 207, 208, 209, 210, 212, 213, 214, 218, 221, 304, 305, 306], "no_e": [206, 207, 208, 209, 210, 212, 213, 214], "noise_pow": [206, 207, 208, 210, 212, 213, 275], "divisor": [206, 207, 208, 210, 212, 213], "o_dev": [206, 207, 208, 209, 210, 212, 213, 214], "balanc": [206, 207, 208, 210, 212, 213], "jpcm": [206, 207, 208, 210, 212, 213], "2003": [206, 207, 208, 210, 212, 213], "7751": [206, 207, 208, 210, 212, 213], "7761": [206, 207, 208, 210, 212, 213], "dbcoop": [206, 207, 208, 210, 212, 213], "bcoop": [206, 207, 208, 210, 212, 213], "acoop": [206, 207, 208, 210, 212, 213], "11th": [206, 207, 208, 210, 212, 213], "12th": [206, 207, 208, 210, 212, 213], "adbcoop": [206, 207, 208, 210, 212, 213], "eh": [206, 207, 208, 210, 212, 213], "int_": [206, 207, 208, 210, 212, 213], "mu_1": [206, 207, 208, 210, 212, 213], "mu_2": [206, 207, 208, 210, 212, 213], "k_b": [206, 207, 208, 210, 212, 213], "t_2": [206, 207, 208, 210, 212, 213], "t_1": [206, 207, 208, 210, 212, 213], "t_i": [206, 207, 208, 210, 212, 213], "reservoir": [206, 207, 208, 210, 212, 213], "outgo": [206, 207, 208, 210, 212, 213], "incom": [206, 207, 208, 210, 212, 213], "analys": [206, 207, 208, 210, 212, 213, 280], "pathwai": [206, 207, 208, 210, 212, 213], "inexperienc": [206, 207, 208, 210, 212, 213], "phonon_temperatur": [206, 207], "bath": [206, 207, 208, 209, 210, 212, 213, 214], "kelvin": [206, 207, 208, 209, 210, 212, 213, 214], "in_devic": [206, 207, 208, 209, 210, 212, 213, 214, 275], "mostli": [206, 207, 208, 209, 210, 212, 213, 214, 315], "tbtncsiletbtran": [206, 207, 208, 209, 210, 213, 214, 230, 257, 262, 275], "pivot_down": [206, 207, 208, 209, 210, 212, 213, 214], "from_singl": [206, 207, 208, 210, 212, 213], "backscatt": [206, 207, 208, 210, 212, 213], "scatter": [206, 207, 208, 210, 212, 213, 259, 274, 293, 307, 308, 310], "transmission_eig": [206, 207, 208, 210, 212, 213], "decompos": [206, 207, 208, 210, 212, 213], "eigenchannel": [206, 207, 208, 210, 212, 213, 259, 286, 293], "transmission_bulk": [206, 207, 208, 210, 212, 213], "shot_nois": [206, 207, 208, 210, 212, 213, 275], "sparse_atom_to_vector": [206, 207, 208, 210, 212, 213], "dab": [206, 207, 208, 210, 212, 213], "usabl": [206, 207, 208, 210, 212, 213, 283, 289, 291, 317, 320], "dij": [206, 207, 208, 210, 212, 213], "sum_dup": [206, 207, 208, 210, 212, 213], "govern": [206, 207, 208, 210, 212, 213], "contributionmai": [206, 207, 208, 210, 212, 213], "sparse_orbital_to_vector": [206, 207, 208, 210, 212, 213], "elec_to": [206, 207, 210, 212, 293], "absorb": [206, 207, 208, 210, 212, 213], "wk": [206, 207, 208, 209, 210, 212, 213, 214], "wkpt": [206, 207, 208, 209, 210, 212, 213, 214], "write_tbtav": [206, 207, 208, 210, 212, 213], "av": [206, 207, 208, 210, 212, 213, 265], "xa": [206, 207, 208, 209, 210, 212, 213, 214], "zero_t": [207, 212], "06": [207, 212], "shot": [207, 212, 273, 285], "nois": [207, 212, 273, 274, 285], "w_k": [207, 212], "s_p": [207, 212], "tbt_up": [207, 212, 264], "tbt_dn": [207, 212, 264], "previou": [207, 208, 212, 213, 240, 251, 252, 253, 254, 300, 306, 309, 312, 316, 320], "tbtprojncsiletbtran": [208, 230, 274], "elec_mol_proj": [208, 213], "molecul": [208, 213, 285, 286, 301, 302], "atom_cohp_from_orbit": [208, 213], "atom_coop_from_orbit": [208, 213], "c60": [208, 213], "homo": [208, 213, 309], "elec_mol_proj_from": [208, 213], "elec_mol_proj_to": [208, 213], "mol_proj_elec_from": [208, 213], "mol_proj_elec_to": [208, 213], "tbtsencsiletbtran": [209, 230, 295], "self_energy_averag": [209, 214], "mu_t": [210, 212], "mu_f": [210, 212], "t_t": [210, 212], "t_f": [210, 212], "mu_from": [210, 212], "kt_from": [210, 212], "mu_to": [210, 212], "kt_to": [210, 212], "_devncsiletbtran": [212, 214], "word": [212, 307, 312], "partit": [212, 290], "execpt": 212, "2e": 212, "sum_k": 212, "sum_n": 212, "f_l": 212, "f_r": 212, "mechani": 212, "classic": 212, "statist": 212, "se_unsort": 214, "se_sort": 214, "pvt_unsort": 214, "pvt_sort": 214, "hfull1": 214, "hfull2": 214, "dev_pvt": 214, "dev_unpvt": 214, "hdev_pvt": 214, "hdev": 214, "dpvt_sort": 214, "pvt_dev": 214, "geometry_group": [215, 216, 217, 218, 219, 220, 221, 222], "poscarsilevasp": [215, 216, 217, 218, 219, 220, 221, 222], "potcar": [215, 216, 217, 218, 219, 220, 221, 222], "pseudo": [215, 216, 217, 218, 219, 220, 221, 222, 258, 297, 298], "silevasp": [217, 219, 220, 222], "car": [217, 218, 221, 257, 276, 298], "geomtri": 217, "poscar": [217, 218, 221, 275, 276], "contcar": [217, 218, 221, 276], "ret_dynam": [217, 218, 221], "group_speci": [217, 218, 221], "carsilevasp": [218, 221, 230], "kohn": [220, 280], "sham": [220, 280], "accuracy_reach": 222, "accuraci": 222, "cpu_tim": 222, "cpu": [222, 240], "outcar": 222, "pscenc": 222, "ewald": 222, "tewen": 222, "energ": 222, "denc": 222, "exhf": 222, "xchf": 222, "xcenc": 222, "paw": 222, "paw1": 222, "paw2": 222, "entropi": 222, "eentro": 222, "eband": 222, "eatom": 222, "solvat": 222, "ediel_sol": 222, "free": [222, 251, 252, 253, 254, 291], "toten": 222, "sigma0": 222, "silewannier90": 225, "seednam": 225, "seed": 225, "win": 225, "centr": 225, "write_xyz": 225, "translate_home_cel": 225, "plot_hr": 225, "wan90": 225, "00001": 225, "xsf": [226, 259, 263, 275], "g1": 226, "g2": 226, "grid_": 226, "real_": 226, "imag_": 226, "softwar": [230, 276, 278, 282, 290, 309, 320, 321], "convention": 230, "packag": [230, 240, 247, 278, 281, 283, 284, 285, 291, 296, 312, 313, 317], "pdbsile": 230, "cubesil": [230, 312], "moldensil": 230, "axsfsil": [230, 276], "bigdft": [230, 280], "asciisilebigdft": 230, "fhiaim": [230, 261, 280], "insilefhiaim": 230, "gulp": [230, 261, 273, 277, 280], "gotsilegulp": 230, "openmx": [230, 273, 280], "omxsileopenmx": 230, "orca": [230, 262, 280], "outputsileorca": 230, "txtsileorca": 230, "scaleup": [230, 267, 280], "orboccsilescaleup": 230, "refsilescaleup": 230, "rhamsilescaleup": 230, "fdfsilesiesta": [230, 251, 252, 253, 254, 293, 312], "outsilesiesta": [230, 257, 258, 259, 262], "xvsilesiesta": 230, "bandssilesiesta": [230, 312], "eigsilesiesta": 230, "pdossilesiesta": 230, "gridsilesiesta": 230, "hsxsilesiesta": 230, "wfsxsilesiesta": [230, 258], "ncsilesiesta": [230, 312], "ionxmlsilesiesta": 230, "ionncsilesiesta": 230, "orbindxsilesiesta": 230, "fasilesiesta": 230, "fcsilesiesta": 230, "rkpsilesiesta": 230, "structsilesiesta": 230, "tsdesilesiesta": 230, "tsgfsilesiesta": 230, "tsvncsilesiesta": [230, 312], "tbtran": [230, 262, 265, 267, 269, 273, 278, 280, 284, 293, 300, 301], "deltancsiletbtran": [230, 262], "tbtgfsiletbtran": [230, 276, 295], "phtncsilephtran": 230, "phtsencsilephtran": 230, "phtavncsilephtran": 230, "phtprojncsilephtran": 230, "vasp": [230, 257, 258, 274, 275, 276, 280], "doscarsilevasp": 230, "eigenvalsilevasp": 230, "chgsilevasp": [230, 312], "locpotsilevasp": [230, 312], "outsilevasp": 230, "wannier90": [230, 265, 280], "winsilewannier90": 230, "ballist": [235, 285], "compil": [235, 262, 281], "quit": [238, 240, 307, 313, 316, 317, 320, 321], "frequent": [238, 289, 290, 312], "driven": 238, "tight": [239, 278, 282, 284, 285, 304, 305, 307, 308, 310, 314, 319, 323], "bind": [239, 278, 282, 284, 285, 304, 305, 307, 308, 310, 314, 319, 323], "perspect": [239, 259], "mind": [239, 312, 321, 323], "berry_phas": [239, 259, 261, 262, 274, 308], "spin_squar": 239, "support": [239, 251, 252, 253, 254, 258, 275, 280, 285, 313, 315, 317, 318, 322], "get_distribut": [239, 308], "cold": 239, "drive": 239, "rare": [239, 262], "ever": [239, 315, 322], "manipul": [240, 257, 280, 285, 290, 309, 310], "extrem": [240, 251, 252, 253, 254, 268, 275, 279, 282, 290, 293, 304, 306, 307, 320], "bs_eig": 240, "wrap_do": 240, "progress": [240, 258, 272, 273, 281], "k_x": [240, 308], "wrap_multipl": 240, "dos_pdos_v": 240, "renew": [240, 312], "unpack": 240, "pool": 240, "par": 240, "patho": [240, 281], "processor": 240, "prioriti": 240, "environ": [240, 281, 312, 313, 317], "sisl_num_proc": 240, "cpu_count": 240, "interfer": [240, 285], "bla": 240, "thread": 240, "omp_num_thread": 240, "core": [240, 283, 297], "machin": 240, "hpc": [240, 259], "resort": 240, "worker": [240, 283], "multiprocess": [240, 315], "enviro": [240, 281], "imap": 240, "uimap": 240, "detali": 240, "techniqu": [241, 278, 285, 310], "aid": [242, 244, 297], "proceduc": 243, "enter": [245, 283, 291, 293], "unit_group": 245, "unit_default": 245, "physicalconst": [245, 246], "m_e": 245, "m_p": 245, "g0": 245, "2019": [246, 275, 276, 285, 286], "ordinari": 246, "599584916": 246, "thai": 246, "stai": 246, "2997924": 246, "58": 246, "adher": 247, "readabl": [247, 265], "subpackag": 247, "easiest": [247, 313, 316, 318], "siesta_unit": 247, "helper": 248, "nullshap": 248, "strseq": 248, "lstrang": 248, "list2str": 248, "fileindex": 248, "str_spec": 248, "iter_shap": 248, "math_ev": 248, "_set_": 250, "complementari": [250, 259, 307], "arithmet": 250, "compositeshap": 250, "render": [251, 252, 254, 312, 313, 315, 316, 320, 321, 323], "frame": [251, 252, 253, 254, 314], "frame_dur": 251, "plotli": [251, 252, 253, 254, 258, 259, 262, 281, 312, 314, 315, 316, 317, 318, 320, 321], "interpolated_fram": 251, "blender": [251, 280, 312, 313], "redraw": 251, "redrawn": 251, "trace": [251, 312, 314, 318, 321], "appear": [251, 290, 307, 309, 316], "ani_method": 251, "root_fdf": [251, 252, 253, 254, 312], "results_path": [251, 252, 253, 254, 312], "entry_points_ord": [251, 252, 253, 254, 312], "attempt": [251, 252, 253, 254, 312], "frame_nam": [251, 252, 253, 254], "_plugin": 251, "add_children": [251, 252, 254], "children": [251, 252, 253, 254, 314], "add_shortcut": [251, 252, 253, 254], "_kei": [251, 252, 253, 254], "_name": [251, 252, 253, 254], "_descript": [251, 252, 253, 254], "shortcut": [251, 252, 253, 254], "avoid": [251, 252, 253, 254, 258, 259, 312, 317], "interf": [251, 252, 253, 254], "ctrl": [251, 252, 253, 254], "longer": [251, 252, 253, 254, 258], "descript": [251, 252, 253, 254, 259, 263, 284, 288, 289, 290, 291, 307, 316, 319], "tip": [251, 252, 253, 254], "gotcha": [251, 252, 253, 254], "template_plot": [251, 252, 253, 254], "bandsplot": [251, 252, 253, 254, 316], "ex": [251, 252, 253, 254], "bands_fil": [251, 252, 253, 254], "file1": [251, 252, 253, 254], "file2": [251, 252, 253, 254], "file3": [251, 252, 253, 254], "produc": [251, 252, 253, 254, 278, 283], "cours": [251, 252, 253, 254, 286, 312, 316, 318, 321, 323], "_getinitkwargslist": [251, 252, 253, 254], "doesn": [251, 252, 253, 254, 283, 307, 312, 314, 320, 321], "modify_param": [251, 252, 253, 254], "incrementbyon": [251, 252, 253, 254], "don": [251, 252, 253, 254, 283, 312, 313, 314, 315, 316, 320, 322, 323], "respons": [251, 252, 253, 254, 305, 310], "BE": [251, 252, 253, 254, 316], "THE": [251, 252, 253, 254], "WILL": [251, 252, 253, 254], "weird": [251, 252, 253, 254], "behavior": [251, 252, 253, 254, 320, 321, 323], "templat": [251, 252, 253, 254, 265, 312, 316, 318, 321, 322], "FOR": [251, 252, 253, 254], "feasabl": [251, 252, 253, 254], "recurr": [251, 252, 253, 254], "wdir": [251, 252, 253, 254], "ask": [251, 252, 253, 254, 280, 283, 307, 312, 313, 318, 319, 320, 321], "_plot_backend": [251, 252, 254], "call_shortcut": [251, 252, 253, 254], "programat": [251, 252, 253, 254], "fact": [251, 252, 253, 254, 312, 316, 320], "keypress": [251, 252, 253, 254], "detect": [251, 252, 253, 254, 264], "gui": [251, 252, 253, 254, 283, 285, 289, 312, 315, 317], "jupyt": [251, 252, 253, 254, 275], "notebook": [251, 252, 253, 254, 259, 275, 283, 301, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "clone": [251, 252, 253, 254, 281], "IT": [251, 252, 253, 254], "IF": [251, 252, 253, 254], "newli": [251, 252, 253, 254], "dispatch_ev": [251, 252, 253, 254], "event": [251, 252, 253, 254, 283], "yet": [251, 252, 253, 254, 263, 320], "entry_point": [251, 252, 254, 263], "entry_points_help": [251, 252, 253, 254], "messag": [251, 252, 253, 254, 283, 318, 321], "to_ab": [251, 252, 253, 254], "unfollow": [251, 252, 253, 254], "my_list_of_fil": [251, 252, 253, 254], "build": [251, 252, 253, 254, 260, 275, 281, 314, 315, 316, 317, 318, 320, 322], "procedur": [251, 252, 253, 254, 281], "robust": [251, 252, 253, 254, 317], "better": [251, 252, 253, 254, 269, 273, 276, 281, 312, 318, 321, 323], "leav": [251, 252, 253, 254, 320], "from_plotli": [251, 252, 253, 254], "plotly_fig": [251, 252, 253, 254], "graph_obj": [251, 252, 253, 254], "get_class_param": [251, 252, 253, 254], "as_dict": [251, 252, 253, 254], "get_figur": [251, 252, 253, 254, 316], "clear_fig": [251, 252, 253, 316], "draw": [251, 252, 253, 309, 312, 316, 318, 319, 322], "get_figure_method": [251, 252, 253, 254], "get_param": [251, 252, 253, 254, 312, 318, 319, 321], "params_extractor": [251, 252, 253, 254], "OF": [251, 252, 253, 254], "queriesinput": [251, 252, 253, 254], "inputfield": [251, 252, 253, 254], "awar": [251, 252, 253, 254, 284, 289], "get_set": [251, 252, 253, 254], "get_settings_group": [251, 252, 253, 254], "steps_back": [251, 252, 253, 254], "settings_group": [251, 252, 253, 254], "follow_kwarg": [251, 252, 253, 254], "file_cont": [251, 252, 253, 254], "regist": [251, 252, 253, 254, 312, 316], "neet": [251, 252, 253, 254], "infer": [251, 252, 253, 254, 293, 312, 321], "has_shortcut": [251, 252, 253, 254], "has_these_set": [251, 252, 253, 254], "init_all_plot": [251, 252, 254], "update_fig": [251, 252, 254], "try_shar": [251, 252, 254], "succes": [251, 252, 254], "wast": [251, 252, 254, 315], "gridplot": [251, 252, 254, 312, 313], "init_set": [251, 252, 253, 254], "add_preset": [251, 252, 253, 254], "insert_childplot": [251, 252, 254], "listen": [251, 252, 253, 254, 283], "forev": [251, 252, 253, 254], "as_anim": [251, 252, 253, 254], "return_anim": [251, 252, 253, 254], "return_figwidget": [251, 252, 253, 254], "clear_previ": [251, 252, 253, 254], "notifi": [251, 252, 253, 254, 273], "speak": [251, 252, 253, 254], "notify_titl": [251, 252, 253, 254], "notify_messag": [251, 252, 253, 254], "speak_messag": [251, 252, 253, 254], "fig_widget": [251, 252, 253, 254], "updates_avail": [251, 252, 253, 254], "beggin": [251, 252, 253, 254, 323], "iself": [251, 252, 253, 254], "lost": [251, 252, 253, 254], "lose": [251, 252, 253, 254], "why": [251, 252, 253, 254, 315, 320, 321], "widget": [251, 252, 253, 254], "succeed": [251, 252, 253, 254], "your_plot": [251, 252, 253, 254], "_widget": [251, 252, 253, 254], "witget": [251, 252, 253, 254], "notif": [251, 252, 253, 254], "everytim": [251, 252, 253, 254, 314], "spoken": [251, 252, 253, 254], "titl": [251, 252, 253, 254, 278, 297, 312, 316], "feel": [251, 252, 253, 254, 291, 315, 317], "creativ": [251, 252, 253, 254], "extend_multipl": [251, 252, 253, 254, 314], "canva": [251, 252, 253, 254, 314], "solid": [251, 252, 253, 254, 286, 314], "schema": [251, 252, 253, 254], "whatev": [251, 252, 253, 254, 283, 312], "affect": [251, 252, 253, 254, 268, 320], "programmat": [251, 252, 253, 254], "modifyinputfield": [251, 252, 253, 254], "style": [251, 252, 253, 254, 259, 283, 307], "inwint": [251, 252, 253, 254], "duringdai": [251, 252, 253, 254], "merge_method": [251, 252, 253, 254], "serv": [251, 252, 253, 254, 317], "vari": [251, 252, 253, 254, 314], "life": [251, 252, 253, 254], "plot_nam": [251, 252, 253, 254], "children_sel": [251, 252, 253, 254], "read_data_method": [251, 252, 253, 254], "remove_shortcut": [251, 252, 253, 254], "unregist": [251, 252, 253, 254], "set_children": [251, 252, 254], "set_data": [251, 252, 253, 254], "set_data_method": [251, 252, 253, 254], "set_shared_attr": [251, 252, 254], "setup_hamiltonian": [251, 252, 253, 254], "shared_attr": [251, 252, 254], "storag": [251, 252, 254, 273], "retreiv": [251, 252, 254, 318, 321, 322], "shortcuts_for_json": [251, 252, 253, 254], "jsonifi": [251, 252, 253, 254], "shortcuts_summari": [251, 252, 253, 254], "summari": [251, 252, 253, 254], "nice": [251, 252, 253, 254, 258, 283, 312, 323], "monitor": [251, 252, 253, 254], "return_figurewidget": [251, 252, 253, 254], "stop_listen": [251, 252, 253, 254], "figurewidget": [251, 252, 253, 254], "neither": [251, 252, 253, 254], "_plotabl": [251, 252, 253, 254], "register_plot": [251, 252, 253, 254], "undo_set": [251, 252, 253, 254], "undo": [251, 252, 253, 254], "run_upd": [251, 252, 253, 254], "bring": [251, 252, 253, 254, 256, 312, 320, 321], "undo_settings_group": [251, 252, 253, 254], "update_children_set": [251, 252, 254], "update_set": [251, 252, 253, 254, 312, 316, 318, 319, 320, 321, 322, 323], "doc": [251, 252, 253, 254, 258, 259, 261, 262, 312, 314, 318, 319, 320, 321, 322, 323, 324], "handler": [252, 276], "paramgroup": 253, "icon": [253, 313], "attrs_for_plot": 253, "only_init": 253, "_debug": [253, 316], "make_subplots_kwarg": 254, "make_subplot": 254, "__version_tuple__": [256, 262], "reliabl": 256, "latest": [256, 269, 281], "bug": [256, 257, 258, 259, 262, 263, 264, 266, 268, 269, 271, 273, 274, 275, 276, 279], "superseed": 256, "overal": 256, "june": [257, 267, 275, 285, 286], "2020": [257, 277, 285], "peopl": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283], "patch": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "jona": [257, 258, 275, 276, 277, 285], "lundholm": [257, 258, 275, 276, 277], "bertelsen": [257, 258, 275, 276, 277, 285], "nick": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 285, 286], "papior": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 285, 286], "pol": [257, 258, 259, 260, 261, 262, 285], "febrer": [257, 258, 259, 260, 261, 262, 285], "thoma": [257, 258, 259, 261, 262, 272, 274, 276, 278, 285], "frederiksen": [257, 258, 259, 261, 262, 272, 274, 276, 278, 285], "174": 257, "enhanc": [257, 285], "180": 257, "197": 257, "wip": [257, 272], "improv": [257, 258, 259, 262, 265, 278, 279, 285, 293, 297, 320], "191": 257, "210": 257, "__repr__": 257, "211": 257, "ship": [257, 281, 291, 301, 313], "212": [257, 278, 285], "parenthesi": 257, "went": [257, 313], "unnot": 257, "215": 257, "enh": [257, 261, 262], "226": 257, "ufunc": [257, 259], "sisl_toolbox": [257, 282, 296, 297, 299], "stuff": [257, 273, 315, 324], "parti": 257, "toolbox": [257, 275, 279, 282, 291, 297], "behaviour": [257, 259, 263, 315], "deprec": [257, 261, 262, 273, 274, 275, 276, 280], "tfrederiksen": [257, 261], "divers": 257, "181": 257, "186": [257, 285], "185": 257, "182": 257, "thank": [257, 258, 262, 274, 275, 276, 277, 315, 316, 320], "gaetano": [257, 285], "calogero": [257, 285], "bottleneck": [257, 269], "preliminari": [257, 265, 269, 273], "primarili": 257, "intent": 257, "162": 257, "committ": 257, "bernhard": [257, 285], "kretz": [257, 285], "17": [258, 283, 285, 307, 309, 312, 316, 318, 320, 321, 322], "februari": [258, 260, 264, 277, 285, 286], "2021": [258, 285, 313], "sofia": [258, 276, 277, 285], "sanz": [258, 276, 277, 285], "wuhl": [258, 276, 277], "231": 258, "transmit": 258, "246": 258, "253": 258, "_sanitize_atom": 258, "did": [258, 262, 268, 283, 312, 320], "categori": [258, 259, 320, 322], "254": 258, "255": 258, "258": 258, "263": 258, "binder": 258, "docker": 258, "267": 258, "skew": [258, 273, 308], "270": 258, "277": 258, "maint": 258, "blank": 258, "298": 258, "major": [258, 261, 269, 316], "pfebrer": 258, "unzip": 258, "dealt": 258, "xe": 258, "hu": 258, "discov": [258, 262, 283, 318], "xij": 258, "doscar": 258, "287": 258, "ase_atom": 258, "282": 258, "sgrid": [258, 278, 280, 282, 287, 288], "spin_orbital_mo": 258, "ghost": 258, "atomghost": 258, "249": 258, "realspacesi": [258, 262], "widebands": 258, "242": 258, "bugfix": [258, 275, 276], "233": 258, "deltanc": 258, "234": 258, "235": 258, "238": 258, "28": [259, 283, 318, 320, 321], "januari": [259, 262, 263, 285], "2022": [259, 260, 261, 285], "kole": [259, 262], "307": 259, "net": 259, "313": 259, "typo": [259, 272, 276], "365": 259, "mnt": [259, 262], "367": 259, "fat": [259, 310], "368": 259, "geometryplot": [259, 313, 321], "371": 259, "374": 259, "376": 259, "378": 259, "matplotlib": [259, 280, 281, 298, 307, 308, 309, 310, 312, 317], "382": 259, "didn": [259, 316, 323], "395": 259, "quick": [259, 312, 320], "397": 259, "402": 259, "403": 259, "hcp": [259, 303], "406": 259, "ration": 259, "354": 259, "355": 259, "139": 259, "struct_": 259, "308": 259, "almost": [259, 302, 315], "cautiou": 259, "reduct": [259, 268, 275, 290], "pymatgen": 259, "337": 259, "suffici": [259, 296], "accur": [259, 285], "362": 259, "363": 259, "102": [259, 285], "stringent": 259, "_sanitize_": 259, "370": 259, "becam": 259, "simpler": [259, 275, 289, 316], "licens": [259, 278], "mplv2": 259, "renam": [259, 265, 269, 273], "disabl": 259, "align_": 259, "pip": [259, 280, 283, 313], "maco": 260, "versatili": 260, "mask": 260, "444": 261, "445": 261, "447": 261, "minor": [261, 262, 271, 275, 316], "451": 261, "batched_indic": 261, "yield_manifold": 261, "com": [261, 281, 285, 312, 318], "432": 261, "nil": [262, 285], "wittemei": [262, 285], "487": 262, "486": 262, "489": 262, "488": 262, "494": 262, "stringio": 262, "498": 262, "495": 262, "499": 262, "500": [262, 280, 307, 310], "503": 262, "incompat": 262, "ipywidget": 262, "504": 262, "508": 262, "step_to": 262, "510": 262, "codeql": 262, "workflow": [262, 280, 316], "github": [262, 280, 281], "scan": [262, 312], "511": 262, "514": 262, "515": 262, "516": 262, "519": 262, "520": 262, "521": 262, "526": 262, "463": 262, "513": 262, "hydrogenicorbit": 262, "484": 262, "touch": [262, 300], "512": 262, "regress": 262, "80f27b05": 262, "492": 262, "crash": 262, "482": 262, "v1": 262, "462": 262, "475": 262, "susann": [262, 285], "leither": [262, 285], "electronst": 262, "coher": [262, 269], "501": 262, "codata": 262, "2018": [262, 272, 273, 274, 285], "cell_length": 262, "491": 262, "rule": [262, 320], "drastic": [262, 284], "477": 262, "478": 262, "_transmiss": 262, "_current": 262, "streamlin": 262, "_aco": 262, "oh": 262, "2017": [263, 264, 265, 266, 267, 268, 269, 270, 271, 278, 285], "stream": 263, "AND": [263, 268], "tbtncsile": 263, "furthermor": 263, "oppos": 263, "del": 263, "achiev": [263, 321], "overhead": [263, 312], "throughput": 263, "stabil": 263, "realli": [263, 267], "tbtncsilesiesta": [264, 275], "electronic_temperatur": 264, "printout": 264, "overhaul": 264, "solutionmethod": 264, "march": [265, 285], "_hr": 265, "srtio3": [265, 312, 318, 321, 322], "junquera": [265, 285], "enourm": [265, 282], "excess": 265, "000": [265, 282, 306, 307, 309, 310], "fast": [265, 273, 282, 312, 313, 315, 317], "rm": 265, "proj": 265, "emul": 265, "nonetheless": 265, "iter_linear": 265, "_and_": 265, "axyzsc": 265, "ispmatrix": 265, "april": [266, 285, 286], "__write_default": 266, "_write_default": 266, "ret_coord": 266, "ret_dist": 266, "amb": 266, "apb": 266, "assist": 266, "appreci": [266, 316, 317, 323], "pathbz": [267, 273], "jo": [267, 268], "write_geom": [267, 275], "write_sc": 267, "unneed": 267, "accep": 267, "21": [268, 283, 285, 307, 310, 312, 316, 318, 320, 321], "juli": [268, 278, 285], "dhncsilesiesta": [268, 269], "performanceselector": 268, "dr": [268, 297], "16": [269, 283, 285, 286, 307, 309, 310, 312, 316, 318, 320, 321, 322], "octob": [269, 270, 271, 285], "sparse_geometri": 269, "retur": 269, "uniq": 269, "pytest": [269, 281], "come": [269, 273, 283, 317, 318, 322], "vt": 269, "commit": 269, "tbtgfsilesiesta": 269, "_external_": 269, "deltancsilesiesta": 269, "1b4": 269, "dsigma": 269, "bewar": 269, "captur": 270, "august": [272, 273, 285], "49": 272, "52": 272, "travi": [272, 275], "coverag": 272, "coveragerc": 272, "54": [272, 303], "rtd": 272, "63": 272, "cython": [273, 281], "hessian": 273, "compliant": 273, "tqdm": [273, 281], "arbitrarili": 273, "monkhorstpackbz": 273, "backward": 273, "broken": 273, "tightbind": 273, "couldn": 273, "smarter": 273, "eigensystem": 273, "eligebl": 273, "scriptabl": 273, "pdosxml": 273, "adm": 273, "reorgan": 273, "novemb": [274, 285, 286], "82": [274, 286, 297], "84": 274, "pht": [274, 275], "dhsiletbtran": 274, "tsgf": [274, 276], "94": 275, "105": [275, 285], "107": 275, "108": 275, "rudimentari": 275, "113": 275, "noisi": 275, "gitignor": 275, "116": 275, "offici": [275, 313], "130": 275, "tbtse": 275, "white": 275, "127": 275, "clutter": 275, "012": 275, "contamin": 275, "disallow": 275, "dask": 275, "inter": 275, "asaverag": 275, "26": [276, 283, 318, 320, 321], "septemb": [276, 285, 286], "135": 276, "led": 276, "nameerror": 276, "143": 276, "outsiesta": 276, "126": 276, "stm": 276, "st": 276, "unus": 276, "mainten": 276, "136": 276, "125": [276, 285, 308], "134": 276, "upgrad": [276, 281], "numpydoc": 276, "thanksto": 276, "jl": 276, "b5": 276, "meta": 276, "closer": 276, "besid": 276, "145": 277, "norb": 277, "149": 277, "160": [277, 310], "sparsegeometryorbit": 277, "161": 277, "einsum": 277, "berry_flux": 277, "153": 277, "150": [277, 307, 318], "poisson_explicit": 277, "revert": 277, "dynamiclmatrix": 277, "scientif": [278, 285, 315], "commun": [278, 285, 317], "mpl": 278, "citat": 278, "zenodo": 278, "doi": [278, 285, 286], "misc": 278, "zerothi_sisl": 278, "author": [278, 285], "year": 278, "5281": 278, "597181": 278, "url": [278, 281, 285, 286], "articl": 278, "papior2017": 278, "lorent": [278, 285], "nicol": 278, "garc": [278, 285, 286], "alberto": [278, 285], "brandbyg": [278, 285, 286], "mad": [278, 285, 286], "1016": [278, 285], "cpc": [278, 285], "2016": [278, 285, 286], "09": [278, 285, 309], "022": [278, 285], "issn": 278, "00104655": 278, "journal": [278, 285], "month": 278, "mar": [278, 286], "page": [278, 280, 281, 318], "ve": [279, 312, 314, 317, 318, 320, 321, 322], "Then": [279, 283, 293, 300, 313, 319, 322], "press": [279, 313], "integrat": 279, "lcao": [280, 285], "tight-bind": 280, "born": 280, "program": [280, 282, 289, 297, 298, 313], "rich": 280, "great": [280, 289, 307, 309, 310, 316, 320, 321], "unifi": 280, "train": 280, "seri": 280, "workshop": 280, "pyplot": [280, 298, 307, 308, 309, 310], "13x13x13": 280, "vmd": [280, 290, 309], "answer": 280, "question": 280, "discord": 280, "conda": [280, 313], "walk": [280, 301, 308, 309, 310], "stoolbox": [280, 282, 287, 296, 297, 300], "node": [280, 298], "fft": [280, 296], "showcas": [280, 312, 320], "yourself": [280, 304, 312, 316, 319, 322, 324], "netcdf4": 281, "pypars": 281, "pypi": [281, 283], "python3": [281, 283], "intelem": 281, "fcompil": 281, "accummul": 281, "forg": 281, "fragil": 281, "recent": [281, 285], "scratch": 281, "config": [281, 313], "graphic": [281, 283, 315, 316, 317], "dev": 281, "cftime": 281, "git": 281, "download": [281, 283, 307, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324], "tarbal": 281, "tar": 281, "repositori": 281, "gfortran": 281, "mingw32": 281, "setuptool": 281, "remedi": [281, 300, 318], "home": [281, 313], "pydistutil": 281, "cfg": 281, "spur": 281, "pyarg": 281, "cover": [281, 293, 312], "sisl_files_test": [281, 312, 318, 321, 322], "zerothi": 281, "pwd": 281, "protocol": 281, "buggi": 281, "v19": 281, "intel": 281, "cd": 281, "variat": [282, 307], "task": [282, 307, 309], "engin": [282, 285, 313], "goal": [282, 284, 320], "breez": 282, "advanteg": 282, "focu": [282, 306, 315], "flake": [282, 285, 307], "20000": 282, "ipython": [283, 301, 307, 308, 309, 310, 312, 314, 316, 318, 319, 320, 321, 322, 323, 324], "lazili": 283, "framework": [283, 285, 314, 317, 318, 321], "cleaner": 283, "piec": [283, 316], "reusabl": 283, "reproduc": 283, "hard": 283, "simplifi": 283, "link": 283, "workchain": 283, "plan": [283, 301, 312], "__": 283, "from_func": 283, "my_sum": 283, "my_sum_nod": 283, "lt": [283, 312, 318], "0x7f783aefeb80": 283, "gt": [283, 312, 318], "recomput": 283, "update_input": 283, "0x7f783af0a5e0": 283, "outdat": 283, "automatic_recalc": 283, "auto_result": 283, "0x7f783af0aaf0": 283, "leaf": 283, "first_val": 283, "final_v": 283, "goe": [283, 320], "wait": [283, 315], "am": 283, "32": [283, 285, 320], "propag": [283, 293], "tree": [283, 302], "send": 283, "recalcul": [283, 318, 323], "himself": 283, "0x7f783af0a790": 283, "live": 283, "async": 283, "somehow": [283, 313, 314], "aris": 283, "triple_sum": 283, "my_workflow": 283, "dryrun_nod": 283, "wf_node": 283, "workflownod": 283, "0x7f7874b2dd60": 283, "39": [283, 312, 313, 314, 316, 318, 319, 320, 321], "workflowinput": 283, "0x7f7874b2dd90": 283, "0x7f783af0ae50": 283, "0x7f783af0ae20": 283, "0x7f783af0a7c0": 283, "my_sum_1": 283, "0x7f783af0ad60": 283, "workflowoutput": 283, "0x7f783af0a610": 283, "messi": 283, "_1": 283, "_2": 283, "_3": 283, "human": 283, "On": [283, 285, 312, 316], "alia": 283, "afterward": [283, 316], "difficult": [283, 316, 322], "whole": [283, 312], "network": 283, "networkx": 283, "pyvi": 283, "hostedtoolcach": 283, "x64": 283, "lib": 283, "431": 283, "ifram": 283, "tweak": [283, 312, 313, 315, 316, 320], "plai": [283, 312, 313, 321, 322], "appropi": [283, 312], "organ": [283, 285, 312, 315], "lazi": 283, "unlik": [283, 320], "0x7f783af29d90": 283, "saw": [283, 316], "22": [283, 285, 307, 312, 316, 318, 320, 321], "discoveri": 283, "0x7f783a94aaf0": 283, "imagin": [283, 316, 322], "reus": 283, "intermedi": [283, 289], "alert_chang": 283, "feed": 283, "alert": 283, "my_alert": 283, "syntax": [283, 290], "_workflow": 283, "triplesum": 283, "staticmethod": 283, "get_input": 283, "36": [283, 285, 313, 320], "reconvert": 283, "obviou": [283, 310, 320, 321], "sum_tripl": 283, "29": [283, 320, 321], "to_pyvi": 283, "emphasi": 284, "establish": 284, "literatur": 284, "kwant": 284, "pybind": 284, "philosophi": 284, "selv": 284, "email": 285, "nickpapior": 285, "AT": 285, "gmail": 285, "yuefei": 285, "huang": 285, "tariq": 285, "altalhi": 285, "bori": 285, "yakobson": 285, "evgeni": 285, "penev": 285, "nucleobas": 285, "junction": 285, "ac": 285, "16736": 285, "16743": 285, "1021": [285, 286], "acsnano": 285, "2c06274": 285, "calin": 285, "andrei": 285, "panti": 285, "simut": 285, "amanda": 285, "teodora": 285, "preda": 285, "nicola": [285, 286], "filipoiu": 285, "alaa": 285, "allosh": 285, "georg": 285, "alexandru": 285, "nemn": 285, "electr": [285, 320], "phosphoren": 285, "heterostructur": 285, "nanomateri": 285, "3650": 285, "3390": 285, "nano12203650": 285, "induc": 285, "weaken": 285, "conductor": 285, "phy": [285, 286], "rev": [285, 286], "1103": [285, 286], "physrevb": [285, 286], "106": 285, "155401": 285, "joel": 285, "fallaqu": 285, "sandra": 285, "rodr": 285, "\u00ed": [285, 286], "guez": 285, "gonz\u00e1lez": 285, "fernando": 285, "mart": 285, "cristina": 285, "az": 285, "molecular": 285, "conden": [285, 286], "matter": [285, 286, 307, 312, 321], "43": 285, "435901": 285, "1088": [285, 286], "1361": 285, "648x": 285, "ac89c4": 285, "dongzh": 285, "yongfeng": 285, "tong": 285, "kaushik": 285, "bairagi": 285, "massin": 285, "kelai": 285, "yannick": 285, "dapp": 285, "j\u00e9r\u00f4me": 285, "lagout": 285, "yann": 285, "girard": 285, "sylvi": 285, "rousset": 285, "vincent": 285, "repain": 285, "cyril": 285, "barreteau": 285, "alexand": 285, "smogunov": 285, "amandin": 285, "bellec": 285, "differenti": 285, "resist": 285, "crossov": 285, "chemistri": 285, "7514": 285, "7520": 285, "jpclett": 285, "2c01934": 285, "maria": 285, "tenorio": 285, "cesar": 285, "moreno": 285, "jes\u00fa": 285, "castro": 285, "esteban": 285, "pablo": 285, "ordej\u00f3n": 285, "diego": 285, "pe\u00f1a": 285, "miguel": 285, "pruneda": 285, "aitor": 285, "mugarza": 285, "sharp": 285, "superlattic": 285, "heterojunct": 285, "built": [285, 313], "nitrogen": [285, 319], "dope": 285, "nanopor": 285, "adv": [285, 286], "mater": 285, "2110099": 285, "1002": [285, 286], "adma": 285, "202110099": 285, "guodong": 285, "yu": 285, "yunhua": 285, "wang": [285, 286], "mikhail": 285, "katsnelson": 285, "hai": 285, "qing": 285, "lin": 285, "shengjun": 285, "yuan": 285, "interlay": 285, "hybrid": 285, "quasicryst": 285, "125403": 285, "matthieu": 285, "verstraet": 285, "zeila": 285, "zanolli": 285, "moir\u00e9": 285, "416": 285, "422": 285, "028": 285, "tao": 285, "jame": 285, "lawrenc": 285, "alejandro": 285, "berdonc": 285, "layunta": 285, "moham": 285, "manuel": 285, "vila": 285, "varela": 285, "martina": 285, "corso": 285, "dima": 285, "oteyza": 285, "radic": 285, "lett": [285, 286], "164": 285, "171": 285, "decemb": [285, 286], "nanolett": 285, "1c03578": 285, "isaac": 285, "alc\u00f3n": 285, "francesc": 285, "vi\u00f1e": 285, "gamallo": 285, "acetylen": 285, "mediat": 285, "nanostructur": [285, 286], "boron": [285, 319, 320], "nitrid": [285, 319, 320], "45": 285, "11220": 285, "11227": 285, "1c03166": 285, "haidar": 285, "sherif": 285, "abdulkad": 285, "tawfik": 285, "catherin": 285, "stampfl": 285, "heterobilay": 285, "46": 285, "25886": 285, "25897": 285, "jpcc": 285, "1c08282": 285, "armando": 285, "pezo": 285, "adalberto": 285, "fazzio": 285, "stephan": 285, "roch": 285, "jose": 285, "garcia": 285, "transit": 285, "metal": 285, "dichalcogenid": 285, "015008": 285, "2053": 285, "1583": 285, "ac3378": 285, "jeremi": 285, "hieull": 285, "silvia": 285, "nikla": 285, "friedrich": 285, "alessio": 285, "vegliant": 285, "francisco": 285, "romero": 285, "lara": 285, "sof": 285, "dulc": 285, "rei": 285, "ignacio": 285, "pascual": 285, "synthesi": 285, "excit": [285, 298, 315], "triangulen": 285, "nanostar": 285, "angew": 285, "chem": 285, "ed": 285, "48": 285, "25224": 285, "25229": 285, "202108301": 285, "junwei": 285, "yanzhao": 285, "wu": 285, "liuxia": 285, "ruan": 285, "bo": 285, "yang": 285, "guangm": 285, "xie": 285, "gaowu": 285, "qin": 285, "fubo": 285, "tian": 285, "xianmin": 285, "zhang": 285, "sublattic": 285, "antiferromagnet": 285, "interfaci": 285, "tailor": 285, "ensuremath": 285, "mnpt": 285, "fe": 285, "appl": 285, "119": 285, "172401": 285, "1063": 285, "0064931": 285, "jingcheng": 285, "nestor": 285, "merino": 285, "ez": 285, "aran": 285, "leku": 285, "nat": 285, "1038": 285, "s41467": 285, "021": 285, "25688": 285, "michael": 285, "mohr": 285, "weismann": 285, "richard": 285, "berndt": 285, "contact": 285, "feh2": 285, "104": 285, "115431": 285, "juan": [285, 286], "marmolejo": 285, "tejada": 285, "andr": 285, "jaramillo": 285, "botero": 285, "sensor": 285, "silico": 285, "character": 285, "nato": 285, "ss": 285, "iii": 285, "196": 285, "110506": 285, "commatsci": 285, "jie": 285, "eric": 285, "fahrenthold": 285, "s41598": 285, "96636": 285, "electrochem": 285, "funct": 285, "40": [285, 318, 320], "2104031": 285, "adfm": 285, "202104031": 285, "initio": [285, 286], "research": 285, "physrevresearch": 285, "033017": 285, "fei": 285, "gao": 285, "he": 285, "shiwu": 285, "voltag": 285, "gate": 285, "103": 285, "l241402": 285, "sozykin": 285, "gui4dft": 285, "262": 285, "107843": 285, "bruno": 285, "focassio": 285, "gabriel": 285, "schleder": 285, "marcio": 285, "costa": 285, "caio": 285, "lewenkopf": 285, "realist": [285, 313], "amorph": 285, "insul": [285, 286], "025032": 285, "abdb97": 285, "delwin": 285, "perera": 285, "jochen": 285, "rohrer": 285, "polycrystallin": 285, "nanoscal": 285, "7709": 285, "7713": 285, "1039": 285, "d1nr00186h": 285, "feifei": 285, "luo": 285, "lianqun": 285, "zhou": 285, "031405": 285, "0004564": 285, "pedro": 285, "brandimart": 285, "g\u00e9za": 285, "giedk": [285, 286], "daniel": 285, "s\u00e1nchez": 285, "portal": 285, "beam": 285, "splitter": 285, "optic": 285, "035436": 285, "arsalan": 285, "akhtar": 285, "emilio": 285, "artacho": 285, "volker": 285, "blum": 285, "emanuel": 285, "bosoni": 285, "cerd\u00e1": 285, "fabiano": 285, "corsetti": 285, "ram\u00f3n": 285, "cuadrado": 285, "vladimir": 285, "dikan": 285, "jaim": 285, "ferrer": 285, "julian": 285, "gale": 285, "fern\u00e1ndez": 285, "su\u00e1rez": 285, "huh": 285, "sergio": 285, "illera": 285, "koryt\u00e1r": 285, "peter": 285, "koval": 285, "irina": 285, "lebedeva": 285, "l\u00f3pez": 285, "tarifa": 285, "sara": 285, "mayo": 285, "postnikov": 285, "pouillon": 285, "roberto": 285, "robl": 285, "soler": 285, "rafi": 285, "ullah": 285, "victor": 285, "wen": 285, "zhe": 285, "javier": 285, "152": 285, "204108": 285, "0005077": 285, "jesu": 285, "triplet": 285, "ground": [285, 298, 310], "nanoflak": 285, "physrevlett": [285, 286], "124": 285, "177201": 285, "tanja": 285, "schmitt": 285, "sean": 285, "bourel": 285, "nathaniel": 285, "tye": 285, "giancarlo": 285, "soavi": 285, "andrew": 285, "sascha": 285, "feldmann": 285, "boubacar": 285, "traor": 285, "claudin": 285, "katan": 285, "jacki": 285, "si\u00e2n": 285, "dutton": 285, "felix": 285, "deschler": 285, "halogen": 285, "benzylammonium": 285, "halid": 285, "perovskit": 285, "jac": 285, "142": 285, "5060": 285, "5067": 285, "9b11809": 285, "nonequilibrium": [285, 286], "195417": 285, "frank": 285, "schindler": 285, "marta": 285, "brzezi\u0144ska": 285, "wladimir": 285, "benalcazar": 285, "mikel": 285, "iraola": 285, "adrien": 285, "bouhon": 285, "stepan": 285, "tsirkin": 285, "maia": [285, 286], "vergniori": [285, 286], "titu": 285, "neupert": 285, "033074": 285, "jonathan": [285, 286], "brand": 285, "n\u00e9el": 285, "yong": 285, "lei": 285, "j\u00f6rg": 285, "kr\u00f6ger": 285, "7845": 285, "7851": 285, "9b02845": 285, "antti": 285, "pekka": 285, "jauho": 285, "nanocircuitri": 285, "141": 285, "33": [285, 320], "13081": 285, "13088": 285, "9b04649": 285, "nanoconstrict": 285, "035415": 285, "l\u00e1szl\u00f3": [285, 286], "oroszl\u00e1ni": [285, 286], "andr\u00e1": [285, 286], "de\u00e1k": 285, "udvardi": 285, "szunyogh": 285, "nonorthogon": 285, "ferromagnet": 285, "99": 285, "224412": 285, "gurvind": 285, "singh": 285, "krishan": 285, "kumar": 285, "moudgil": 285, "topologi": 285, "tune": [285, 318, 323], "thermoelectr": 285, "nobl": 285, "wire": 285, "physica": 285, "109": 285, "114": 285, "132": 285, "physe": 285, "007": 285, "deung": 285, "jang": 285, "choi": 285, "018": 285, "08060": 285, "mohammad": 285, "koleini": 285, "matthew": 285, "helmi": 285, "leth": 285, "larsen": 285, "beyond": 285, "6153": 285, "6164": 285, "c9nr00866g": 285, "alloi": 285, "seebeck": 285, "pt": 285, "bimetal": 285, "37": [285, 320], "20965": 285, "20980": 285, "c9cp01671f": 285, "baljind": 285, "thermal": [285, 286], "aluminum": 285, "platinum": 285, "nanowir": 285, "aip": 285, "confer": 285, "proceed": [285, 307, 308, 310], "5097098": 285, "probe": [285, 300], "talbot": 285, "576": 285, "581": 285, "8b04616": 285, "grain": 285, "98": 285, "155432": 285, "zahra": 285, "nourbakhsh": 285, "reza": 285, "asgari": 285, "nanoelectromechan": 285, "125427": 285, "\u00f8": 285, "ggild": 285, "364001": 285, "aad6f1": 285, "b\u00e1lint": 285, "f\u00fcl\u00f6p": 285, "zolt\u00e1n": 285, "tajkov": 285, "j\u00e1no": [285, 286], "pet": 285, "\u0151": 285, "p\u00e9ter": 285, "kun": 285, "koltai": 285, "endr": 285, "t\u00f3v\u00e1ri": 285, "hiroshi": 285, "murakawa": 285, "yoshinori": 285, "tokura": 285, "s\u00e1ndor": 285, "bord\u00e1c": 285, "levent": 285, "tapaszt\u00f3": 285, "szabolc": 285, "csonka": 285, "exfoli": 285, "bitei": 285, "031013": 285, "aac652": 285, "97": 285, "235406": 285, "diffus": 285, "25lt01": 285, "aac4dd": 285, "c\u00e9sar": 285, "mariu": 285, "costach": 285, "marko": 285, "paradina": 285, "mirko": 285, "panighel": 285, "gustavo": 285, "ceballo": 285, "valenzuela": 285, "multifunct": 285, "scienc": 285, "6385": 285, "199": 285, "203": 285, "1126": 285, "aar2009": 285, "veronika": 285, "oberstein": 285, "egbert": 285, "zojer": 285, "unconvent": 285, "cluster": 285, "7350": 285, "7357": 285, "7b03066": 285, "groizard": 285, "guennic": 285, "robert": 285, "mika\u00ebl": 285, "kepenekian": 285, "cooper": 285, "3415": 285, "3420": 285, "7b01248": 285, "jos\u00e9": [285, 286], "caridad": 285, "christoph": 285, "stampfer": 285, "r\u00fcbner": [285, 286], "fermion": 285, "microscop": 285, "ncomms15783": 285, "engelund": 285, "tunabl": [285, 315, 321], "realiz": 285, "146": 285, "092318": 285, "4974895": 285, "nicol\u00e1": 285, "review": 285, "weckbeck": 285, "fleischmann": 285, "gupta": 285, "landgraf": 285, "pankratov": 285, "sharma": 285, "mede": 285, "shallcross": 285, "1901": 285, "04712": 285, "guan": 285, "yazyev": 285, "disord": [285, 286], "2210": 285, "16629": 285, "asb\u00f3th": 286, "p\u00e1lyi": 286, "springer": 286, "publish": [286, 313], "isbn": 286, "9783319256054": 286, "9783319256078": 286, "1007": 286, "978": 286, "319": 286, "25607": 286, "blanco": 286, "paz": 286, "chiara": 286, "devescovi": 286, "geza": 286, "saenz": 286, "barri": 286, "bradlyn": 286, "dario": 286, "bercioux": 286, "aitzol": 286, "etxarri": 286, "photon": 286, "technol": 286, "1900117": 286, "qute": 286, "201900117": 286, "johnson": 286, "broyden": 286, "acceler": 286, "38": [286, 320], "12807": 286, "12813": 286, "1988": 286, "marzari": 286, "david": 286, "vanderbilt": 286, "alessandro": 286, "vita": 286, "payn": 286, "al": 286, "110": 286, "3296": 286, "3299": 286, "1999": 286, "murphi": 286, "worti": 286, "atkinson": 286, "2011": 286, "83": 286, "184206": 286, "magnu": 286, "paulsson": 286, "2007": 286, "76": [286, 318], "115117": 286, "studi": [286, 290], "phd": 286, "thesi": 286, "technic": 286, "univers": 286, "denmark": 286, "dtu": 286, "46f34e1c": 286, "5f0c": 286, "46cb": 286, "be32": 286, "fff5f37881aa": 286, "html": [286, 298, 312], "11581": 286, "00000025": 286, "raffael": 286, "resta": 286, "manifest": 286, "condens": 286, "r107": 286, "r143": 286, "2000": 286, "0953": 286, "8984": 286, "201": 286, "trambli": 286, "laissardi\u00e8r": 286, "mayou": 286, "magaud": 286, "804": 286, "808": 286, "2010": 286, "nl902948m": 286, "xinji": 286, "yate": 286, "ivo": 286, "souza": 286, "2006": 286, "74": 286, "195118": 286, "62": 286, "2747": 286, "2750": 286, "1989": 286, "utitili": 287, "simplest": [289, 290, 313], "mandatori": 289, "argumet": 289, "out2": 289, "out3": 289, "repx3": 289, "repx3_repy3": 289, "yb": 289, "zc": 289, "run4x": 289, "albeit": 289, "tx": 289, "ty": 289, "writeout": 290, "accomod": 290, "inclus": 290, "diff_up": 290, "seen": [290, 307, 310, 321], "quotat": 290, "argpars": 290, "decreas": 290, "po": 290, "10x10x20": 290, "5x5x5": 290, "understood": [290, 316], "\u00e5ngstr\u00f8m": 290, "\u00e5ng": 290, "meanx": 290, "sumx": 290, "z_charg": 290, "librari": [290, 313], "inspir": [290, 315, 318], "thought": [291, 296, 318, 320], "visibl": [291, 307, 318], "littl": [293, 315, 316], "h_elec": 293, "downfoldselfenergi": 293, "scattering_st": 293, "eig_channel": 293, "from_fdf": 293, "consider": [293, 304], "ret_coeff": 293, "u_i": 293, "decomposit": [293, 298], "t_eig": 293, "prefactor": 293, "use_tbt_s": 293, "fall": 293, "bm": 293, "bd": 293, "scattering_matrix": 293, "lambda_i": 293, "operatornam": 293, "cost": 293, "scat_matrix": 293, "carri": 293, "purpos": [293, 307], "slow": [293, 306, 315], "fastest": 293, "loss": 293, "cutoff_elec": 293, "scat": 293, "herm": 293, "stick": 293, "hdevic": 294, "eta_devic": 294, "pivotselfenergi": 294, "objectfil": 295, "focus": 296, "pseudopotenti": 297, "mimick": 297, "00213": 297, "r_pc": 297, "8656676967": 297, "9330918445": 297, "0573356051": 297, "stem": [297, 312], "inp": [297, 298], "ag": 297, "atom_input": 297, "atominput": 297, "rcore": 297, "pb": 297, "flavor": 297, "tm2": 297, "pg": [297, 298], "new_cc": 298, "free_format_rc_input": 298, "no_ps_cutoff": 298, "atomlicens": 298, "fed": 298, "ae": 298, "2345678901234567890123456789012345678901234567890": 298, "ruler": 298, "icmab": 298, "siesta_materi": 298, "atom_lic": 298, "lq": 298, "from_input": 298, "from_yaml": 298, "yaml": 298, "log": 298, "spdf": 298, "psf": 298, "fig": [298, 309], "write_all_electron": 298, "write_gener": 298, "write_test": 298, "accel": 299, "boundary_fft": 299, "device_v": 299, "plot_boundari": 299, "elecs_v": 299, "formal": 300, "fourier": 300, "implicitli": 300, "trivial": [300, 320], "ramp": 300, "interven": 300, "initmesh": 300, "multigrid": 300, "educ": [301, 309, 318], "h2o": 301, "single_hydrogen": 302, "distinct": [302, 316], "single_carbon": 302, "natrium": 302, "chlorid": 302, "clever": 302, "enough": [302, 313, 316, 318, 320, 321, 324], "chainx2": 302, "hbn": 303, "nanotub": 303, "ntb": 303, "recal": 304, "uneven": 304, "arrow": 304, "red": [304, 307, 309, 310, 312, 313, 316, 318, 319, 320, 322, 323], "dash": [304, 322], "commonli": [304, 305], "suffic": [304, 305], "highlight": [304, 305, 307], "blue": [304, 307, 309, 310, 319, 323], "convinc": 304, "overweight": 305, "lone": 305, "inlin": [307, 308, 309, 310], "vacanc": 307, "scene": [307, 313], "72": 307, "01070": 307, "43420": 307, "780": 307, "379": 307, "tell": [307, 309, 313], "4342": 307, "atoms_styl": [307, 309, 320, 323], "color": [307, 309, 310, 312, 316, 318, 319, 320, 321, 322, 323], "peridiod": 307, "xyz_cent": 307, "opac": [307, 312, 318, 320, 321, 323], "black": [307, 310, 313, 318], "indices_close_to_cent": 307, "center_atom_index": 307, "tthi": 307, "71": 307, "objet": 307, "0th": 307, "accompani": 307, "281": 307, "cdot4": 307, "es_fermi": 307, "xlabel": [307, 308, 310], "ylabel": [307, 308, 310], "aptli": 307, "xyz_remov": 307, "marker": [307, 316, 318], "incomplet": 307, "leverag": 307, "circumv": 307, "b_list": 307, "as_list": 307, "bz_averag": [307, 308], "700": 307, "ylim": [307, 308, 310], "0053998295349618": 307, "2p_z": 307, "2p_x": 307, "2p_y": 307, "p_z": [307, 310], "qualit": 307, "imshow": [307, 309], "60010": 307, "6001": 307, "knowledg": [307, 316], "075": 307, "xaxis_rang": 307, "skewed": 307, "pm": 308, "anti": 308, "h_bp": 308, "cone": 308, "41": [308, 310, 320], "awai": 308, "concentr": 308, "b_x": 308, "k_y": 308, "b_y": 308, "confirm": 308, "legend": [308, 310, 312, 316, 320, 321], "gca": 308, "set_aspect": 308, "readi": [308, 313, 319], "5f": 308, "41733": 308, "perfectli": [308, 320], "70": 308, "bp": 308, "circle_oth": 308, "fnorm": 308, "b_i": 308, "chdir": [309, 310], "siesta_1": 309, "h_2": [309, 310], "99940": 309, "systemlabel": [309, 310], "basiss": [309, 310], "szp": [309, 310], "meshcutoff": [309, 310], "250": [309, 310], "cdf": [309, 310], "saveh": [309, 310], "saverho": [309, 310], "latticeconst": 309, "numberofatom": 309, "atomiccoordinatesformat": 309, "atomiccoordinatesandatomicspeci": 309, "numberofspeci": 309, "289": 309, "08350": 309, "2sz1": [309, 310], "749": 309, "2pyz1": [309, 310, 322], "3333333333333333": 309, "0835000000000004": 309, "2pxz1": [309, 310, 322], "2dxyz1p": [309, 310], "2dyzz1p": [309, 310], "2dz2z1p": [309, 310], "2dxzz1p": [309, 310], "2dx2": [309, 310], "y2z1p": [309, 310], "01000": [309, 310], "55510": 309, "1sz1": 309, "5551000000000004": 309, "1pyz1p": 309, "1pzz1p": 309, "1pxz1p": 309, "capit": 309, "z1": 309, "z2": 309, "fun": 309, "plot_atom": 309, "nx": 309, "ny": 309, "figsiz": [309, 310], "suptitl": 309, "fontsiz": 309, "my_plot": 309, "set_titl": 309, "set_xlabel": [309, 310], "set_ylabel": [309, 310], "delax": 309, "aspect": [309, 312, 320], "lumo": 309, "idx_lumo": 309, "iso": [309, 312, 321, 323], "4f": 309, "0000": 309, "slower": 309, "3e": 309, "386e": 309, "siesta_2": 310, "emphas": 310, "61": 310, "5994": 310, "57730": 310, "2183": 310, "6666666666666666": 310, "5773": 310, "247": 310, "imper": 310, "minut": [310, 315], "81": 310, "xlim": 310, "idx_": 310, "idx_pxi": 310, "idx_pz": 310, "p_x": 310, "p_y": 310, "all_": 310, "all_pxi": 310, "all_pz": 310, "pdos_": 310, "pdos_pxi": 310, "pdos_pz": 310, "success": 310, "gain": 310, "weight_": 310, "weight_pxi": 310, "weight_pz": 310, "wrap_fatband": 310, "k_tick": 310, "k_label": 310, "emin": 310, "emax": 310, "pxy": 310, "fill_between": 310, "grai": 310, "idx_val": 310, "z_idx": 310, "contourf": 310, "finit": 310, "siesta_fil": [312, 318, 321, 322], "_environ": [312, 318, 321, 322], "get_environ_vari": [312, 318, 321, 322], "sisl_viz_autoload": 312, "autoload": 312, "straightforward": [312, 324], "zsmooth": [312, 314, 321, 323], "modif": [312, 316], "rho_plot": 312, "__class__": 312, "__doc__": [312, 316], "versatil": 312, "grid_fil": 312, "rhosilesiesta": 312, "ldossilesiesta": 312, "rhoinitsilesiesta": 312, "rhoxcsilesiesta": 312, "drhosilesiesta": 312, "badersilesiesta": 312, "iorhosilesiesta": 312, "totalrhosilesiesta": 312, "stssilesiesta": 312, "stmldossilesiesta": 312, "hartreesilesiesta": 312, "neutralatomhartreesilesiesta": 312, "totalhartreesilesiesta": 312, "commut": 312, "reduce_method": [312, 321], "heatmap": [312, 321], "pixel": [312, 314], "transform_bc": 312, "trace_nam": 312, "toggl": [312, 321], "x_rang": [312, 321], "y_rang": 312, "z_rang": [312, 321], "crang": [312, 321], "colorbar": 312, "enclos": 312, "satur": [312, 321], "hide": [312, 318, 321], "cmid": [312, 321], "colorscal": [312, 314, 318, 320], "isovalu": [312, 321], "isov": [312, 321], "iso_frac": [312, 321], "min_valu": [312, 321], "max_valu": [312, 321], "dramat": [312, 321], "resolut": [312, 321, 323], "satisfactori": [312, 321], "worth": [312, 313, 321], "transpar": [312, 320, 321], "opaqu": [312, 321], "plot_geom": 312, "geom_kwarg": [312, 323], "consequ": 312, "0x7f80fafa6760": 312, "num": [312, 321], "dai": [312, 315], "receiv": [312, 318], "bands_sil": 312, "bands_color": [312, 318], "quickli": [312, 319, 320], "fatband": 312, "earlier": 312, "lightgreen": 312, "disappear": 312, "wouldn": [312, 315], "rerun": 312, "someon": 312, "involv": [312, 322], "isn": [312, 316, 322, 323], "paragraph": 312, "rho_plot_from_colleagu": 312, "everyon": 312, "modular": 312, "dedic": [312, 317, 321], "switch": 312, "add_scatt": 312, "concept": [312, 316], "enjoi": [312, 315, 318, 319, 321, 322, 323, 324], "thumbnail": [312, 314, 318, 319, 320, 321, 322, 323, 324], "thumbnail_plot": [312, 318, 319, 320, 321, 322, 323, 324], "offer": 313, "bet": 313, "virtual": 313, "guid": [313, 316], "webpag": 313, "ubuntu": 313, "snap": 313, "Being": 313, "93": 313, "hash": 313, "b7205031cec4": 313, "pref": 313, "userpref": 313, "blend": 313, "gcc": 313, "20200408": 313, "hat": 313, "skip": 313, "micro": 313, "conda_prefix": 313, "echo": 313, "miniconda3": 313, "env": 313, "blender_system_python": 313, "linux": 313, "bashrc": 313, "export": 313, "congratul": 313, "intimid": 313, "ll": [313, 318, 321], "screen": [313, 320], "supr": 313, "tab": [313, 315], "editor": 313, "geom_plot": 313, "viewport": 313, "camera": 313, "wirefram": 313, "f12": 313, "eev": 313, "rai": 313, "travel": 313, "click": [313, 315, 320, 321], "microwav": 313, "background": 313, "amaz": 313, "talk": 313, "learn": [314, 318, 319, 321, 322, 323, 324], "threefold": 314, "childplot": 314, "themselv": 314, "grab": [314, 316, 318], "effort": [314, 315, 316], "constructor": 314, "wf_plot": 314, "pdos_plot": 314, "wavefunctionplot": 314, "beforehand": 314, "temp": [314, 318, 321], "portland": 314, "peach": 314, "viridi": [314, 320], "cool": [315, 318], "strength": [315, 321], "seamlessli": 315, "dinam": 315, "chose": 315, "think": 315, "20gb": 315, "piti": 315, "took": [315, 316], "confid": 315, "annoi": 315, "beauti": [315, 316], "toi": [316, 319, 323], "illustr": [316, 318], "band_struct": [316, 318], "detach": 316, "scenario": 316, "happi": [316, 318], "plotlybandsbackend": 316, "myownbandsbackend": 316, "plotly_myown": 316, "bandsbackend": 316, "draw_band": 316, "_draw_spin_textured_band": 316, "NO": 316, "_draw_band": 316, "_draw_lin": 316, "draw_gap": 316, "overview": 316, "draw_lin": [316, 318], "showlegend": 316, "fresh": 316, "2ev": 316, "add_hlin": 316, "line_color": [316, 318], "finish": 316, "person": 316, "plotlybackend": 316, "bad": [316, 321, 323], "myplotlybandsbackend": 316, "draw_spin_textured_band": 316, "bother": 316, "compulsori": 316, "_plot": 316, "asign": 316, "seem": 316, "2f": 316, "marker_symbol": 316, "awesom": 316, "plotly_fromscratch": 316, "masterpiec": 316, "arm": 316, "challeng": 316, "draw_on": 316, "draw_scatt": 316, "draw_line3d": 316, "draw_scatter3d": 316, "draw_arrows3d": 316, "textbackend": 316, "nline": 316, "nscatter": 316, "other_backend": 316, "self_text": 316, "_backend_nam": 316, "restor": 316, "textbandsbackend": 316, "08194034": 316, "16388068": 316, "24582102": 316, "32776136": 316, "4097017": 316, "49164204": 316, "57358238": 316, "65552272": 316, "73746306": 316, "07260764": 316, "99070941": 316, "85514486": 316, "66732391": 316, "42924537": 316, "14352854": 316, "81346515": 316, "44310336": 316, "03738354": 316, "78082828": 316, "00808297": 316, "34614692": 316, "75661337": 316, "20788704": 316, "67653718": 316, "14555076": 316, "60235836": 316, "699999999999994": 316, "7000000000000126": 316, "bands_plot": [316, 318], "bands_rang": [316, 318], "custom_gap": [316, 318], "7374630642229563": 316, "037383539249426": 316, "037383539249433": 316, "wasn": 316, "boilerpl": 317, "tast": 317, "deeper": 317, "hope": [317, 318, 319, 321, 322, 323, 324], "confus": 317, "e0": 318, "bands_width": 318, "wider": 318, "spindown_color": 318, "gap_color": 318, "wors": 318, "flat": 318, "glu": 318, "cope": 318, "direct_gaps_onli": 318, "gap_tol": 318, "429132": 318, "858265": 318, "465149": 318, "208428": 318, "815313": 318, "gap_k": 318, "orang": [318, 320, 323], "add_band_data": 318, "dummi": 318, "57270281": 318, "58050281": 318, "60380281": 318, "64220281": 318, "69490281": 318, "76100281": 318, "83940281": 318, "92850281": 318, "02700281": 318, "13310281": 318, "24470281": 318, "35980281": 318, "47610281": 318, "59120281": 318, "70260281": 318, "80790281": 318, "90460281": 318, "99050281": 318, "06370281": 318, "12250281": 318, "16550281": 318, "19170281": 318, "20050281": 318, "20090281": 318, "20210281": 318, "20410281": 318, "20690281": 318, "21040281": 318, "21460281": 318, "21950281": 318, "22520281": 318, "23160281": 318, "23890281": 318, "24730281": 318, "25730281": 318, "26920281": 318, "28390281": 318, "31040281": 318, "38790281": 318, "45420281": 318, "50880281": 318, "55160281": 318, "58230281": 318, "60070281": 318, "60690281": 318, "60150281": 318, "58540281": 318, "55970281": 318, "52570281": 318, "48510281": 318, "43900281": 318, "38820281": 318, "33280281": 318, "27300281": 318, "20870281": 318, "14020281": 318, "06760281": 318, "99110281": 318, "91120281": 318, "82820281": 318, "74250281": 318, "65450281": 318, "56460281": 318, "47330281": 318, "38120281": 318, "28900281": 318, "19760281": 318, "10780281": 318, "02080281": 318, "93790281": 318, "86020281": 318, "78920281": 318, "72630281": 318, "67280281": 318, "62980281": 318, "59830281": 318, "57910281": 318, "57940281": 318, "59950281": 318, "63260281": 318, "67810281": 318, "73490281": 318, "80200281": 318, "87800281": 318, "96160281": 318, "05100281": 318, "14460281": 318, "24060281": 318, "33740281": 318, "43340281": 318, "52680281": 318, "61640281": 318, "70060281": 318, "77840281": 318, "84880281": 318, "91100281": 318, "96450281": 318, "00920281": 318, "04540281": 318, "07370281": 318, "09560281": 318, "11330281": 318, "13000281": 318, "15010281": 318, "17820281": 318, "21730281": 318, "26650281": 318, "32200281": 318, "37920281": 318, "43400281": 318, "48360281": 318, "52610281": 318, "56020281": 318, "58510281": 318, "60030281": 318, "60540281": 318, "60060281": 318, "58670281": 318, "56440281": 318, "53480281": 318, "49990281": 318, "46220281": 318, "42440281": 318, "38920281": 318, "35870281": 318, "33390281": 318, "31440281": 318, "29950281": 318, "28810281": 318, "27930281": 318, "27220281": 318, "26620281": 318, "26090281": 318, "25590281": 318, "25100281": 318, "24600281": 318, "24100281": 318, "23600281": 318, "23090281": 318, "22600281": 318, "22130281": 318, "21680281": 318, "21280281": 318, "20920281": 318, "20610281": 318, "20370281": 318, "20190281": 318, "20080281": 318, "01951": 318, "03901": 318, "05852": 318, "779": 318, "797": 318, "815": 318, "proport": 318, "gradient": 318, "purpl": 318, "fade": 318, "Of": 318, "notion": 318, "draw_gradi": 318, "dist_from_ef": 318, "marker_s": 318, "line_dash": 318, "fantast": 318, "bi2d_bhex": 318, "301": [318, 319], "spin_texture_plot": 318, "spin_texture_colorscal": 318, "fx": [319, 320], "fy": [319, 320], "fz": 319, "neigh_tag": 319, "seq": 319, "pdosplot": 319, "autogener": 319, "split_group": 319, "Or": [319, 320, 322], "appeal": 319, "scale_fatband": 319, "rescal": [319, 320], "from_curr": 319, "practic": 320, "depth": [320, 321], "samewis": 320, "dispos": 320, "dataaxis_1d": 320, "sin": [320, 321], "multicharact": [320, 321], "yx": [320, 321], "modulu": 320, "show_bond": 320, "show_cel": 320, "show_atom": 320, "bind_bonds_to_at": 320, "atoms_scal": 320, "alli": 320, "sanit": 320, "atomodd": [320, 322], "odd": 320, "atoms_colorscal": 320, "bonds_styl": 320, "assur": 320, "bicolor": 320, "arrowhead_scal": 320, "arrowhead_angl": 320, "aesthet": [320, 322], "upward": 320, "vesta": 321, "rho_fil": 321, "anywai": 321, "inspect": 321, "courtesi": 321, "acheiv": 321, "expens": 321, "sr": [321, 322], "\u1ef3_rang": 321, "ti": [321, 322], "moving_slic": 321, "as_i": 321, "update_layout": 321, "xaxis_scaleanchor": 321, "xaxis_scaleratio": 321, "apart": 322, "linewidth": 322, "2p": 322, "2pzz2": 322, "2pxz2": 322, "2pyz2": 322, "darkr": 322, "titanium": 322, "grei": 322, "atomz": 322, "cumbersom": 322, "explor": 322, "split_do": 322, "split_request": 322, "update_request": 322, "remove_request": 322, "add_request": 322, "constrain": 322, "accomplish": 322, "undefin": 322, "sound": 322, "truli": 323, "ugli": 323, "grid_prec": 323, "ok": 323, "occupi": 323, "unnecessari": 323, "salmon": 323, "pink": 323, "fanci": 324, "experi": 324}, "objects": {"": [[131, 0, 0, "-", "sisl"], [296, 0, 0, "-", "sisl_toolbox"]], "sisl": [[2, 1, 1, "", "Atom"], [3, 1, 1, "", "AtomicOrbital"], [4, 1, 1, "", "Atoms"], [5, 1, 1, "", "GTOrbital"], [6, 1, 1, "", "Geometry"], [7, 1, 1, "", "Grid"], [8, 1, 1, "", "HydrogenicOrbital"], [9, 1, 1, "", "Orbital"], [10, 1, 1, "", "PeriodicTable"], [11, 1, 1, "", "Quaternion"], [12, 1, 1, "", "STOrbital"], [13, 1, 1, "", "SparseAtom"], [14, 1, 1, "", "SparseCSR"], [15, 1, 1, "", "SparseOrbital"], [16, 1, 1, "", "SphericalOrbital"], [17, 1, 1, "", "SuperCell"], [246, 0, 0, "-", "constant"], [1, 0, 0, "-", "geom"], [230, 0, 0, "-", "io"], [238, 0, 0, "-", "mixing"], [239, 0, 0, "-", "physics"], [250, 0, 0, "-", "shape"], [247, 0, 0, "-", "unit"], [248, 0, 0, "-", "utils"]], "sisl.Atom": [[2, 2, 1, "", "Z"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "copy"], [2, 3, 1, "", "equal"], [2, 3, 1, "", "index"], [2, 3, 1, "", "iter"], [2, 2, 1, "", "mass"], [2, 3, 1, "", "maxR"], [2, 2, 1, "", "no"], [2, 2, 1, "", "orbitals"], [2, 3, 1, "", "radius"], [2, 3, 1, "", "remove"], [2, 3, 1, "", "scale"], [2, 3, 1, "", "sub"], [2, 2, 1, "", "symbol"], [2, 2, 1, "", "tag"], [2, 3, 1, "", "toSphere"]], "sisl.AtomicOrbital": [[3, 2, 1, "", "P"], [3, 2, 1, "", "R"], [3, 3, 1, "", "__init__"], [3, 3, 1, "", "copy"], [3, 3, 1, "", "equal"], [3, 2, 1, "", "l"], [3, 2, 1, "", "m"], [3, 2, 1, "", "n"], [3, 3, 1, "", "name"], [3, 2, 1, "", "orb"], [3, 3, 1, "", "psi"], [3, 3, 1, "", "psi_spher"], [3, 2, 1, "", "q0"], [3, 3, 1, "", "radial"], [3, 3, 1, "", "scale"], [3, 3, 1, "", "set_radial"], [3, 3, 1, "", "spher"], [3, 2, 1, "", "tag"], [3, 3, 1, "", "toGrid"], [3, 3, 1, "", "toSphere"], [3, 2, 1, "", "zeta"]], "sisl.Atoms": [[4, 2, 1, "", "Z"], [4, 3, 1, "", "__init__"], [4, 3, 1, "", "add"], [4, 3, 1, "", "append"], [4, 2, 1, "", "atom"], [4, 3, 1, "", "copy"], [4, 3, 1, "", "equal"], [4, 2, 1, "", "firsto"], [4, 3, 1, "", "formula"], [4, 3, 1, "", "group_atom_data"], [4, 3, 1, "", "hassame"], [4, 3, 1, "", "index"], [4, 3, 1, "", "insert"], [4, 3, 1, "", "iter"], [4, 2, 1, "", "lasto"], [4, 2, 1, "", "mass"], [4, 3, 1, "", "maxR"], [4, 2, 1, "", "no"], [4, 2, 1, "", "nspecie"], [4, 3, 1, "", "orbital"], [4, 2, 1, "", "orbitals"], [4, 3, 1, "", "prepend"], [4, 2, 1, "", "q0"], [4, 3, 1, "", "reduce"], [4, 3, 1, "", "remove"], [4, 3, 1, "", "reorder"], [4, 3, 1, "", "repeat"], [4, 3, 1, "", "replace"], [4, 3, 1, "", "replace_atom"], [4, 3, 1, "", "reverse"], [4, 3, 1, "", "scale"], [4, 2, 1, "", "specie"], [4, 3, 1, "", "specie_index"], [4, 3, 1, "", "sub"], [4, 3, 1, "", "swap"], [4, 3, 1, "", "swap_atom"], [4, 3, 1, "", "tile"]], "sisl.GTOrbital": [[5, 2, 1, "", "R"], [5, 3, 1, "", "__init__"], [5, 2, 1, "", "alpha"], [5, 2, 1, "", "coeff"], [5, 3, 1, "", "copy"], [5, 3, 1, "", "equal"], [5, 2, 1, "", "l"], [5, 2, 1, "", "m"], [5, 2, 1, "", "n"], [5, 3, 1, "", "name"], [5, 3, 1, "", "psi"], [5, 3, 1, "", "psi_spher"], [5, 2, 1, "", "q0"], [5, 3, 1, "", "radial"], [5, 3, 1, "", "scale"], [5, 3, 1, "", "spher"], [5, 2, 1, "", "tag"], [5, 3, 1, "", "toGrid"], [5, 3, 1, "", "toSphere"]], "sisl.Geometry": [[6, 3, 1, "", "Rij"], [6, 3, 1, "", "__init__"], [6, 3, 1, "", "a2isc"], [6, 3, 1, "", "a2o"], [6, 3, 1, "", "a2sc"], [6, 3, 1, "", "a2transpose"], [6, 3, 1, "", "add"], [6, 3, 1, "", "add_vacuum"], [6, 3, 1, "", "angle"], [6, 3, 1, "", "append"], [6, 3, 1, "", "apply"], [6, 3, 1, "", "area"], [6, 3, 1, "", "as_primary"], [6, 3, 1, "", "asc2uc"], [6, 2, 1, "", "atoms"], [6, 3, 1, "", "attach"], [6, 3, 1, "", "auc2sc"], [6, 3, 1, "", "axyz"], [6, 3, 1, "", "bond_correct"], [6, 2, 1, "", "cell"], [6, 3, 1, "", "center"], [6, 3, 1, "", "close"], [6, 3, 1, "", "close_sc"], [6, 3, 1, "", "copy"], [6, 3, 1, "", "distance"], [6, 3, 1, "", "equal"], [6, 2, 1, "", "firsto"], [6, 2, 1, "", "fxyz"], [6, 3, 1, "", "iR"], [6, 2, 1, "", "icell"], [6, 3, 1, "", "insert"], [6, 3, 1, "", "is_orthogonal"], [6, 2, 1, "", "isc_off"], [6, 3, 1, "", "iter"], [6, 3, 1, "", "iter_block"], [6, 3, 1, "", "iter_block_rand"], [6, 3, 1, "", "iter_block_shape"], [6, 3, 1, "", "iter_orbitals"], [6, 3, 1, "", "iter_species"], [6, 2, 1, "", "lasto"], [6, 2, 1, "", "length"], [6, 2, 1, "", "mass"], [6, 3, 1, "", "maxR"], [6, 3, 1, "", "mirror"], [6, 3, 1, "", "move"], [6, 2, 1, "", "n_s"], [6, 2, 1, "", "na"], [6, 2, 1, "", "na_s"], [6, 2, 1, "", "names"], [6, 4, 1, "", "new"], [6, 2, 1, "", "no"], [6, 2, 1, "", "no_s"], [6, 2, 1, "", "nsc"], [6, 3, 1, "", "o2a"], [6, 3, 1, "", "o2isc"], [6, 3, 1, "", "o2sc"], [6, 3, 1, "", "o2transpose"], [6, 3, 1, "", "oRij"], [6, 3, 1, "", "optimize_nsc"], [6, 2, 1, "", "orbitals"], [6, 2, 1, "", "origin"], [6, 2, 1, "", "origo"], [6, 3, 1, "", "orij"], [6, 3, 1, "", "osc2uc"], [6, 3, 1, "", "ouc2sc"], [6, 3, 1, "", "overlap"], [6, 4, 1, "", "plot"], [6, 3, 1, "", "prepend"], [6, 2, 1, "", "q0"], [6, 2, 1, "", "rcell"], [6, 3, 1, "", "read"], [6, 3, 1, "", "reduce"], [6, 3, 1, "", "remove"], [6, 3, 1, "", "remove_orbital"], [6, 3, 1, "", "reorder"], [6, 3, 1, "", "repeat"], [6, 3, 1, "", "replace"], [6, 3, 1, "", "reverse"], [6, 3, 1, "", "rij"], [6, 3, 1, "", "rotate"], [6, 3, 1, "", "rotate_miller"], [6, 3, 1, "", "sc2uc"], [6, 3, 1, "", "sc_index"], [6, 2, 1, "", "sc_off"], [6, 3, 1, "", "scale"], [6, 3, 1, "", "set_nsc"], [6, 3, 1, "", "set_sc"], [6, 3, 1, "", "set_supercell"], [6, 3, 1, "", "sort"], [6, 3, 1, "", "sparserij"], [6, 3, 1, "", "sub"], [6, 3, 1, "", "sub_orbital"], [6, 3, 1, "", "swap"], [6, 3, 1, "", "swapaxes"], [6, 3, 1, "", "tile"], [6, 4, 1, "", "to"], [6, 3, 1, "", "translate"], [6, 3, 1, "", "translate2uc"], [6, 3, 1, "", "uc2sc"], [6, 3, 1, "", "unrepeat"], [6, 3, 1, "", "untile"], [6, 2, 1, "", "volume"], [6, 3, 1, "", "within"], [6, 3, 1, "", "within_inf"], [6, 3, 1, "", "within_sc"], [6, 3, 1, "", "write"]], "sisl.Grid": [[7, 4, 1, "", "DIRICHLET"], [7, 4, 1, "", "NEUMANN"], [7, 4, 1, "", "OPEN"], [7, 4, 1, "", "PERIODIC"], [7, 3, 1, "", "__init__"], [7, 3, 1, "", "add_vacuum"], [7, 3, 1, "", "append"], [7, 3, 1, "", "apply"], [7, 3, 1, "", "area"], [7, 3, 1, "", "average"], [7, 2, 1, "", "cell"], [7, 3, 1, "", "copy"], [7, 3, 1, "", "cross_section"], [7, 2, 1, "", "dcell"], [7, 2, 1, "", "dkind"], [7, 2, 1, "", "dtype"], [7, 2, 1, "", "dvolume"], [7, 3, 1, "", "fill"], [7, 2, 1, "", "icell"], [7, 3, 1, "", "index"], [7, 3, 1, "", "index2xyz"], [7, 3, 1, "", "index_fold"], [7, 3, 1, "", "index_truncate"], [7, 3, 1, "", "interp"], [7, 3, 1, "", "is_orthogonal"], [7, 2, 1, "", "isc_off"], [7, 3, 1, "", "isosurface"], [7, 2, 1, "", "length"], [7, 3, 1, "", "mean"], [7, 3, 1, "", "mgrid"], [7, 2, 1, "", "n_s"], [7, 2, 1, "", "nsc"], [7, 2, 1, "", "origin"], [7, 2, 1, "", "origo"], [7, 4, 1, "", "plot"], [7, 3, 1, "", "pyamg_boundary_condition"], [7, 3, 1, "", "pyamg_fix"], [7, 3, 1, "", "pyamg_index"], [7, 3, 1, "", "pyamg_source"], [7, 2, 1, "", "rcell"], [7, 3, 1, "", "read"], [7, 3, 1, "", "remove"], [7, 3, 1, "", "remove_part"], [7, 3, 1, "", "sc_index"], [7, 2, 1, "", "sc_off"], [7, 3, 1, "", "set_bc"], [7, 3, 1, "", "set_boundary"], [7, 3, 1, "", "set_boundary_condition"], [7, 3, 1, "", "set_geometry"], [7, 3, 1, "", "set_grid"], [7, 3, 1, "", "set_nsc"], [7, 3, 1, "", "set_sc"], [7, 3, 1, "", "set_supercell"], [7, 2, 1, "", "shape"], [7, 2, 1, "", "size"], [7, 3, 1, "", "smooth"], [7, 3, 1, "", "sub"], [7, 3, 1, "", "sub_part"], [7, 3, 1, "", "sum"], [7, 3, 1, "", "swapaxes"], [7, 3, 1, "", "tile"], [7, 3, 1, "", "topyamg"], [7, 2, 1, "", "volume"], [7, 3, 1, "", "write"]], "sisl.HydrogenicOrbital": [[8, 2, 1, "", "P"], [8, 2, 1, "", "R"], [8, 3, 1, "", "__init__"], [8, 3, 1, "", "copy"], [8, 3, 1, "", "equal"], [8, 2, 1, "", "l"], [8, 2, 1, "", "m"], [8, 2, 1, "", "n"], [8, 3, 1, "", "name"], [8, 2, 1, "", "orb"], [8, 3, 1, "", "psi"], [8, 3, 1, "", "psi_spher"], [8, 2, 1, "", "q0"], [8, 3, 1, "", "radial"], [8, 3, 1, "", "scale"], [8, 3, 1, "", "set_radial"], [8, 3, 1, "", "spher"], [8, 2, 1, "", "tag"], [8, 3, 1, "", "toGrid"], [8, 3, 1, "", "toSphere"], [8, 2, 1, "", "zeta"]], "sisl.Orbital": [[9, 2, 1, "", "R"], [9, 3, 1, "", "__init__"], [9, 3, 1, "", "copy"], [9, 3, 1, "", "equal"], [9, 3, 1, "", "name"], [9, 3, 1, "", "psi"], [9, 2, 1, "", "q0"], [9, 3, 1, "", "scale"], [9, 2, 1, "", "tag"], [9, 3, 1, "", "toGrid"], [9, 3, 1, "", "toSphere"]], "sisl.PeriodicTable": [[10, 3, 1, "", "Z"], [10, 3, 1, "", "Z_int"], [10, 3, 1, "", "Z_label"], [10, 3, 1, "", "Z_short"], [10, 3, 1, "", "atomic_mass"], [10, 3, 1, "", "radii"], [10, 3, 1, "", "radius"]], "sisl.Quaternion": [[11, 3, 1, "", "__init__"], [11, 2, 1, "", "angle"], [11, 3, 1, "", "conj"], [11, 3, 1, "", "copy"], [11, 2, 1, "", "degree"], [11, 3, 1, "", "norm"], [11, 2, 1, "", "radian"], [11, 3, 1, "", "rotate"]], "sisl.STOrbital": [[12, 2, 1, "", "R"], [12, 3, 1, "", "__init__"], [12, 2, 1, "", "alpha"], [12, 2, 1, "", "coeff"], [12, 3, 1, "", "copy"], [12, 3, 1, "", "equal"], [12, 2, 1, "", "l"], [12, 2, 1, "", "m"], [12, 2, 1, "", "n"], [12, 3, 1, "", "name"], [12, 3, 1, "", "psi"], [12, 3, 1, "", "psi_spher"], [12, 2, 1, "", "q0"], [12, 3, 1, "", "radial"], [12, 3, 1, "", "scale"], [12, 3, 1, "", "spher"], [12, 2, 1, "", "tag"], [12, 3, 1, "", "toGrid"], [12, 3, 1, "", "toSphere"]], "sisl.SparseAtom": [[13, 3, 1, "", "Rij"], [13, 3, 1, "", "__init__"], [13, 3, 1, "", "construct"], [13, 3, 1, "", "copy"], [13, 3, 1, "", "create_construct"], [13, 2, 1, "", "dim"], [13, 2, 1, "", "dkind"], [13, 2, 1, "", "dtype"], [13, 3, 1, "", "edges"], [13, 3, 1, "", "eliminate_zeros"], [13, 3, 1, "", "empty"], [13, 3, 1, "", "finalize"], [13, 2, 1, "", "finalized"], [13, 3, 1, "", "fromsp"], [13, 2, 1, "", "geometry"], [13, 3, 1, "", "iter_nnz"], [13, 2, 1, "", "nnz"], [13, 3, 1, "", "nonzero"], [13, 3, 1, "", "remove"], [13, 3, 1, "", "repeat"], [13, 3, 1, "", "reset"], [13, 3, 1, "", "rij"], [13, 3, 1, "", "set_nsc"], [13, 2, 1, "", "shape"], [13, 3, 1, "", "spalign"], [13, 3, 1, "", "spsame"], [13, 3, 1, "", "sub"], [13, 3, 1, "", "swap"], [13, 3, 1, "", "tile"], [13, 3, 1, "", "tocsr"], [13, 3, 1, "", "transpose"], [13, 3, 1, "", "unrepeat"], [13, 3, 1, "", "untile"]], "sisl.SparseCSR": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "align"], [14, 4, 1, "", "col"], [14, 3, 1, "", "copy"], [14, 2, 1, "", "data"], [14, 3, 1, "", "delete_columns"], [14, 3, 1, "", "diagonal"], [14, 3, 1, "", "diags"], [14, 2, 1, "", "dim"], [14, 2, 1, "", "dkind"], [14, 2, 1, "", "dtype"], [14, 3, 1, "", "edges"], [14, 3, 1, "", "eliminate_zeros"], [14, 3, 1, "", "empty"], [14, 3, 1, "", "finalize"], [14, 2, 1, "", "finalized"], [14, 3, 1, "", "fromsp"], [14, 3, 1, "", "iter_nnz"], [14, 4, 1, "", "ncol"], [14, 2, 1, "", "nnz"], [14, 3, 1, "", "nonzero"], [14, 4, 1, "", "ptr"], [14, 3, 1, "", "remove"], [14, 3, 1, "", "scale_columns"], [14, 2, 1, "", "shape"], [14, 3, 1, "", "sparsity_union"], [14, 3, 1, "", "spsame"], [14, 3, 1, "", "sub"], [14, 3, 1, "", "tocsr"], [14, 3, 1, "", "todense"], [14, 3, 1, "", "transform"], [14, 3, 1, "", "translate_columns"], [14, 3, 1, "", "transpose"]], "sisl.SparseOrbital": [[15, 3, 1, "", "Rij"], [15, 3, 1, "", "__init__"], [15, 3, 1, "", "add"], [15, 3, 1, "", "append"], [15, 3, 1, "", "construct"], [15, 3, 1, "", "copy"], [15, 3, 1, "", "create_construct"], [15, 2, 1, "", "dim"], [15, 2, 1, "", "dkind"], [15, 2, 1, "", "dtype"], [15, 3, 1, "", "edges"], [15, 3, 1, "", "eliminate_zeros"], [15, 3, 1, "", "empty"], [15, 3, 1, "", "finalize"], [15, 2, 1, "", "finalized"], [15, 3, 1, "", "fromsp"], [15, 2, 1, "", "geometry"], [15, 3, 1, "", "iter_nnz"], [15, 2, 1, "", "nnz"], [15, 3, 1, "", "nonzero"], [15, 3, 1, "", "prepend"], [15, 3, 1, "", "remove"], [15, 3, 1, "", "remove_orbital"], [15, 3, 1, "", "repeat"], [15, 3, 1, "", "replace"], [15, 3, 1, "", "reset"], [15, 3, 1, "", "rij"], [15, 3, 1, "", "set_nsc"], [15, 2, 1, "", "shape"], [15, 3, 1, "", "spalign"], [15, 3, 1, "", "spsame"], [15, 3, 1, "", "sub"], [15, 3, 1, "", "sub_orbital"], [15, 3, 1, "", "swap"], [15, 3, 1, "", "tile"], [15, 3, 1, "", "toSparseAtom"], [15, 3, 1, "", "tocsr"], [15, 3, 1, "", "transpose"], [15, 3, 1, "", "unrepeat"], [15, 3, 1, "", "untile"]], "sisl.SphericalOrbital": [[16, 2, 1, "", "R"], [16, 3, 1, "", "__init__"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "equal"], [16, 4, 1, "", "f"], [16, 2, 1, "", "l"], [16, 3, 1, "", "name"], [16, 3, 1, "", "psi"], [16, 3, 1, "", "psi_spher"], [16, 2, 1, "", "q0"], [16, 3, 1, "", "radial"], [16, 3, 1, "", "scale"], [16, 3, 1, "", "set_radial"], [16, 3, 1, "", "spher"], [16, 2, 1, "", "tag"], [16, 3, 1, "", "toAtomicOrbital"], [16, 3, 1, "", "toGrid"], [16, 3, 1, "", "toSphere"]], "sisl.SuperCell": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "add"], [17, 3, 1, "", "add_vacuum"], [17, 3, 1, "", "angle"], [17, 3, 1, "", "append"], [17, 3, 1, "", "area"], [17, 4, 1, "", "cell"], [17, 3, 1, "", "cell2length"], [17, 3, 1, "", "center"], [17, 3, 1, "", "copy"], [17, 3, 1, "", "equal"], [17, 3, 1, "", "fit"], [17, 2, 1, "", "icell"], [17, 3, 1, "", "is_cartesian"], [17, 3, 1, "", "is_orthogonal"], [17, 2, 1, "", "isc_off"], [17, 2, 1, "", "length"], [17, 3, 1, "", "move"], [17, 4, 1, "", "n_s"], [17, 4, 1, "", "nsc"], [17, 3, 1, "", "offset"], [17, 2, 1, "", "origin"], [17, 3, 1, "", "parallel"], [17, 3, 1, "", "parameters"], [17, 3, 1, "", "plane"], [17, 3, 1, "", "prepend"], [17, 2, 1, "", "rcell"], [17, 3, 1, "", "read"], [17, 3, 1, "", "repeat"], [17, 3, 1, "", "rotate"], [17, 3, 1, "", "sc_index"], [17, 2, 1, "", "sc_off"], [17, 3, 1, "", "scale"], [17, 3, 1, "", "set_nsc"], [17, 3, 1, "", "swapaxes"], [17, 3, 1, "", "tile"], [17, 3, 1, "", "toCuboid"], [17, 3, 1, "", "tocell"], [17, 3, 1, "", "translate"], [17, 3, 1, "", "unrepeat"], [17, 3, 1, "", "untile"], [17, 3, 1, "", "vertices"], [17, 2, 1, "", "volume"]], "sisl.constant": [[18, 5, 1, "", "G"], [19, 5, 1, "", "G0"], [20, 1, 1, "", "PhysicalConstant"], [21, 5, 1, "", "c"], [22, 5, 1, "", "h"], [23, 5, 1, "", "hbar"], [24, 5, 1, "", "m_e"], [25, 5, 1, "", "m_p"], [26, 5, 1, "", "q"]], "sisl.constant.PhysicalConstant": [[20, 3, 1, "", "__call__"], [20, 3, 1, "", "__init__"], [20, 3, 1, "", "as_integer_ratio"], [20, 3, 1, "", "conjugate"], [20, 3, 1, "", "fromhex"], [20, 3, 1, "", "hex"], [20, 4, 1, "", "imag"], [20, 3, 1, "", "is_integer"], [20, 4, 1, "", "real"], [20, 2, 1, "", "unit"]], "sisl.geom": [[27, 6, 1, "", "agnr"], [28, 6, 1, "", "bcc"], [29, 6, 1, "", "bcc_slab"], [30, 6, 1, "", "bilayer"], [31, 6, 1, "", "diamond"], [32, 6, 1, "", "fcc"], [33, 6, 1, "", "fcc_slab"], [34, 6, 1, "", "graphene"], [35, 6, 1, "", "graphene_nanoribbon"], [36, 6, 1, "", "hcp"], [37, 6, 1, "", "honeycomb"], [38, 6, 1, "", "nanoribbon"], [39, 6, 1, "", "nanotube"], [40, 6, 1, "", "rocksalt"], [41, 6, 1, "", "rocksalt_slab"], [42, 6, 1, "", "sc"], [43, 6, 1, "", "zgnr"]], "sisl.io": [[135, 1, 1, "", "BaseSile"], [136, 1, 1, "", "Sile"], [137, 1, 1, "", "SileBin"], [138, 1, 1, "", "SileCDF"], [139, 7, 1, "", "SileError"], [140, 7, 1, "", "SileInfo"], [141, 7, 1, "", "SileWarning"], [142, 6, 1, "", "add_sile"], [143, 1, 1, "", "axsfSile"], [133, 0, 0, "-", "bigdft"], [147, 1, 1, "", "cubeSile"], [134, 0, 0, "-", "fhiaims"], [151, 6, 1, "", "get_sile"], [152, 6, 1, "", "get_sile_class"], [153, 6, 1, "", "get_siles"], [229, 0, 0, "-", "gulp"], [158, 1, 1, "", "moldenSile"], [231, 0, 0, "-", "openmx"], [232, 0, 0, "-", "orca"], [167, 1, 1, "", "pdbSile"], [233, 0, 0, "-", "scaleup"], [234, 0, 0, "-", "siesta"], [201, 1, 1, "", "tableSile"], [235, 0, 0, "-", "tbtrans"], [236, 0, 0, "-", "vasp"], [237, 0, 0, "-", "wannier90"], [226, 1, 1, "", "xsfSile"], [227, 1, 1, "", "xyzSile"]], "sisl.io.BaseSile": [[135, 2, 1, "", "base_file"], [135, 3, 1, "", "dir_file"], [135, 2, 1, "", "file"], [135, 3, 1, "", "read"], [135, 3, 1, "", "to_json"], [135, 3, 1, "", "write"]], "sisl.io.Sile": [[136, 3, 1, "", "__init__"], [136, 2, 1, "", "base_file"], [136, 3, 1, "", "close"], [136, 3, 1, "", "dir_file"], [136, 2, 1, "", "file"], [136, 3, 1, "", "read"], [136, 3, 1, "", "to_json"], [136, 3, 1, "", "write"]], "sisl.io.SileBin": [[137, 3, 1, "", "__init__"], [137, 2, 1, "", "base_file"], [137, 3, 1, "", "dir_file"], [137, 2, 1, "", "file"], [137, 3, 1, "", "read"], [137, 3, 1, "", "to_json"], [137, 3, 1, "", "write"]], "sisl.io.SileCDF": [[138, 3, 1, "", "__init__"], [138, 2, 1, "", "base_file"], [138, 3, 1, "", "close"], [138, 3, 1, "", "dir_file"], [138, 2, 1, "", "file"], [138, 3, 1, "", "iter"], [138, 3, 1, "", "read"], [138, 3, 1, "", "to_json"], [138, 3, 1, "", "write"]], "sisl.io.SileError": [[139, 3, 1, "", "__init__"], [139, 4, 1, "", "args"], [139, 4, 1, "", "characters_written"], [139, 4, 1, "", "errno"], [139, 4, 1, "", "filename"], [139, 4, 1, "", "filename2"], [139, 4, 1, "", "strerror"], [139, 3, 1, "", "with_traceback"]], "sisl.io.SileInfo": [[140, 3, 1, "", "__init__"], [140, 4, 1, "", "args"], [140, 3, 1, "", "with_traceback"]], "sisl.io.SileWarning": [[141, 3, 1, "", "__init__"], [141, 4, 1, "", "args"], [141, 3, 1, "", "with_traceback"]], "sisl.io.axsfSile": [[143, 3, 1, "", "__init__"], [143, 2, 1, "", "base_file"], [143, 3, 1, "", "close"], [143, 3, 1, "", "dir_file"], [143, 2, 1, "", "file"], [143, 4, 1, "", "plot"], [143, 3, 1, "", "read"], [143, 3, 1, "", "read_geometry"], [143, 3, 1, "", "to_json"], [143, 3, 1, "", "write"], [143, 3, 1, "", "write_geometry"], [143, 4, 1, "", "write_grid"], [143, 3, 1, "", "write_supercell"]], "sisl.io.bigdft": [[144, 1, 1, "", "SileBigDFT"], [145, 1, 1, "", "SileBinBigDFT"], [146, 1, 1, "", "asciiSileBigDFT"]], "sisl.io.bigdft.SileBigDFT": [[144, 3, 1, "", "__init__"], [144, 2, 1, "", "base_file"], [144, 3, 1, "", "close"], [144, 3, 1, "", "dir_file"], [144, 2, 1, "", "file"], [144, 3, 1, "", "read"], [144, 3, 1, "", "to_json"], [144, 3, 1, "", "write"]], "sisl.io.bigdft.SileBinBigDFT": [[145, 3, 1, "", "__init__"], [145, 2, 1, "", "base_file"], [145, 3, 1, "", "dir_file"], [145, 2, 1, "", "file"], [145, 3, 1, "", "read"], [145, 3, 1, "", "to_json"], [145, 3, 1, "", "write"]], "sisl.io.bigdft.asciiSileBigDFT": [[146, 3, 1, "", "__init__"], [146, 2, 1, "", "base_file"], [146, 3, 1, "", "close"], [146, 3, 1, "", "dir_file"], [146, 2, 1, "", "file"], [146, 4, 1, "", "plot"], [146, 3, 1, "", "read"], [146, 3, 1, "", "read_geometry"], [146, 3, 1, "", "to_json"], [146, 3, 1, "", "write"], [146, 3, 1, "", "write_geometry"]], "sisl.io.cubeSile": [[147, 3, 1, "", "__init__"], [147, 2, 1, "", "base_file"], [147, 3, 1, "", "close"], [147, 3, 1, "", "dir_file"], [147, 2, 1, "", "file"], [147, 4, 1, "", "plot"], [147, 3, 1, "", "read"], [147, 3, 1, "", "read_geometry"], [147, 3, 1, "", "read_grid"], [147, 3, 1, "", "read_supercell"], [147, 3, 1, "", "to_json"], [147, 3, 1, "", "write"], [147, 3, 1, "", "write_geometry"], [147, 3, 1, "", "write_grid"], [147, 3, 1, "", "write_supercell"]], "sisl.io.fhiaims": [[148, 1, 1, "", "SileBinFHIaims"], [149, 1, 1, "", "SileFHIaims"], [150, 1, 1, "", "inSileFHIaims"]], "sisl.io.fhiaims.SileBinFHIaims": [[148, 3, 1, "", "__init__"], [148, 2, 1, "", "base_file"], [148, 3, 1, "", "dir_file"], [148, 2, 1, "", "file"], [148, 3, 1, "", "read"], [148, 3, 1, "", "to_json"], [148, 3, 1, "", "write"]], "sisl.io.fhiaims.SileFHIaims": [[149, 3, 1, "", "__init__"], [149, 2, 1, "", "base_file"], [149, 3, 1, "", "close"], [149, 3, 1, "", "dir_file"], [149, 2, 1, "", "file"], [149, 3, 1, "", "read"], [149, 3, 1, "", "to_json"], [149, 3, 1, "", "write"]], "sisl.io.fhiaims.inSileFHIaims": [[150, 3, 1, "", "__init__"], [150, 2, 1, "", "base_file"], [150, 3, 1, "", "close"], [150, 3, 1, "", "dir_file"], [150, 2, 1, "", "file"], [150, 4, 1, "", "plot"], [150, 3, 1, "", "read"], [150, 3, 1, "", "read_geometry"], [150, 3, 1, "", "read_moment"], [150, 3, 1, "", "read_supercell"], [150, 3, 1, "", "read_velocity"], [150, 3, 1, "", "to_json"], [150, 3, 1, "", "write"], [150, 3, 1, "", "write_geometry"], [150, 3, 1, "", "write_supercell"]], "sisl.io.gulp": [[154, 1, 1, "", "SileBinGULP"], [155, 1, 1, "", "SileGULP"], [156, 1, 1, "", "fcSileGULP"], [157, 1, 1, "", "gotSileGULP"]], "sisl.io.gulp.SileBinGULP": [[154, 3, 1, "", "__init__"], [154, 2, 1, "", "base_file"], [154, 3, 1, "", "dir_file"], [154, 2, 1, "", "file"], [154, 3, 1, "", "read"], [154, 3, 1, "", "to_json"], [154, 3, 1, "", "write"]], "sisl.io.gulp.SileGULP": [[155, 3, 1, "", "__init__"], [155, 2, 1, "", "base_file"], [155, 3, 1, "", "close"], [155, 3, 1, "", "dir_file"], [155, 2, 1, "", "file"], [155, 3, 1, "", "read"], [155, 3, 1, "", "to_json"], [155, 3, 1, "", "write"]], "sisl.io.gulp.fcSileGULP": [[156, 3, 1, "", "__init__"], [156, 2, 1, "", "base_file"], [156, 3, 1, "", "close"], [156, 3, 1, "", "dir_file"], [156, 2, 1, "", "file"], [156, 3, 1, "", "read"], [156, 3, 1, "", "read_force_constant"], [156, 3, 1, "", "to_json"], [156, 3, 1, "", "write"]], "sisl.io.gulp.gotSileGULP": [[157, 3, 1, "", "__init__"], [157, 2, 1, "", "base_file"], [157, 3, 1, "", "close"], [157, 3, 1, "", "dir_file"], [157, 2, 1, "", "file"], [157, 4, 1, "", "plot"], [157, 3, 1, "", "read"], [157, 3, 1, "", "read_dynamical_matrix"], [157, 3, 1, "", "read_geometry"], [157, 3, 1, "", "read_super"], [157, 3, 1, "", "read_supercell"], [157, 3, 1, "", "set_dyn_key"], [157, 3, 1, "", "set_dynamical_matrix_key"], [157, 3, 1, "", "set_geometry_key"], [157, 3, 1, "", "set_key"], [157, 3, 1, "", "set_supercell_key"], [157, 3, 1, "", "to_json"], [157, 3, 1, "", "write"]], "sisl.io.moldenSile": [[158, 3, 1, "", "__init__"], [158, 2, 1, "", "base_file"], [158, 3, 1, "", "close"], [158, 3, 1, "", "dir_file"], [158, 2, 1, "", "file"], [158, 3, 1, "", "read"], [158, 3, 1, "", "to_json"], [158, 3, 1, "", "write"], [158, 3, 1, "", "write_geometry"], [158, 3, 1, "", "write_supercell"]], "sisl.io.openmx": [[159, 1, 1, "", "SileBinOpenMX"], [160, 1, 1, "", "SileCDFOpenMX"], [161, 1, 1, "", "SileOpenMX"], [162, 1, 1, "", "omxSileOpenMX"]], "sisl.io.openmx.SileBinOpenMX": [[159, 3, 1, "", "__init__"], [159, 2, 1, "", "base_file"], [159, 3, 1, "", "dir_file"], [159, 2, 1, "", "file"], [159, 3, 1, "", "read"], [159, 3, 1, "", "to_json"], [159, 3, 1, "", "write"]], "sisl.io.openmx.SileCDFOpenMX": [[160, 3, 1, "", "__init__"], [160, 2, 1, "", "base_file"], [160, 3, 1, "", "close"], [160, 3, 1, "", "dir_file"], [160, 2, 1, "", "file"], [160, 3, 1, "", "iter"], [160, 3, 1, "", "read"], [160, 3, 1, "", "to_json"], [160, 3, 1, "", "write"]], "sisl.io.openmx.SileOpenMX": [[161, 3, 1, "", "__init__"], [161, 2, 1, "", "base_file"], [161, 3, 1, "", "close"], [161, 3, 1, "", "dir_file"], [161, 2, 1, "", "file"], [161, 3, 1, "", "read"], [161, 3, 1, "", "to_json"], [161, 3, 1, "", "write"]], "sisl.io.openmx.omxSileOpenMX": [[162, 3, 1, "", "__init__"], [162, 2, 1, "", "base_file"], [162, 3, 1, "", "close"], [162, 3, 1, "", "dir_file"], [162, 2, 1, "", "file"], [162, 3, 1, "", "get"], [162, 4, 1, "", "plot"], [162, 3, 1, "", "read"], [162, 3, 1, "", "read_basis"], [162, 3, 1, "", "read_geometry"], [162, 3, 1, "", "read_supercell"], [162, 3, 1, "", "to_json"], [162, 3, 1, "", "type"], [162, 3, 1, "", "write"]], "sisl.io.orca": [[163, 1, 1, "", "SileBinORCA"], [164, 1, 1, "", "SileORCA"], [165, 1, 1, "", "outputSileORCA"], [166, 1, 1, "", "txtSileORCA"]], "sisl.io.orca.SileBinORCA": [[163, 3, 1, "", "__init__"], [163, 2, 1, "", "base_file"], [163, 3, 1, "", "dir_file"], [163, 2, 1, "", "file"], [163, 3, 1, "", "read"], [163, 3, 1, "", "to_json"], [163, 3, 1, "", "write"]], "sisl.io.orca.SileORCA": [[164, 3, 1, "", "__init__"], [164, 2, 1, "", "base_file"], [164, 3, 1, "", "close"], [164, 3, 1, "", "dir_file"], [164, 2, 1, "", "file"], [164, 3, 1, "", "read"], [164, 3, 1, "", "to_json"], [164, 3, 1, "", "write"]], "sisl.io.orca.outputSileORCA": [[165, 3, 1, "", "__init__"], [165, 2, 1, "", "base_file"], [165, 3, 1, "", "close"], [165, 3, 1, "", "completed"], [165, 3, 1, "", "dir_file"], [165, 2, 1, "", "file"], [165, 2, 1, "", "na"], [165, 2, 1, "", "no"], [165, 3, 1, "", "read"], [165, 3, 1, "", "read_charge"], [165, 3, 1, "", "read_electrons"], [165, 3, 1, "", "read_energy"], [165, 3, 1, "", "read_orbital_energies"], [165, 3, 1, "", "to_json"], [165, 3, 1, "", "write"]], "sisl.io.orca.txtSileORCA": [[166, 3, 1, "", "__init__"], [166, 2, 1, "", "base_file"], [166, 3, 1, "", "close"], [166, 3, 1, "", "dir_file"], [166, 2, 1, "", "file"], [166, 2, 1, "", "na"], [166, 2, 1, "", "no"], [166, 4, 1, "", "plot"], [166, 3, 1, "", "read"], [166, 3, 1, "", "read_electrons"], [166, 3, 1, "", "read_energy"], [166, 3, 1, "", "read_geometry"], [166, 3, 1, "", "to_json"], [166, 3, 1, "", "write"]], "sisl.io.pdbSile": [[167, 3, 1, "", "__init__"], [167, 2, 1, "", "base_file"], [167, 3, 1, "", "close"], [167, 3, 1, "", "dir_file"], [167, 2, 1, "", "file"], [167, 4, 1, "", "plot"], [167, 3, 1, "", "read"], [167, 3, 1, "", "read_geometry"], [167, 3, 1, "", "read_supercell"], [167, 3, 1, "", "to_json"], [167, 3, 1, "", "write"], [167, 3, 1, "", "write_geometry"], [167, 3, 1, "", "write_supercell"]], "sisl.io.scaleup": [[168, 1, 1, "", "SileBinScaleUp"], [169, 1, 1, "", "SileScaleUp"], [170, 1, 1, "", "orboccSileScaleUp"], [171, 1, 1, "", "refSileScaleUp"], [172, 1, 1, "", "rhamSileScaleUp"]], "sisl.io.scaleup.SileBinScaleUp": [[168, 3, 1, "", "__init__"], [168, 2, 1, "", "base_file"], [168, 3, 1, "", "dir_file"], [168, 2, 1, "", "file"], [168, 3, 1, "", "read"], [168, 3, 1, "", "to_json"], [168, 3, 1, "", "write"]], "sisl.io.scaleup.SileScaleUp": [[169, 3, 1, "", "__init__"], [169, 2, 1, "", "base_file"], [169, 3, 1, "", "close"], [169, 3, 1, "", "dir_file"], [169, 2, 1, "", "file"], [169, 3, 1, "", "read"], [169, 3, 1, "", "to_json"], [169, 3, 1, "", "write"]], "sisl.io.scaleup.orboccSileScaleUp": [[170, 3, 1, "", "__init__"], [170, 2, 1, "", "base_file"], [170, 3, 1, "", "close"], [170, 3, 1, "", "dir_file"], [170, 2, 1, "", "file"], [170, 3, 1, "", "read"], [170, 3, 1, "", "read_atom"], [170, 3, 1, "", "to_json"], [170, 3, 1, "", "write"]], "sisl.io.scaleup.refSileScaleUp": [[171, 3, 1, "", "__init__"], [171, 2, 1, "", "base_file"], [171, 3, 1, "", "close"], [171, 3, 1, "", "dir_file"], [171, 2, 1, "", "file"], [171, 4, 1, "", "plot"], [171, 3, 1, "", "read"], [171, 3, 1, "", "read_geometry"], [171, 3, 1, "", "read_supercell"], [171, 3, 1, "", "to_json"], [171, 3, 1, "", "write"], [171, 3, 1, "", "write_geometry"]], "sisl.io.scaleup.rhamSileScaleUp": [[172, 3, 1, "", "__init__"], [172, 2, 1, "", "base_file"], [172, 3, 1, "", "close"], [172, 3, 1, "", "dir_file"], [172, 2, 1, "", "file"], [172, 4, 1, "", "plot"], [172, 3, 1, "", "read"], [172, 3, 1, "", "read_hamiltonian"], [172, 3, 1, "", "to_json"], [172, 3, 1, "", "write"]], "sisl.io.siesta": [[173, 1, 1, "", "SileBinSiesta"], [174, 1, 1, "", "SileCDFSiesta"], [175, 1, 1, "", "SileSiesta"], [176, 1, 1, "", "bandsSileSiesta"], [177, 1, 1, "", "dmSileSiesta"], [178, 1, 1, "", "eigSileSiesta"], [179, 1, 1, "", "faSileSiesta"], [180, 1, 1, "", "fcSileSiesta"], [181, 1, 1, "", "fdfSileSiesta"], [182, 1, 1, "", "gridSileSiesta"], [183, 1, 1, "", "gridncSileSiesta"], [184, 1, 1, "", "hsxSileSiesta"], [185, 1, 1, "", "ionncSileSiesta"], [186, 1, 1, "", "ionxmlSileSiesta"], [187, 1, 1, "", "kpSileSiesta"], [188, 1, 1, "", "ncSileSiesta"], [189, 1, 1, "", "onlysSileSiesta"], [190, 1, 1, "", "orbindxSileSiesta"], [191, 1, 1, "", "outSileSiesta"], [192, 1, 1, "", "pdosSileSiesta"], [193, 1, 1, "", "rkpSileSiesta"], [194, 1, 1, "", "structSileSiesta"], [195, 1, 1, "", "tsdeSileSiesta"], [196, 1, 1, "", "tsgfSileSiesta"], [197, 1, 1, "", "tshsSileSiesta"], [198, 1, 1, "", "tsvncSileSiesta"], [199, 1, 1, "", "wfsxSileSiesta"], [200, 1, 1, "", "xvSileSiesta"]], "sisl.io.siesta.SileBinSiesta": [[173, 3, 1, "", "__init__"], [173, 2, 1, "", "base_file"], [173, 3, 1, "", "dir_file"], [173, 2, 1, "", "file"], [173, 3, 1, "", "read"], [173, 3, 1, "", "to_json"], [173, 3, 1, "", "write"]], "sisl.io.siesta.SileCDFSiesta": [[174, 3, 1, "", "__init__"], [174, 2, 1, "", "base_file"], [174, 3, 1, "", "close"], [174, 3, 1, "", "dir_file"], [174, 2, 1, "", "file"], [174, 3, 1, "", "iter"], [174, 3, 1, "", "read"], [174, 3, 1, "", "to_json"], [174, 3, 1, "", "write"]], "sisl.io.siesta.SileSiesta": [[175, 3, 1, "", "__init__"], [175, 2, 1, "", "base_file"], [175, 3, 1, "", "close"], [175, 3, 1, "", "dir_file"], [175, 2, 1, "", "file"], [175, 3, 1, "", "read"], [175, 3, 1, "", "to_json"], [175, 3, 1, "", "write"]], "sisl.io.siesta.bandsSileSiesta": [[176, 3, 1, "", "__init__"], [176, 2, 1, "", "base_file"], [176, 3, 1, "", "close"], [176, 3, 1, "", "dir_file"], [176, 2, 1, "", "file"], [176, 4, 1, "", "plot"], [176, 3, 1, "", "read"], [176, 3, 1, "", "read_data"], [176, 3, 1, "", "read_fermi_level"], [176, 3, 1, "", "to_json"], [176, 3, 1, "", "write"]], "sisl.io.siesta.dmSileSiesta": [[177, 3, 1, "", "__init__"], [177, 2, 1, "", "base_file"], [177, 3, 1, "", "dir_file"], [177, 2, 1, "", "file"], [177, 3, 1, "", "read"], [177, 3, 1, "", "read_density_matrix"], [177, 3, 1, "", "to_json"], [177, 3, 1, "", "write"], [177, 3, 1, "", "write_density_matrix"]], "sisl.io.siesta.eigSileSiesta": [[178, 3, 1, "", "__init__"], [178, 2, 1, "", "base_file"], [178, 3, 1, "", "close"], [178, 3, 1, "", "dir_file"], [178, 2, 1, "", "file"], [178, 3, 1, "", "read"], [178, 3, 1, "", "read_data"], [178, 3, 1, "", "read_fermi_level"], [178, 3, 1, "", "to_json"], [178, 3, 1, "", "write"]], "sisl.io.siesta.faSileSiesta": [[179, 3, 1, "", "__init__"], [179, 2, 1, "", "base_file"], [179, 3, 1, "", "close"], [179, 3, 1, "", "dir_file"], [179, 2, 1, "", "file"], [179, 3, 1, "", "read"], [179, 3, 1, "", "read_data"], [179, 3, 1, "", "read_force"], [179, 3, 1, "", "to_json"], [179, 3, 1, "", "write"], [179, 3, 1, "", "write_data"], [179, 3, 1, "", "write_force"]], "sisl.io.siesta.fcSileSiesta": [[180, 3, 1, "", "__init__"], [180, 2, 1, "", "base_file"], [180, 3, 1, "", "close"], [180, 3, 1, "", "dir_file"], [180, 2, 1, "", "file"], [180, 3, 1, "", "read"], [180, 3, 1, "", "read_force"], [180, 3, 1, "", "read_force_constant"], [180, 3, 1, "", "to_json"], [180, 3, 1, "", "write"]], "sisl.io.siesta.fdfSileSiesta": [[181, 3, 1, "", "__init__"], [181, 2, 1, "", "base_file"], [181, 3, 1, "", "close"], [181, 3, 1, "", "dir_file"], [181, 2, 1, "", "file"], [181, 3, 1, "", "get"], [181, 3, 1, "", "includes"], [181, 4, 1, "", "plot"], [181, 3, 1, "", "print"], [181, 3, 1, "", "read"], [181, 3, 1, "", "read_basis"], [181, 3, 1, "", "read_density_matrix"], [181, 3, 1, "", "read_dynamical_matrix"], [181, 3, 1, "", "read_energy_density_matrix"], [181, 3, 1, "", "read_fermi_level"], [181, 3, 1, "", "read_force"], [181, 3, 1, "", "read_force_constant"], [181, 3, 1, "", "read_geometry"], [181, 3, 1, "", "read_grid"], [181, 3, 1, "", "read_hamiltonian"], [181, 3, 1, "", "read_overlap"], [181, 3, 1, "", "read_supercell"], [181, 3, 1, "", "read_supercell_nsc"], [181, 3, 1, "", "set"], [181, 3, 1, "", "to_json"], [181, 3, 1, "", "type"], [181, 3, 1, "", "write"], [181, 3, 1, "", "write_geometry"], [181, 3, 1, "", "write_supercell"]], "sisl.io.siesta.gridSileSiesta": [[182, 3, 1, "", "__init__"], [182, 2, 1, "", "base_file"], [182, 3, 1, "", "dir_file"], [182, 2, 1, "", "file"], [182, 4, 1, "", "grid_unit"], [182, 3, 1, "", "read"], [182, 3, 1, "", "read_grid"], [182, 3, 1, "", "read_grid_size"], [182, 3, 1, "", "read_supercell"], [182, 3, 1, "", "to_json"], [182, 3, 1, "", "write"]], "sisl.io.siesta.gridncSileSiesta": [[183, 3, 1, "", "__init__"], [183, 2, 1, "", "base_file"], [183, 3, 1, "", "close"], [183, 3, 1, "", "dir_file"], [183, 2, 1, "", "file"], [183, 3, 1, "", "iter"], [183, 4, 1, "", "plot"], [183, 3, 1, "", "read"], [183, 3, 1, "", "read_grid"], [183, 3, 1, "", "read_supercell"], [183, 3, 1, "", "to_json"], [183, 3, 1, "", "write"], [183, 3, 1, "", "write_grid"], [183, 3, 1, "", "write_supercell"]], "sisl.io.siesta.hsxSileSiesta": [[184, 3, 1, "", "__init__"], [184, 2, 1, "", "base_file"], [184, 3, 1, "", "dir_file"], [184, 2, 1, "", "file"], [184, 4, 1, "", "plot"], [184, 3, 1, "", "read"], [184, 3, 1, "", "read_fermi_level"], [184, 3, 1, "", "read_geometry"], [184, 3, 1, "", "read_hamiltonian"], [184, 3, 1, "", "read_overlap"], [184, 3, 1, "", "to_json"], [184, 2, 1, "", "version"], [184, 3, 1, "", "write"]], "sisl.io.siesta.ionncSileSiesta": [[185, 3, 1, "", "__init__"], [185, 2, 1, "", "base_file"], [185, 3, 1, "", "close"], [185, 3, 1, "", "dir_file"], [185, 2, 1, "", "file"], [185, 3, 1, "", "iter"], [185, 3, 1, "", "read"], [185, 3, 1, "", "read_basis"], [185, 3, 1, "", "to_json"], [185, 3, 1, "", "write"]], "sisl.io.siesta.ionxmlSileSiesta": [[186, 3, 1, "", "__init__"], [186, 2, 1, "", "base_file"], [186, 3, 1, "", "close"], [186, 3, 1, "", "dir_file"], [186, 2, 1, "", "file"], [186, 3, 1, "", "read"], [186, 3, 1, "", "read_basis"], [186, 3, 1, "", "to_json"], [186, 3, 1, "", "write"]], "sisl.io.siesta.kpSileSiesta": [[187, 3, 1, "", "__init__"], [187, 2, 1, "", "base_file"], [187, 3, 1, "", "close"], [187, 3, 1, "", "dir_file"], [187, 2, 1, "", "file"], [187, 3, 1, "", "read"], [187, 3, 1, "", "read_brillouinzone"], [187, 3, 1, "", "read_data"], [187, 3, 1, "", "to_json"], [187, 3, 1, "", "write"], [187, 3, 1, "", "write_brillouinzone"], [187, 3, 1, "", "write_data"]], "sisl.io.siesta.ncSileSiesta": [[188, 3, 1, "", "__init__"], [188, 2, 1, "", "base_file"], [188, 3, 1, "", "close"], [188, 3, 1, "", "dir_file"], [188, 2, 1, "", "file"], [188, 2, 1, "", "grids"], [188, 3, 1, "", "iter"], [188, 4, 1, "", "plot"], [188, 3, 1, "", "read"], [188, 3, 1, "", "read_basis"], [188, 3, 1, "", "read_density_matrix"], [188, 3, 1, "", "read_dynamical_matrix"], [188, 3, 1, "", "read_energy_density_matrix"], [188, 3, 1, "", "read_fermi_level"], [188, 3, 1, "", "read_force"], [188, 3, 1, "", "read_force_constant"], [188, 3, 1, "", "read_geometry"], [188, 3, 1, "", "read_grid"], [188, 3, 1, "", "read_hamiltonian"], [188, 3, 1, "", "read_overlap"], [188, 3, 1, "", "read_supercell"], [188, 3, 1, "", "read_supercell_nsc"], [188, 3, 1, "", "to_json"], [188, 3, 1, "", "write"], [188, 3, 1, "", "write_basis"], [188, 3, 1, "", "write_density_matrix"], [188, 3, 1, "", "write_dynamical_matrix"], [188, 3, 1, "", "write_energy_density_matrix"], [188, 3, 1, "", "write_geometry"], [188, 3, 1, "", "write_hamiltonian"], [188, 3, 1, "", "write_overlap"]], "sisl.io.siesta.onlysSileSiesta": [[189, 3, 1, "", "__init__"], [189, 2, 1, "", "base_file"], [189, 3, 1, "", "dir_file"], [189, 2, 1, "", "file"], [189, 4, 1, "", "plot"], [189, 3, 1, "", "read"], [189, 3, 1, "", "read_fermi_level"], [189, 3, 1, "", "read_geometry"], [189, 3, 1, "", "read_overlap"], [189, 3, 1, "", "read_supercell"], [189, 3, 1, "", "to_json"], [189, 2, 1, "", "version"], [189, 3, 1, "", "write"]], "sisl.io.siesta.orbindxSileSiesta": [[190, 3, 1, "", "__init__"], [190, 2, 1, "", "base_file"], [190, 3, 1, "", "close"], [190, 3, 1, "", "dir_file"], [190, 2, 1, "", "file"], [190, 3, 1, "", "read"], [190, 3, 1, "", "read_basis"], [190, 3, 1, "", "read_supercell_nsc"], [190, 3, 1, "", "to_json"], [190, 3, 1, "", "write"]], "sisl.io.siesta.outSileSiesta": [[191, 3, 1, "", "__init__"], [191, 2, 1, "", "base_file"], [191, 3, 1, "", "close"], [191, 3, 1, "", "completed"], [191, 3, 1, "", "dir_file"], [191, 2, 1, "", "file"], [191, 4, 1, "", "plot"], [191, 3, 1, "", "read"], [191, 3, 1, "", "read_basis"], [191, 3, 1, "", "read_charge"], [191, 3, 1, "", "read_data"], [191, 3, 1, "", "read_energy"], [191, 3, 1, "", "read_force"], [191, 3, 1, "", "read_geometry"], [191, 3, 1, "", "read_moment"], [191, 3, 1, "", "read_scf"], [191, 3, 1, "", "read_stress"], [191, 3, 1, "", "to_json"], [191, 3, 1, "", "write"]], "sisl.io.siesta.pdosSileSiesta": [[192, 3, 1, "", "__init__"], [192, 2, 1, "", "base_file"], [192, 3, 1, "", "close"], [192, 3, 1, "", "dir_file"], [192, 2, 1, "", "file"], [192, 4, 1, "", "plot"], [192, 3, 1, "", "read"], [192, 3, 1, "", "read_data"], [192, 3, 1, "", "read_fermi_level"], [192, 3, 1, "", "read_geometry"], [192, 3, 1, "", "to_json"], [192, 3, 1, "", "write"]], "sisl.io.siesta.rkpSileSiesta": [[193, 3, 1, "", "__init__"], [193, 2, 1, "", "base_file"], [193, 3, 1, "", "close"], [193, 3, 1, "", "dir_file"], [193, 2, 1, "", "file"], [193, 3, 1, "", "read"], [193, 3, 1, "", "read_brillouinzone"], [193, 3, 1, "", "read_data"], [193, 3, 1, "", "to_json"], [193, 3, 1, "", "write"], [193, 3, 1, "", "write_brillouinzone"], [193, 3, 1, "", "write_data"]], "sisl.io.siesta.structSileSiesta": [[194, 3, 1, "", "__init__"], [194, 2, 1, "", "base_file"], [194, 3, 1, "", "close"], [194, 3, 1, "", "dir_file"], [194, 2, 1, "", "file"], [194, 4, 1, "", "plot"], [194, 3, 1, "", "read"], [194, 3, 1, "", "read_geometry"], [194, 3, 1, "", "read_supercell"], [194, 3, 1, "", "to_json"], [194, 3, 1, "", "write"], [194, 3, 1, "", "write_geometry"]], "sisl.io.siesta.tsdeSileSiesta": [[195, 3, 1, "", "__init__"], [195, 2, 1, "", "base_file"], [195, 3, 1, "", "dir_file"], [195, 2, 1, "", "file"], [195, 3, 1, "", "read"], [195, 3, 1, "", "read_density_matrix"], [195, 3, 1, "", "read_energy_density_matrix"], [195, 3, 1, "", "read_fermi_level"], [195, 3, 1, "", "to_json"], [195, 3, 1, "", "write"], [195, 3, 1, "", "write_density_matrices"], [195, 3, 1, "", "write_density_matrix"]], "sisl.io.siesta.tsgfSileSiesta": [[196, 3, 1, "", "Eindex"], [196, 3, 1, "", "HkSk"], [196, 3, 1, "", "__init__"], [196, 2, 1, "", "base_file"], [196, 3, 1, "", "dir_file"], [196, 3, 1, "", "disk_usage"], [196, 2, 1, "", "file"], [196, 3, 1, "", "kindex"], [196, 4, 1, "", "plot"], [196, 3, 1, "", "read"], [196, 3, 1, "", "read_hamiltonian"], [196, 3, 1, "", "read_header"], [196, 3, 1, "", "read_self_energy"], [196, 3, 1, "", "self_energy"], [196, 3, 1, "", "to_json"], [196, 3, 1, "", "write"], [196, 3, 1, "", "write_hamiltonian"], [196, 3, 1, "", "write_header"], [196, 3, 1, "", "write_self_energy"]], "sisl.io.siesta.tshsSileSiesta": [[197, 3, 1, "", "__init__"], [197, 2, 1, "", "base_file"], [197, 3, 1, "", "dir_file"], [197, 2, 1, "", "file"], [197, 4, 1, "", "plot"], [197, 3, 1, "", "read"], [197, 3, 1, "", "read_fermi_level"], [197, 3, 1, "", "read_geometry"], [197, 3, 1, "", "read_hamiltonian"], [197, 3, 1, "", "read_overlap"], [197, 3, 1, "", "read_supercell"], [197, 3, 1, "", "to_json"], [197, 2, 1, "", "version"], [197, 3, 1, "", "write"], [197, 3, 1, "", "write_hamiltonian"]], "sisl.io.siesta.tsvncSileSiesta": [[198, 3, 1, "", "__init__"], [198, 2, 1, "", "base_file"], [198, 3, 1, "", "close"], [198, 3, 1, "", "dir_file"], [198, 2, 1, "", "file"], [198, 3, 1, "", "iter"], [198, 4, 1, "", "plot"], [198, 3, 1, "", "read"], [198, 3, 1, "", "read_grid"], [198, 3, 1, "", "read_supercell"], [198, 3, 1, "", "to_json"], [198, 3, 1, "", "write"], [198, 3, 1, "", "write_grid"], [198, 3, 1, "", "write_supercell"]], "sisl.io.siesta.wfsxSileSiesta": [[199, 3, 1, "", "__init__"], [199, 2, 1, "", "base_file"], [199, 3, 1, "", "dir_file"], [199, 2, 1, "", "file"], [199, 3, 1, "", "read"], [199, 3, 1, "", "read_basis"], [199, 3, 1, "", "read_brillouinzone"], [199, 3, 1, "", "read_eigenstate"], [199, 3, 1, "", "read_info"], [199, 3, 1, "", "read_sizes"], [199, 3, 1, "", "to_json"], [199, 3, 1, "", "write"], [199, 3, 1, "", "yield_eigenstate"]], "sisl.io.siesta.xvSileSiesta": [[200, 3, 1, "", "__init__"], [200, 2, 1, "", "base_file"], [200, 3, 1, "", "close"], [200, 3, 1, "", "dir_file"], [200, 2, 1, "", "file"], [200, 4, 1, "", "plot"], [200, 3, 1, "", "read"], [200, 3, 1, "", "read_data"], [200, 3, 1, "", "read_geometry"], [200, 3, 1, "", "read_supercell"], [200, 3, 1, "", "read_velocity"], [200, 3, 1, "", "to_json"], [200, 3, 1, "", "write"], [200, 3, 1, "", "write_geometry"]], "sisl.io.tableSile": [[201, 3, 1, "", "__init__"], [201, 2, 1, "", "base_file"], [201, 3, 1, "", "close"], [201, 3, 1, "", "dir_file"], [201, 2, 1, "", "file"], [201, 3, 1, "", "read"], [201, 3, 1, "", "read_data"], [201, 3, 1, "", "to_json"], [201, 3, 1, "", "write"], [201, 3, 1, "", "write_data"]], "sisl.io.tbtrans": [[202, 1, 1, "", "SileBinTBtrans"], [203, 1, 1, "", "SileCDFTBtrans"], [204, 1, 1, "", "SileTBtrans"], [205, 1, 1, "", "deltancSileTBtrans"], [206, 1, 1, "", "phtavncSilePHtrans"], [207, 1, 1, "", "phtncSilePHtrans"], [208, 1, 1, "", "phtprojncSilePHtrans"], [209, 1, 1, "", "phtsencSilePHtrans"], [210, 1, 1, "", "tbtavncSileTBtrans"], [211, 1, 1, "", "tbtgfSileTBtrans"], [212, 1, 1, "", "tbtncSileTBtrans"], [213, 1, 1, "", "tbtprojncSileTBtrans"], [214, 1, 1, "", "tbtsencSileTBtrans"]], "sisl.io.tbtrans.SileBinTBtrans": [[202, 3, 1, "", "__init__"], [202, 2, 1, "", "base_file"], [202, 3, 1, "", "dir_file"], [202, 2, 1, "", "file"], [202, 3, 1, "", "read"], [202, 3, 1, "", "to_json"], [202, 3, 1, "", "write"]], "sisl.io.tbtrans.SileCDFTBtrans": [[203, 3, 1, "", "__init__"], [203, 2, 1, "", "base_file"], [203, 3, 1, "", "close"], [203, 3, 1, "", "dir_file"], [203, 2, 1, "", "file"], [203, 3, 1, "", "iter"], [203, 3, 1, "", "read"], [203, 3, 1, "", "to_json"], [203, 3, 1, "", "write"]], "sisl.io.tbtrans.SileTBtrans": [[204, 3, 1, "", "__init__"], [204, 2, 1, "", "base_file"], [204, 3, 1, "", "close"], [204, 3, 1, "", "dir_file"], [204, 2, 1, "", "file"], [204, 3, 1, "", "read"], [204, 3, 1, "", "to_json"], [204, 3, 1, "", "write"]], "sisl.io.tbtrans.deltancSileTBtrans": [[205, 3, 1, "", "__init__"], [205, 2, 1, "", "base_file"], [205, 3, 1, "", "close"], [205, 3, 1, "", "dir_file"], [205, 2, 1, "", "file"], [205, 3, 1, "", "has_level"], [205, 3, 1, "", "iter"], [205, 3, 1, "", "merge"], [205, 4, 1, "", "plot"], [205, 3, 1, "", "read"], [205, 3, 1, "", "read_delta"], [205, 3, 1, "", "read_geometry"], [205, 3, 1, "", "read_supercell"], [205, 3, 1, "", "to_json"], [205, 3, 1, "", "write"], [205, 3, 1, "", "write_delta"], [205, 3, 1, "", "write_geometry"], [205, 3, 1, "", "write_supercell"]], "sisl.io.tbtrans.phtavncSilePHtrans": [[206, 3, 1, "", "ADOS"], [206, 3, 1, "", "Adensity_matrix"], [206, 3, 1, "", "BDOS"], [206, 3, 1, "", "DOS"], [206, 2, 1, "", "E"], [206, 3, 1, "", "Eindex"], [206, 3, 1, "", "__init__"], [206, 3, 1, "", "a2p"], [206, 2, 1, "", "a_buf"], [206, 2, 1, "", "a_dev"], [206, 3, 1, "", "a_down"], [206, 3, 1, "", "a_elec"], [206, 3, 1, "", "atom_ACOHP"], [206, 3, 1, "", "atom_ACOOP"], [206, 3, 1, "", "atom_COHP"], [206, 3, 1, "", "atom_COOP"], [206, 3, 1, "", "atom_current"], [206, 3, 1, "", "atom_transmission"], [206, 2, 1, "", "base_file"], [206, 3, 1, "", "bloch"], [206, 3, 1, "", "bond_current"], [206, 3, 1, "", "bond_transmission"], [206, 3, 1, "", "btd"], [206, 2, 1, "", "cell"], [206, 4, 1, "", "chemical_potential"], [206, 3, 1, "", "close"], [206, 4, 1, "", "current"], [206, 4, 1, "", "current_parameter"], [206, 3, 1, "", "density_matrix"], [206, 3, 1, "", "dir_file"], [206, 2, 1, "", "elecs"], [206, 4, 1, "", "electron_temperature"], [206, 3, 1, "", "eta"], [206, 4, 1, "", "fano"], [206, 2, 1, "", "file"], [206, 2, 1, "", "geom"], [206, 2, 1, "", "geometry"], [206, 3, 1, "", "info"], [206, 3, 1, "", "iter"], [206, 2, 1, "", "k"], [206, 4, 1, "", "kT"], [206, 3, 1, "", "kindex"], [206, 2, 1, "", "kpt"], [206, 2, 1, "", "lasto"], [206, 3, 1, "", "mu"], [206, 2, 1, "", "nE"], [206, 3, 1, "", "n_btd"], [206, 2, 1, "", "na"], [206, 2, 1, "", "na_b"], [206, 2, 1, "", "na_buffer"], [206, 2, 1, "", "na_d"], [206, 2, 1, "", "na_dev"], [206, 3, 1, "", "na_down"], [206, 2, 1, "", "na_u"], [206, 2, 1, "", "ne"], [206, 2, 1, "", "nk"], [206, 2, 1, "", "nkpt"], [206, 2, 1, "", "no"], [206, 2, 1, "", "no_d"], [206, 3, 1, "", "no_down"], [206, 3, 1, "", "no_e"], [206, 2, 1, "", "no_u"], [206, 4, 1, "", "noise_power"], [206, 3, 1, "", "norm"], [206, 3, 1, "", "o2p"], [206, 2, 1, "", "o_dev"], [206, 3, 1, "", "orbital_ACOHP"], [206, 3, 1, "", "orbital_ACOOP"], [206, 3, 1, "", "orbital_COHP"], [206, 3, 1, "", "orbital_COOP"], [206, 3, 1, "", "orbital_current"], [206, 3, 1, "", "orbital_transmission"], [206, 3, 1, "", "phonon_temperature"], [206, 3, 1, "", "pivot"], [206, 3, 1, "", "pivot_down"], [206, 4, 1, "", "plot"], [206, 3, 1, "", "read"], [206, 3, 1, "", "read_data"], [206, 3, 1, "", "read_geometry"], [206, 3, 1, "", "read_supercell"], [206, 3, 1, "", "reflection"], [206, 4, 1, "", "shot_noise"], [206, 3, 1, "", "sparse_atom_to_vector"], [206, 3, 1, "", "sparse_orbital_to_atom"], [206, 3, 1, "", "sparse_orbital_to_scalar"], [206, 3, 1, "", "sparse_orbital_to_vector"], [206, 3, 1, "", "to_json"], [206, 3, 1, "", "transmission"], [206, 3, 1, "", "transmission_bulk"], [206, 3, 1, "", "transmission_eig"], [206, 3, 1, "", "vector_current"], [206, 3, 1, "", "vector_transmission"], [206, 2, 1, "", "wk"], [206, 2, 1, "", "wkpt"], [206, 3, 1, "", "write"], [206, 3, 1, "", "write_tbtav"], [206, 2, 1, "", "xa"], [206, 2, 1, "", "xyz"]], "sisl.io.tbtrans.phtncSilePHtrans": [[207, 3, 1, "", "ADOS"], [207, 3, 1, "", "Adensity_matrix"], [207, 3, 1, "", "BDOS"], [207, 3, 1, "", "DOS"], [207, 2, 1, "", "E"], [207, 3, 1, "", "Eindex"], [207, 3, 1, "", "__init__"], [207, 3, 1, "", "a2p"], [207, 2, 1, "", "a_buf"], [207, 2, 1, "", "a_dev"], [207, 3, 1, "", "a_down"], [207, 3, 1, "", "a_elec"], [207, 3, 1, "", "atom_ACOHP"], [207, 3, 1, "", "atom_ACOOP"], [207, 3, 1, "", "atom_COHP"], [207, 3, 1, "", "atom_COOP"], [207, 3, 1, "", "atom_current"], [207, 3, 1, "", "atom_transmission"], [207, 2, 1, "", "base_file"], [207, 3, 1, "", "bloch"], [207, 3, 1, "", "bond_current"], [207, 3, 1, "", "bond_transmission"], [207, 3, 1, "", "btd"], [207, 2, 1, "", "cell"], [207, 4, 1, "", "chemical_potential"], [207, 3, 1, "", "close"], [207, 4, 1, "", "current"], [207, 4, 1, "", "current_parameter"], [207, 3, 1, "", "density_matrix"], [207, 3, 1, "", "dir_file"], [207, 2, 1, "", "elecs"], [207, 4, 1, "", "electron_temperature"], [207, 3, 1, "", "eta"], [207, 3, 1, "", "fano"], [207, 2, 1, "", "file"], [207, 2, 1, "", "geom"], [207, 2, 1, "", "geometry"], [207, 3, 1, "", "info"], [207, 3, 1, "", "iter"], [207, 2, 1, "", "k"], [207, 4, 1, "", "kT"], [207, 3, 1, "", "kindex"], [207, 2, 1, "", "kpt"], [207, 2, 1, "", "lasto"], [207, 3, 1, "", "mu"], [207, 2, 1, "", "nE"], [207, 3, 1, "", "n_btd"], [207, 2, 1, "", "na"], [207, 2, 1, "", "na_b"], [207, 2, 1, "", "na_buffer"], [207, 2, 1, "", "na_d"], [207, 2, 1, "", "na_dev"], [207, 3, 1, "", "na_down"], [207, 2, 1, "", "na_u"], [207, 2, 1, "", "ne"], [207, 2, 1, "", "nk"], [207, 2, 1, "", "nkpt"], [207, 2, 1, "", "no"], [207, 2, 1, "", "no_d"], [207, 3, 1, "", "no_down"], [207, 3, 1, "", "no_e"], [207, 2, 1, "", "no_u"], [207, 4, 1, "", "noise_power"], [207, 3, 1, "", "norm"], [207, 3, 1, "", "o2p"], [207, 2, 1, "", "o_dev"], [207, 3, 1, "", "orbital_ACOHP"], [207, 3, 1, "", "orbital_ACOOP"], [207, 3, 1, "", "orbital_COHP"], [207, 3, 1, "", "orbital_COOP"], [207, 3, 1, "", "orbital_current"], [207, 3, 1, "", "orbital_transmission"], [207, 3, 1, "", "phonon_temperature"], [207, 3, 1, "", "pivot"], [207, 3, 1, "", "pivot_down"], [207, 4, 1, "", "plot"], [207, 3, 1, "", "read"], [207, 3, 1, "", "read_data"], [207, 3, 1, "", "read_geometry"], [207, 3, 1, "", "read_supercell"], [207, 3, 1, "", "reflection"], [207, 4, 1, "", "shot_noise"], [207, 3, 1, "", "sparse_atom_to_vector"], [207, 3, 1, "", "sparse_orbital_to_atom"], [207, 3, 1, "", "sparse_orbital_to_scalar"], [207, 3, 1, "", "sparse_orbital_to_vector"], [207, 3, 1, "", "to_json"], [207, 3, 1, "", "transmission"], [207, 3, 1, "", "transmission_bulk"], [207, 3, 1, "", "transmission_eig"], [207, 3, 1, "", "vector_current"], [207, 3, 1, "", "vector_transmission"], [207, 2, 1, "", "wk"], [207, 2, 1, "", "wkpt"], [207, 3, 1, "", "write"], [207, 3, 1, "", "write_tbtav"], [207, 2, 1, "", "xa"], [207, 2, 1, "", "xyz"]], "sisl.io.tbtrans.phtprojncSilePHtrans": [[208, 3, 1, "", "ADOS"], [208, 3, 1, "", "Adensity_matrix"], [208, 3, 1, "", "BDOS"], [208, 3, 1, "", "DOS"], [208, 2, 1, "", "E"], [208, 3, 1, "", "Eindex"], [208, 3, 1, "", "__init__"], [208, 3, 1, "", "a2p"], [208, 2, 1, "", "a_buf"], [208, 2, 1, "", "a_dev"], [208, 3, 1, "", "a_down"], [208, 3, 1, "", "a_elec"], [208, 3, 1, "", "atom_ACOHP"], [208, 3, 1, "", "atom_ACOOP"], [208, 4, 1, "", "atom_COHP"], [208, 4, 1, "", "atom_COOP"], [208, 3, 1, "", "atom_current"], [208, 3, 1, "", "atom_transmission"], [208, 2, 1, "", "base_file"], [208, 3, 1, "", "bloch"], [208, 3, 1, "", "bond_current"], [208, 3, 1, "", "bond_transmission"], [208, 3, 1, "", "btd"], [208, 2, 1, "", "cell"], [208, 3, 1, "", "chemical_potential"], [208, 3, 1, "", "close"], [208, 4, 1, "", "current"], [208, 4, 1, "", "current_parameter"], [208, 4, 1, "", "density_matrix"], [208, 3, 1, "", "dir_file"], [208, 3, 1, "", "eigenstate"], [208, 2, 1, "", "elecs"], [208, 3, 1, "", "electron_temperature"], [208, 3, 1, "", "eta"], [208, 4, 1, "", "fano"], [208, 2, 1, "", "file"], [208, 2, 1, "", "geom"], [208, 2, 1, "", "geometry"], [208, 3, 1, "", "info"], [208, 3, 1, "", "iter"], [208, 2, 1, "", "k"], [208, 3, 1, "", "kT"], [208, 3, 1, "", "kindex"], [208, 2, 1, "", "kpt"], [208, 2, 1, "", "lasto"], [208, 2, 1, "", "molecules"], [208, 3, 1, "", "mu"], [208, 2, 1, "", "nE"], [208, 3, 1, "", "n_btd"], [208, 2, 1, "", "na"], [208, 2, 1, "", "na_b"], [208, 2, 1, "", "na_buffer"], [208, 2, 1, "", "na_d"], [208, 2, 1, "", "na_dev"], [208, 3, 1, "", "na_down"], [208, 2, 1, "", "na_u"], [208, 2, 1, "", "ne"], [208, 2, 1, "", "nk"], [208, 2, 1, "", "nkpt"], [208, 2, 1, "", "no"], [208, 2, 1, "", "no_d"], [208, 3, 1, "", "no_down"], [208, 3, 1, "", "no_e"], [208, 2, 1, "", "no_u"], [208, 4, 1, "", "noise_power"], [208, 3, 1, "", "norm"], [208, 3, 1, "", "o2p"], [208, 2, 1, "", "o_dev"], [208, 3, 1, "", "orbital_ACOHP"], [208, 3, 1, "", "orbital_ACOOP"], [208, 4, 1, "", "orbital_COHP"], [208, 4, 1, "", "orbital_COOP"], [208, 3, 1, "", "orbital_current"], [208, 3, 1, "", "orbital_transmission"], [208, 3, 1, "", "pivot"], [208, 3, 1, "", "pivot_down"], [208, 4, 1, "", "plot"], [208, 3, 1, "", "projections"], [208, 3, 1, "", "read"], [208, 3, 1, "", "read_data"], [208, 3, 1, "", "read_geometry"], [208, 3, 1, "", "read_supercell"], [208, 3, 1, "", "reflection"], [208, 4, 1, "", "shot_noise"], [208, 3, 1, "", "sparse_atom_to_vector"], [208, 3, 1, "", "sparse_orbital_to_atom"], [208, 3, 1, "", "sparse_orbital_to_scalar"], [208, 3, 1, "", "sparse_orbital_to_vector"], [208, 3, 1, "", "to_json"], [208, 3, 1, "", "transmission"], [208, 3, 1, "", "transmission_bulk"], [208, 3, 1, "", "transmission_eig"], [208, 3, 1, "", "vector_current"], [208, 3, 1, "", "vector_transmission"], [208, 2, 1, "", "wk"], [208, 2, 1, "", "wkpt"], [208, 3, 1, "", "write"], [208, 3, 1, "", "write_tbtav"], [208, 2, 1, "", "xa"], [208, 2, 1, "", "xyz"]], "sisl.io.tbtrans.phtsencSilePHtrans": [[209, 2, 1, "", "E"], [209, 3, 1, "", "Eindex"], [209, 3, 1, "", "__init__"], [209, 3, 1, "", "a2p"], [209, 2, 1, "", "a_buf"], [209, 2, 1, "", "a_dev"], [209, 3, 1, "", "a_down"], [209, 3, 1, "", "a_elec"], [209, 2, 1, "", "base_file"], [209, 3, 1, "", "bloch"], [209, 3, 1, "", "broadening_matrix"], [209, 3, 1, "", "btd"], [209, 2, 1, "", "cell"], [209, 3, 1, "", "chemical_potential"], [209, 3, 1, "", "close"], [209, 3, 1, "", "dir_file"], [209, 2, 1, "", "elecs"], [209, 3, 1, "", "electron_temperature"], [209, 3, 1, "", "eta"], [209, 2, 1, "", "file"], [209, 2, 1, "", "geom"], [209, 2, 1, "", "geometry"], [209, 3, 1, "", "info"], [209, 3, 1, "", "iter"], [209, 2, 1, "", "k"], [209, 3, 1, "", "kT"], [209, 3, 1, "", "kindex"], [209, 2, 1, "", "kpt"], [209, 2, 1, "", "lasto"], [209, 3, 1, "", "mu"], [209, 2, 1, "", "nE"], [209, 3, 1, "", "n_btd"], [209, 2, 1, "", "na"], [209, 2, 1, "", "na_b"], [209, 2, 1, "", "na_buffer"], [209, 2, 1, "", "na_d"], [209, 2, 1, "", "na_dev"], [209, 3, 1, "", "na_down"], [209, 2, 1, "", "na_u"], [209, 2, 1, "", "ne"], [209, 2, 1, "", "nk"], [209, 2, 1, "", "nkpt"], [209, 2, 1, "", "no"], [209, 2, 1, "", "no_d"], [209, 3, 1, "", "no_down"], [209, 3, 1, "", "no_e"], [209, 2, 1, "", "no_u"], [209, 3, 1, "", "o2p"], [209, 2, 1, "", "o_dev"], [209, 3, 1, "", "pivot"], [209, 3, 1, "", "pivot_down"], [209, 4, 1, "", "plot"], [209, 3, 1, "", "read"], [209, 3, 1, "", "read_geometry"], [209, 3, 1, "", "read_supercell"], [209, 3, 1, "", "self_energy"], [209, 3, 1, "", "self_energy_average"], [209, 3, 1, "", "to_json"], [209, 2, 1, "", "wk"], [209, 2, 1, "", "wkpt"], [209, 3, 1, "", "write"], [209, 2, 1, "", "xa"], [209, 2, 1, "", "xyz"]], "sisl.io.tbtrans.tbtavncSileTBtrans": [[210, 3, 1, "", "ADOS"], [210, 3, 1, "", "Adensity_matrix"], [210, 3, 1, "", "BDOS"], [210, 3, 1, "", "DOS"], [210, 2, 1, "", "E"], [210, 3, 1, "", "Eindex"], [210, 3, 1, "", "__init__"], [210, 3, 1, "", "a2p"], [210, 2, 1, "", "a_buf"], [210, 2, 1, "", "a_dev"], [210, 3, 1, "", "a_down"], [210, 3, 1, "", "a_elec"], [210, 3, 1, "", "atom_ACOHP"], [210, 3, 1, "", "atom_ACOOP"], [210, 3, 1, "", "atom_COHP"], [210, 3, 1, "", "atom_COOP"], [210, 3, 1, "", "atom_current"], [210, 3, 1, "", "atom_transmission"], [210, 2, 1, "", "base_file"], [210, 3, 1, "", "bloch"], [210, 3, 1, "", "bond_current"], [210, 3, 1, "", "bond_transmission"], [210, 3, 1, "", "btd"], [210, 2, 1, "", "cell"], [210, 3, 1, "", "chemical_potential"], [210, 3, 1, "", "close"], [210, 3, 1, "", "current"], [210, 3, 1, "", "current_parameter"], [210, 3, 1, "", "density_matrix"], [210, 3, 1, "", "dir_file"], [210, 2, 1, "", "elecs"], [210, 3, 1, "", "electron_temperature"], [210, 3, 1, "", "eta"], [210, 4, 1, "", "fano"], [210, 2, 1, "", "file"], [210, 2, 1, "", "geom"], [210, 2, 1, "", "geometry"], [210, 3, 1, "", "info"], [210, 3, 1, "", "iter"], [210, 2, 1, "", "k"], [210, 3, 1, "", "kT"], [210, 3, 1, "", "kindex"], [210, 2, 1, "", "kpt"], [210, 2, 1, "", "lasto"], [210, 3, 1, "", "mu"], [210, 2, 1, "", "nE"], [210, 3, 1, "", "n_btd"], [210, 2, 1, "", "na"], [210, 2, 1, "", "na_b"], [210, 2, 1, "", "na_buffer"], [210, 2, 1, "", "na_d"], [210, 2, 1, "", "na_dev"], [210, 3, 1, "", "na_down"], [210, 2, 1, "", "na_u"], [210, 2, 1, "", "ne"], [210, 2, 1, "", "nk"], [210, 2, 1, "", "nkpt"], [210, 2, 1, "", "no"], [210, 2, 1, "", "no_d"], [210, 3, 1, "", "no_down"], [210, 3, 1, "", "no_e"], [210, 2, 1, "", "no_u"], [210, 4, 1, "", "noise_power"], [210, 3, 1, "", "norm"], [210, 3, 1, "", "o2p"], [210, 2, 1, "", "o_dev"], [210, 3, 1, "", "orbital_ACOHP"], [210, 3, 1, "", "orbital_ACOOP"], [210, 3, 1, "", "orbital_COHP"], [210, 3, 1, "", "orbital_COOP"], [210, 3, 1, "", "orbital_current"], [210, 3, 1, "", "orbital_transmission"], [210, 3, 1, "", "pivot"], [210, 3, 1, "", "pivot_down"], [210, 4, 1, "", "plot"], [210, 3, 1, "", "read"], [210, 3, 1, "", "read_data"], [210, 3, 1, "", "read_geometry"], [210, 3, 1, "", "read_supercell"], [210, 3, 1, "", "reflection"], [210, 4, 1, "", "shot_noise"], [210, 3, 1, "", "sparse_atom_to_vector"], [210, 3, 1, "", "sparse_orbital_to_atom"], [210, 3, 1, "", "sparse_orbital_to_scalar"], [210, 3, 1, "", "sparse_orbital_to_vector"], [210, 3, 1, "", "to_json"], [210, 3, 1, "", "transmission"], [210, 3, 1, "", "transmission_bulk"], [210, 3, 1, "", "transmission_eig"], [210, 3, 1, "", "vector_current"], [210, 3, 1, "", "vector_transmission"], [210, 2, 1, "", "wk"], [210, 2, 1, "", "wkpt"], [210, 3, 1, "", "write"], [210, 3, 1, "", "write_tbtav"], [210, 2, 1, "", "xa"], [210, 2, 1, "", "xyz"]], "sisl.io.tbtrans.tbtgfSileTBtrans": [[211, 3, 1, "", "Eindex"], [211, 3, 1, "", "HkSk"], [211, 3, 1, "", "__init__"], [211, 2, 1, "", "base_file"], [211, 3, 1, "", "dir_file"], [211, 3, 1, "", "disk_usage"], [211, 2, 1, "", "file"], [211, 3, 1, "", "kindex"], [211, 4, 1, "", "plot"], [211, 3, 1, "", "read"], [211, 3, 1, "", "read_hamiltonian"], [211, 3, 1, "", "read_header"], [211, 3, 1, "", "read_self_energy"], [211, 3, 1, "", "self_energy"], [211, 3, 1, "", "to_json"], [211, 3, 1, "", "write"], [211, 3, 1, "", "write_hamiltonian"], [211, 3, 1, "", "write_header"], [211, 3, 1, "", "write_self_energy"]], "sisl.io.tbtrans.tbtncSileTBtrans": [[212, 3, 1, "", "ADOS"], [212, 3, 1, "", "Adensity_matrix"], [212, 3, 1, "", "BDOS"], [212, 3, 1, "", "DOS"], [212, 2, 1, "", "E"], [212, 3, 1, "", "Eindex"], [212, 3, 1, "", "__init__"], [212, 3, 1, "", "a2p"], [212, 2, 1, "", "a_buf"], [212, 2, 1, "", "a_dev"], [212, 3, 1, "", "a_down"], [212, 3, 1, "", "a_elec"], [212, 3, 1, "", "atom_ACOHP"], [212, 3, 1, "", "atom_ACOOP"], [212, 3, 1, "", "atom_COHP"], [212, 3, 1, "", "atom_COOP"], [212, 3, 1, "", "atom_current"], [212, 3, 1, "", "atom_transmission"], [212, 2, 1, "", "base_file"], [212, 3, 1, "", "bloch"], [212, 3, 1, "", "bond_current"], [212, 3, 1, "", "bond_transmission"], [212, 3, 1, "", "btd"], [212, 2, 1, "", "cell"], [212, 3, 1, "", "chemical_potential"], [212, 3, 1, "", "close"], [212, 3, 1, "", "current"], [212, 3, 1, "", "current_parameter"], [212, 3, 1, "", "density_matrix"], [212, 3, 1, "", "dir_file"], [212, 2, 1, "", "elecs"], [212, 3, 1, "", "electron_temperature"], [212, 3, 1, "", "eta"], [212, 3, 1, "", "fano"], [212, 2, 1, "", "file"], [212, 2, 1, "", "geom"], [212, 2, 1, "", "geometry"], [212, 3, 1, "", "info"], [212, 3, 1, "", "iter"], [212, 2, 1, "", "k"], [212, 3, 1, "", "kT"], [212, 3, 1, "", "kindex"], [212, 2, 1, "", "kpt"], [212, 2, 1, "", "lasto"], [212, 3, 1, "", "mu"], [212, 2, 1, "", "nE"], [212, 3, 1, "", "n_btd"], [212, 2, 1, "", "na"], [212, 2, 1, "", "na_b"], [212, 2, 1, "", "na_buffer"], [212, 2, 1, "", "na_d"], [212, 2, 1, "", "na_dev"], [212, 3, 1, "", "na_down"], [212, 2, 1, "", "na_u"], [212, 2, 1, "", "ne"], [212, 2, 1, "", "nk"], [212, 2, 1, "", "nkpt"], [212, 2, 1, "", "no"], [212, 2, 1, "", "no_d"], [212, 3, 1, "", "no_down"], [212, 3, 1, "", "no_e"], [212, 2, 1, "", "no_u"], [212, 3, 1, "", "noise_power"], [212, 3, 1, "", "norm"], [212, 3, 1, "", "o2p"], [212, 2, 1, "", "o_dev"], [212, 3, 1, "", "orbital_ACOHP"], [212, 3, 1, "", "orbital_ACOOP"], [212, 3, 1, "", "orbital_COHP"], [212, 3, 1, "", "orbital_COOP"], [212, 3, 1, "", "orbital_current"], [212, 3, 1, "", "orbital_transmission"], [212, 3, 1, "", "pivot"], [212, 3, 1, "", "pivot_down"], [212, 4, 1, "", "plot"], [212, 3, 1, "", "read"], [212, 3, 1, "", "read_data"], [212, 3, 1, "", "read_geometry"], [212, 3, 1, "", "read_supercell"], [212, 3, 1, "", "reflection"], [212, 3, 1, "", "shot_noise"], [212, 3, 1, "", "sparse_atom_to_vector"], [212, 3, 1, "", "sparse_orbital_to_atom"], [212, 3, 1, "", "sparse_orbital_to_scalar"], [212, 3, 1, "", "sparse_orbital_to_vector"], [212, 3, 1, "", "to_json"], [212, 3, 1, "", "transmission"], [212, 3, 1, "", "transmission_bulk"], [212, 3, 1, "", "transmission_eig"], [212, 3, 1, "", "vector_current"], [212, 3, 1, "", "vector_transmission"], [212, 2, 1, "", "wk"], [212, 2, 1, "", "wkpt"], [212, 3, 1, "", "write"], [212, 3, 1, "", "write_tbtav"], [212, 2, 1, "", "xa"], [212, 2, 1, "", "xyz"]], "sisl.io.tbtrans.tbtprojncSileTBtrans": [[213, 3, 1, "", "ADOS"], [213, 3, 1, "", "Adensity_matrix"], [213, 3, 1, "", "BDOS"], [213, 3, 1, "", "DOS"], [213, 2, 1, "", "E"], [213, 3, 1, "", "Eindex"], [213, 3, 1, "", "__init__"], [213, 3, 1, "", "a2p"], [213, 2, 1, "", "a_buf"], [213, 2, 1, "", "a_dev"], [213, 3, 1, "", "a_down"], [213, 3, 1, "", "a_elec"], [213, 3, 1, "", "atom_ACOHP"], [213, 3, 1, "", "atom_ACOOP"], [213, 4, 1, "", "atom_COHP"], [213, 4, 1, "", "atom_COOP"], [213, 3, 1, "", "atom_current"], [213, 3, 1, "", "atom_transmission"], [213, 2, 1, "", "base_file"], [213, 3, 1, "", "bloch"], [213, 3, 1, "", "bond_current"], [213, 3, 1, "", "bond_transmission"], [213, 3, 1, "", "btd"], [213, 2, 1, "", "cell"], [213, 3, 1, "", "chemical_potential"], [213, 3, 1, "", "close"], [213, 4, 1, "", "current"], [213, 4, 1, "", "current_parameter"], [213, 4, 1, "", "density_matrix"], [213, 3, 1, "", "dir_file"], [213, 3, 1, "", "eigenstate"], [213, 2, 1, "", "elecs"], [213, 3, 1, "", "electron_temperature"], [213, 3, 1, "", "eta"], [213, 4, 1, "", "fano"], [213, 2, 1, "", "file"], [213, 2, 1, "", "geom"], [213, 2, 1, "", "geometry"], [213, 3, 1, "", "info"], [213, 3, 1, "", "iter"], [213, 2, 1, "", "k"], [213, 3, 1, "", "kT"], [213, 3, 1, "", "kindex"], [213, 2, 1, "", "kpt"], [213, 2, 1, "", "lasto"], [213, 2, 1, "", "molecules"], [213, 3, 1, "", "mu"], [213, 2, 1, "", "nE"], [213, 3, 1, "", "n_btd"], [213, 2, 1, "", "na"], [213, 2, 1, "", "na_b"], [213, 2, 1, "", "na_buffer"], [213, 2, 1, "", "na_d"], [213, 2, 1, "", "na_dev"], [213, 3, 1, "", "na_down"], [213, 2, 1, "", "na_u"], [213, 2, 1, "", "ne"], [213, 2, 1, "", "nk"], [213, 2, 1, "", "nkpt"], [213, 2, 1, "", "no"], [213, 2, 1, "", "no_d"], [213, 3, 1, "", "no_down"], [213, 3, 1, "", "no_e"], [213, 2, 1, "", "no_u"], [213, 4, 1, "", "noise_power"], [213, 3, 1, "", "norm"], [213, 3, 1, "", "o2p"], [213, 2, 1, "", "o_dev"], [213, 3, 1, "", "orbital_ACOHP"], [213, 3, 1, "", "orbital_ACOOP"], [213, 4, 1, "", "orbital_COHP"], [213, 4, 1, "", "orbital_COOP"], [213, 3, 1, "", "orbital_current"], [213, 3, 1, "", "orbital_transmission"], [213, 3, 1, "", "pivot"], [213, 3, 1, "", "pivot_down"], [213, 4, 1, "", "plot"], [213, 3, 1, "", "projections"], [213, 3, 1, "", "read"], [213, 3, 1, "", "read_data"], [213, 3, 1, "", "read_geometry"], [213, 3, 1, "", "read_supercell"], [213, 3, 1, "", "reflection"], [213, 4, 1, "", "shot_noise"], [213, 3, 1, "", "sparse_atom_to_vector"], [213, 3, 1, "", "sparse_orbital_to_atom"], [213, 3, 1, "", "sparse_orbital_to_scalar"], [213, 3, 1, "", "sparse_orbital_to_vector"], [213, 3, 1, "", "to_json"], [213, 3, 1, "", "transmission"], [213, 3, 1, "", "transmission_bulk"], [213, 3, 1, "", "transmission_eig"], [213, 3, 1, "", "vector_current"], [213, 3, 1, "", "vector_transmission"], [213, 2, 1, "", "wk"], [213, 2, 1, "", "wkpt"], [213, 3, 1, "", "write"], [213, 3, 1, "", "write_tbtav"], [213, 2, 1, "", "xa"], [213, 2, 1, "", "xyz"]], "sisl.io.tbtrans.tbtsencSileTBtrans": [[214, 2, 1, "", "E"], [214, 3, 1, "", "Eindex"], [214, 3, 1, "", "__init__"], [214, 3, 1, "", "a2p"], [214, 2, 1, "", "a_buf"], [214, 2, 1, "", "a_dev"], [214, 3, 1, "", "a_down"], [214, 3, 1, "", "a_elec"], [214, 2, 1, "", "base_file"], [214, 3, 1, "", "bloch"], [214, 3, 1, "", "broadening_matrix"], [214, 3, 1, "", "btd"], [214, 2, 1, "", "cell"], [214, 3, 1, "", "chemical_potential"], [214, 3, 1, "", "close"], [214, 3, 1, "", "dir_file"], [214, 2, 1, "", "elecs"], [214, 3, 1, "", "electron_temperature"], [214, 3, 1, "", "eta"], [214, 2, 1, "", "file"], [214, 2, 1, "", "geom"], [214, 2, 1, "", "geometry"], [214, 3, 1, "", "info"], [214, 3, 1, "", "iter"], [214, 2, 1, "", "k"], [214, 3, 1, "", "kT"], [214, 3, 1, "", "kindex"], [214, 2, 1, "", "kpt"], [214, 2, 1, "", "lasto"], [214, 3, 1, "", "mu"], [214, 2, 1, "", "nE"], [214, 3, 1, "", "n_btd"], [214, 2, 1, "", "na"], [214, 2, 1, "", "na_b"], [214, 2, 1, "", "na_buffer"], [214, 2, 1, "", "na_d"], [214, 2, 1, "", "na_dev"], [214, 3, 1, "", "na_down"], [214, 2, 1, "", "na_u"], [214, 2, 1, "", "ne"], [214, 2, 1, "", "nk"], [214, 2, 1, "", "nkpt"], [214, 2, 1, "", "no"], [214, 2, 1, "", "no_d"], [214, 3, 1, "", "no_down"], [214, 3, 1, "", "no_e"], [214, 2, 1, "", "no_u"], [214, 3, 1, "", "o2p"], [214, 2, 1, "", "o_dev"], [214, 3, 1, "", "pivot"], [214, 3, 1, "", "pivot_down"], [214, 4, 1, "", "plot"], [214, 3, 1, "", "read"], [214, 3, 1, "", "read_geometry"], [214, 3, 1, "", "read_supercell"], [214, 3, 1, "", "self_energy"], [214, 3, 1, "", "self_energy_average"], [214, 3, 1, "", "to_json"], [214, 2, 1, "", "wk"], [214, 2, 1, "", "wkpt"], [214, 3, 1, "", "write"], [214, 2, 1, "", "xa"], [214, 2, 1, "", "xyz"]], "sisl.io.vasp": [[215, 1, 1, "", "SileBinVASP"], [216, 1, 1, "", "SileVASP"], [217, 1, 1, "", "carSileVASP"], [218, 1, 1, "", "chgSileVASP"], [219, 1, 1, "", "doscarSileVASP"], [220, 1, 1, "", "eigenvalSileVASP"], [221, 1, 1, "", "locpotSileVASP"], [222, 1, 1, "", "outSileVASP"]], "sisl.io.vasp.SileBinVASP": [[215, 3, 1, "", "__init__"], [215, 2, 1, "", "base_file"], [215, 3, 1, "", "dir_file"], [215, 2, 1, "", "file"], [215, 3, 1, "", "geometry_group"], [215, 3, 1, "", "read"], [215, 3, 1, "", "to_json"], [215, 3, 1, "", "write"]], "sisl.io.vasp.SileVASP": [[216, 3, 1, "", "__init__"], [216, 2, 1, "", "base_file"], [216, 3, 1, "", "close"], [216, 3, 1, "", "dir_file"], [216, 2, 1, "", "file"], [216, 3, 1, "", "geometry_group"], [216, 3, 1, "", "read"], [216, 3, 1, "", "to_json"], [216, 3, 1, "", "write"]], "sisl.io.vasp.carSileVASP": [[217, 3, 1, "", "__init__"], [217, 2, 1, "", "base_file"], [217, 3, 1, "", "close"], [217, 3, 1, "", "dir_file"], [217, 2, 1, "", "file"], [217, 3, 1, "", "geometry_group"], [217, 4, 1, "", "plot"], [217, 3, 1, "", "read"], [217, 3, 1, "", "read_geometry"], [217, 3, 1, "", "read_supercell"], [217, 3, 1, "", "to_json"], [217, 3, 1, "", "write"], [217, 3, 1, "", "write_geometry"]], "sisl.io.vasp.chgSileVASP": [[218, 3, 1, "", "__init__"], [218, 2, 1, "", "base_file"], [218, 3, 1, "", "close"], [218, 3, 1, "", "dir_file"], [218, 2, 1, "", "file"], [218, 3, 1, "", "geometry_group"], [218, 4, 1, "", "plot"], [218, 3, 1, "", "read"], [218, 3, 1, "", "read_geometry"], [218, 3, 1, "", "read_grid"], [218, 3, 1, "", "read_supercell"], [218, 3, 1, "", "to_json"], [218, 3, 1, "", "write"], [218, 3, 1, "", "write_geometry"]], "sisl.io.vasp.doscarSileVASP": [[219, 3, 1, "", "__init__"], [219, 2, 1, "", "base_file"], [219, 3, 1, "", "close"], [219, 3, 1, "", "dir_file"], [219, 2, 1, "", "file"], [219, 3, 1, "", "geometry_group"], [219, 3, 1, "", "read"], [219, 3, 1, "", "read_data"], [219, 3, 1, "", "read_fermi_level"], [219, 3, 1, "", "to_json"], [219, 3, 1, "", "write"]], "sisl.io.vasp.eigenvalSileVASP": [[220, 3, 1, "", "__init__"], [220, 2, 1, "", "base_file"], [220, 3, 1, "", "close"], [220, 3, 1, "", "dir_file"], [220, 2, 1, "", "file"], [220, 3, 1, "", "geometry_group"], [220, 3, 1, "", "read"], [220, 3, 1, "", "read_data"], [220, 3, 1, "", "to_json"], [220, 3, 1, "", "write"]], "sisl.io.vasp.locpotSileVASP": [[221, 3, 1, "", "__init__"], [221, 2, 1, "", "base_file"], [221, 3, 1, "", "close"], [221, 3, 1, "", "dir_file"], [221, 2, 1, "", "file"], [221, 3, 1, "", "geometry_group"], [221, 4, 1, "", "plot"], [221, 3, 1, "", "read"], [221, 3, 1, "", "read_geometry"], [221, 3, 1, "", "read_grid"], [221, 3, 1, "", "read_supercell"], [221, 3, 1, "", "to_json"], [221, 3, 1, "", "write"], [221, 3, 1, "", "write_geometry"]], "sisl.io.vasp.outSileVASP": [[222, 3, 1, "", "__init__"], [222, 3, 1, "", "accuracy_reached"], [222, 2, 1, "", "base_file"], [222, 3, 1, "", "close"], [222, 3, 1, "", "completed"], [222, 3, 1, "", "cpu_time"], [222, 3, 1, "", "dir_file"], [222, 2, 1, "", "file"], [222, 3, 1, "", "geometry_group"], [222, 3, 1, "", "read"], [222, 3, 1, "", "read_energy"], [222, 3, 1, "", "to_json"], [222, 3, 1, "", "write"]], "sisl.io.wannier90": [[223, 1, 1, "", "SileBinWannier90"], [224, 1, 1, "", "SileWannier90"], [225, 1, 1, "", "winSileWannier90"]], "sisl.io.wannier90.SileBinWannier90": [[223, 3, 1, "", "__init__"], [223, 2, 1, "", "base_file"], [223, 3, 1, "", "dir_file"], [223, 2, 1, "", "file"], [223, 3, 1, "", "read"], [223, 3, 1, "", "to_json"], [223, 3, 1, "", "write"]], "sisl.io.wannier90.SileWannier90": [[224, 3, 1, "", "__init__"], [224, 2, 1, "", "base_file"], [224, 3, 1, "", "close"], [224, 3, 1, "", "dir_file"], [224, 2, 1, "", "file"], [224, 3, 1, "", "read"], [224, 3, 1, "", "to_json"], [224, 3, 1, "", "write"]], "sisl.io.wannier90.winSileWannier90": [[225, 3, 1, "", "__init__"], [225, 2, 1, "", "base_file"], [225, 3, 1, "", "close"], [225, 3, 1, "", "dir_file"], [225, 2, 1, "", "file"], [225, 4, 1, "", "plot"], [225, 3, 1, "", "read"], [225, 3, 1, "", "read_geometry"], [225, 3, 1, "", "read_hamiltonian"], [225, 3, 1, "", "read_supercell"], [225, 3, 1, "", "to_json"], [225, 3, 1, "", "write"], [225, 3, 1, "", "write_geometry"], [225, 3, 1, "", "write_supercell"]], "sisl.io.xsfSile": [[226, 3, 1, "", "__init__"], [226, 2, 1, "", "base_file"], [226, 3, 1, "", "close"], [226, 3, 1, "", "dir_file"], [226, 2, 1, "", "file"], [226, 4, 1, "", "plot"], [226, 3, 1, "", "read"], [226, 3, 1, "", "read_geometry"], [226, 3, 1, "", "to_json"], [226, 3, 1, "", "write"], [226, 3, 1, "", "write_geometry"], [226, 3, 1, "", "write_grid"], [226, 3, 1, "", "write_supercell"]], "sisl.io.xyzSile": [[227, 3, 1, "", "__init__"], [227, 2, 1, "", "base_file"], [227, 3, 1, "", "close"], [227, 3, 1, "", "dir_file"], [227, 2, 1, "", "file"], [227, 4, 1, "", "plot"], [227, 3, 1, "", "read"], [227, 3, 1, "", "read_geometry"], [227, 3, 1, "", "to_json"], [227, 3, 1, "", "write"], [227, 3, 1, "", "write_geometry"]], "sisl.mixing": [[44, 1, 1, "", "AdaptiveDIISMixer"], [45, 1, 1, "", "AdaptivePulayMixer"], [46, 1, 1, "", "AndersonMixer"], [47, 1, 1, "", "BaseHistoryWeightMixer"], [48, 1, 1, "", "BaseMixer"], [49, 1, 1, "", "BaseWeightMixer"], [50, 1, 1, "", "DIISMixer"], [51, 1, 1, "", "History"], [52, 1, 1, "", "LinearMixer"], [53, 1, 1, "", "PulayMixer"], [54, 1, 1, "", "StepMixer"]], "sisl.mixing.AdaptiveDIISMixer": [[44, 3, 1, "", "__call__"], [44, 3, 1, "", "__init__"], [44, 3, 1, "", "adjust_weight"], [44, 3, 1, "", "coefficients"], [44, 2, 1, "", "history"], [44, 3, 1, "", "mix"], [44, 3, 1, "", "set_history"], [44, 3, 1, "", "set_weight"], [44, 3, 1, "", "solve_lagrange"], [44, 2, 1, "", "weight"]], "sisl.mixing.AdaptivePulayMixer": [[45, 3, 1, "", "__call__"], [45, 3, 1, "", "__init__"], [45, 3, 1, "", "adjust_weight"], [45, 3, 1, "", "coefficients"], [45, 2, 1, "", "history"], [45, 3, 1, "", "mix"], [45, 3, 1, "", "set_history"], [45, 3, 1, "", "set_weight"], [45, 3, 1, "", "solve_lagrange"], [45, 2, 1, "", "weight"]], "sisl.mixing.AndersonMixer": [[46, 3, 1, "", "__call__"], [46, 3, 1, "", "__init__"], [46, 2, 1, "", "history"], [46, 3, 1, "", "set_history"], [46, 3, 1, "", "set_weight"], [46, 2, 1, "", "weight"]], "sisl.mixing.BaseHistoryWeightMixer": [[47, 3, 1, "", "__call__"], [47, 3, 1, "", "__init__"], [47, 2, 1, "", "history"], [47, 3, 1, "", "set_history"], [47, 3, 1, "", "set_weight"], [47, 2, 1, "", "weight"]], "sisl.mixing.BaseMixer": [[48, 3, 1, "", "__call__"]], "sisl.mixing.BaseWeightMixer": [[49, 3, 1, "", "__call__"], [49, 3, 1, "", "__init__"], [49, 3, 1, "", "set_weight"], [49, 2, 1, "", "weight"]], "sisl.mixing.DIISMixer": [[50, 3, 1, "", "__call__"], [50, 3, 1, "", "__init__"], [50, 3, 1, "", "coefficients"], [50, 2, 1, "", "history"], [50, 3, 1, "", "mix"], [50, 3, 1, "", "set_history"], [50, 3, 1, "", "set_weight"], [50, 3, 1, "", "solve_lagrange"], [50, 2, 1, "", "weight"]], "sisl.mixing.History": [[51, 3, 1, "", "__init__"], [51, 3, 1, "", "append"], [51, 3, 1, "", "clear"], [51, 2, 1, "", "elements"], [51, 4, 1, "", "history_max"], [51, 2, 1, "", "max_elements"]], "sisl.mixing.LinearMixer": [[52, 3, 1, "", "__call__"], [52, 3, 1, "", "__init__"], [52, 2, 1, "", "history"], [52, 3, 1, "", "set_history"], [52, 3, 1, "", "set_weight"], [52, 2, 1, "", "weight"]], "sisl.mixing.PulayMixer": [[53, 3, 1, "", "__call__"], [53, 3, 1, "", "__init__"], [53, 3, 1, "", "coefficients"], [53, 2, 1, "", "history"], [53, 3, 1, "", "mix"], [53, 3, 1, "", "set_history"], [53, 3, 1, "", "set_weight"], [53, 3, 1, "", "solve_lagrange"], [53, 2, 1, "", "weight"]], "sisl.mixing.StepMixer": [[54, 3, 1, "", "__call__"], [54, 3, 1, "", "__init__"], [54, 2, 1, "", "mixer"], [54, 3, 1, "", "next"], [54, 3, 1, "", "yield_chain"], [54, 3, 1, "", "yield_repeat"]], "sisl.oplist": [[55, 1, 1, "", "oplist"]], "sisl.oplist.oplist": [[55, 3, 1, "", "__init__"], [55, 3, 1, "", "append"], [55, 3, 1, "", "clear"], [55, 3, 1, "", "copy"], [55, 3, 1, "", "count"], [55, 3, 1, "", "decorate"], [55, 3, 1, "", "extend"], [55, 3, 1, "", "index"], [55, 3, 1, "", "insert"], [55, 3, 1, "", "pop"], [55, 3, 1, "", "remove"], [55, 3, 1, "", "reverse"], [55, 3, 1, "", "sort"]], "sisl.physics": [[56, 1, 1, "", "BandStructure"], [57, 1, 1, "", "Bloch"], [58, 1, 1, "", "BrillouinZone"], [59, 1, 1, "", "Coefficient"], [60, 1, 1, "", "DensityMatrix"], [61, 1, 1, "", "DynamicalMatrix"], [62, 1, 1, "", "EnergyDensityMatrix"], [63, 1, 1, "", "Hamiltonian"], [64, 1, 1, "", "MonkhorstPack"], [65, 1, 1, "", "Overlap"], [66, 1, 1, "", "RealSpaceSE"], [67, 1, 1, "", "RealSpaceSI"], [68, 1, 1, "", "RecursiveSI"], [69, 1, 1, "", "SelfEnergy"], [70, 1, 1, "", "SemiInfinite"], [71, 1, 1, "", "SparseOrbitalBZ"], [72, 1, 1, "", "SparseOrbitalBZSpin"], [73, 1, 1, "", "Spin"], [74, 1, 1, "", "State"], [75, 1, 1, "", "StateC"], [76, 1, 1, "", "WideBandSE"], [77, 6, 1, "", "bose_einstein"], [78, 6, 1, "", "cold"], [79, 6, 1, "", "degenerate_decouple"], [242, 0, 0, "-", "electron"], [95, 6, 1, "", "fermi_dirac"], [96, 6, 1, "", "gaussian"], [97, 6, 1, "", "get_distribution"], [98, 6, 1, "", "heaviside"], [99, 6, 1, "", "lorentzian"], [244, 0, 0, "-", "phonon"], [108, 6, 1, "", "step_function"]], "sisl.physics.BandStructure": [[56, 3, 1, "", "__init__"], [56, 4, 1, "", "apply"], [56, 2, 1, "", "cell"], [56, 3, 1, "", "copy"], [56, 3, 1, "", "in_primitive"], [56, 3, 1, "", "insert_jump"], [56, 3, 1, "", "iter"], [56, 2, 1, "", "k"], [56, 3, 1, "", "lineark"], [56, 3, 1, "", "lineartick"], [56, 3, 1, "", "merge"], [56, 3, 1, "", "param_circle"], [56, 3, 1, "", "parametrize"], [56, 4, 1, "", "plot"], [56, 2, 1, "", "rcell"], [56, 3, 1, "", "set_parent"], [56, 3, 1, "", "tocartesian"], [56, 3, 1, "", "tolinear"], [56, 3, 1, "", "toreduced"], [56, 3, 1, "", "volume"], [56, 2, 1, "", "weight"], [56, 3, 1, "", "write"]], "sisl.physics.Bloch": [[57, 3, 1, "", "__call__"], [57, 3, 1, "", "__init__"], [57, 2, 1, "", "bloch"], [57, 3, 1, "", "unfold"], [57, 3, 1, "", "unfold_points"]], "sisl.physics.BrillouinZone": [[58, 3, 1, "", "__init__"], [58, 4, 1, "", "apply"], [58, 2, 1, "", "cell"], [58, 3, 1, "", "copy"], [58, 3, 1, "", "in_primitive"], [58, 3, 1, "", "iter"], [58, 2, 1, "", "k"], [58, 3, 1, "", "merge"], [58, 3, 1, "", "param_circle"], [58, 3, 1, "", "parametrize"], [58, 2, 1, "", "rcell"], [58, 3, 1, "", "set_parent"], [58, 3, 1, "", "tocartesian"], [58, 3, 1, "", "toreduced"], [58, 3, 1, "", "volume"], [58, 2, 1, "", "weight"], [58, 3, 1, "", "write"]], "sisl.physics.Coefficient": [[59, 3, 1, "", "__init__"], [59, 4, 1, "", "c"], [59, 3, 1, "", "copy"], [59, 3, 1, "", "degenerate"], [59, 2, 1, "", "dkind"], [59, 2, 1, "", "dtype"], [59, 4, 1, "", "info"], [59, 3, 1, "", "iter"], [59, 4, 1, "", "parent"], [59, 3, 1, "", "remove"], [59, 2, 1, "", "shape"], [59, 3, 1, "", "sub"]], "sisl.physics.DensityMatrix": [[60, 2, 1, "", "D"], [60, 3, 1, "", "Dk"], [60, 3, 1, "", "Rij"], [60, 2, 1, "", "S"], [60, 3, 1, "", "Sk"], [60, 3, 1, "", "__init__"], [60, 3, 1, "", "add"], [60, 3, 1, "", "append"], [60, 3, 1, "", "construct"], [60, 3, 1, "", "copy"], [60, 3, 1, "", "create_construct"], [60, 3, 1, "", "dDk"], [60, 3, 1, "", "dSk"], [60, 3, 1, "", "ddDk"], [60, 3, 1, "", "ddSk"], [60, 3, 1, "", "density"], [60, 2, 1, "", "dim"], [60, 2, 1, "", "dkind"], [60, 2, 1, "", "dtype"], [60, 3, 1, "", "edges"], [60, 3, 1, "", "eig"], [60, 3, 1, "", "eigh"], [60, 3, 1, "", "eigsh"], [60, 3, 1, "", "eliminate_zeros"], [60, 3, 1, "", "empty"], [60, 3, 1, "", "finalize"], [60, 2, 1, "", "finalized"], [60, 3, 1, "", "fromsp"], [60, 2, 1, "", "geometry"], [60, 3, 1, "", "iter_nnz"], [60, 3, 1, "", "iter_orbitals"], [60, 3, 1, "", "mulliken"], [60, 2, 1, "", "nnz"], [60, 2, 1, "", "non_orthogonal"], [60, 3, 1, "", "nonzero"], [60, 3, 1, "", "orbital_momentum"], [60, 2, 1, "", "orthogonal"], [60, 3, 1, "", "prepend"], [60, 3, 1, "", "read"], [60, 3, 1, "", "remove"], [60, 3, 1, "", "remove_orbital"], [60, 3, 1, "", "repeat"], [60, 3, 1, "", "replace"], [60, 3, 1, "", "reset"], [60, 3, 1, "", "rij"], [60, 3, 1, "", "set_nsc"], [60, 2, 1, "", "shape"], [60, 3, 1, "", "spalign"], [60, 2, 1, "", "spin"], [60, 3, 1, "", "spin_align"], [60, 3, 1, "", "spin_rotate"], [60, 3, 1, "", "spsame"], [60, 3, 1, "", "sub"], [60, 3, 1, "", "sub_orbital"], [60, 3, 1, "", "swap"], [60, 3, 1, "", "tile"], [60, 3, 1, "", "toSparseAtom"], [60, 3, 1, "", "tocsr"], [60, 3, 1, "", "transform"], [60, 3, 1, "", "transpose"], [60, 3, 1, "", "trs"], [60, 3, 1, "", "unrepeat"], [60, 3, 1, "", "untile"], [60, 3, 1, "", "write"]], "sisl.physics.DynamicalMatrix": [[61, 2, 1, "", "D"], [61, 3, 1, "", "Dk"], [61, 3, 1, "", "Rij"], [61, 2, 1, "", "S"], [61, 3, 1, "", "Sk"], [61, 3, 1, "", "__init__"], [61, 3, 1, "", "add"], [61, 3, 1, "", "append"], [61, 3, 1, "", "apply_newton"], [61, 3, 1, "", "construct"], [61, 3, 1, "", "copy"], [61, 3, 1, "", "create_construct"], [61, 3, 1, "", "dDk"], [61, 3, 1, "", "dSk"], [61, 3, 1, "", "ddDk"], [61, 3, 1, "", "ddSk"], [61, 2, 1, "", "dim"], [61, 2, 1, "", "dkind"], [61, 2, 1, "", "dtype"], [61, 3, 1, "", "edges"], [61, 3, 1, "", "eig"], [61, 3, 1, "", "eigenmode"], [61, 3, 1, "", "eigenvalue"], [61, 3, 1, "", "eigh"], [61, 3, 1, "", "eigsh"], [61, 3, 1, "", "eliminate_zeros"], [61, 3, 1, "", "empty"], [61, 3, 1, "", "finalize"], [61, 2, 1, "", "finalized"], [61, 3, 1, "", "fromsp"], [61, 2, 1, "", "geometry"], [61, 3, 1, "", "iter_nnz"], [61, 3, 1, "", "iter_orbitals"], [61, 2, 1, "", "nnz"], [61, 2, 1, "", "non_orthogonal"], [61, 3, 1, "", "nonzero"], [61, 2, 1, "", "orthogonal"], [61, 3, 1, "", "prepend"], [61, 3, 1, "", "read"], [61, 3, 1, "", "remove"], [61, 3, 1, "", "remove_orbital"], [61, 3, 1, "", "repeat"], [61, 3, 1, "", "replace"], [61, 3, 1, "", "reset"], [61, 3, 1, "", "rij"], [61, 3, 1, "", "set_nsc"], [61, 2, 1, "", "shape"], [61, 3, 1, "", "spalign"], [61, 3, 1, "", "spsame"], [61, 3, 1, "", "sub"], [61, 3, 1, "", "sub_orbital"], [61, 3, 1, "", "swap"], [61, 3, 1, "", "tile"], [61, 3, 1, "", "toSparseAtom"], [61, 3, 1, "", "tocsr"], [61, 3, 1, "", "transpose"], [61, 3, 1, "", "unrepeat"], [61, 3, 1, "", "untile"], [61, 3, 1, "", "write"]], "sisl.physics.EnergyDensityMatrix": [[62, 2, 1, "", "E"], [62, 3, 1, "", "Ek"], [62, 3, 1, "", "Rij"], [62, 2, 1, "", "S"], [62, 3, 1, "", "Sk"], [62, 3, 1, "", "__init__"], [62, 3, 1, "", "add"], [62, 3, 1, "", "append"], [62, 3, 1, "", "construct"], [62, 3, 1, "", "copy"], [62, 3, 1, "", "create_construct"], [62, 3, 1, "", "dEk"], [62, 3, 1, "", "dSk"], [62, 3, 1, "", "ddEk"], [62, 3, 1, "", "ddSk"], [62, 3, 1, "", "density"], [62, 2, 1, "", "dim"], [62, 2, 1, "", "dkind"], [62, 2, 1, "", "dtype"], [62, 3, 1, "", "edges"], [62, 3, 1, "", "eig"], [62, 3, 1, "", "eigh"], [62, 3, 1, "", "eigsh"], [62, 3, 1, "", "eliminate_zeros"], [62, 3, 1, "", "empty"], [62, 3, 1, "", "finalize"], [62, 2, 1, "", "finalized"], [62, 3, 1, "", "fromsp"], [62, 2, 1, "", "geometry"], [62, 3, 1, "", "iter_nnz"], [62, 3, 1, "", "iter_orbitals"], [62, 3, 1, "", "mulliken"], [62, 2, 1, "", "nnz"], [62, 2, 1, "", "non_orthogonal"], [62, 3, 1, "", "nonzero"], [62, 2, 1, "", "orthogonal"], [62, 3, 1, "", "prepend"], [62, 3, 1, "", "read"], [62, 3, 1, "", "remove"], [62, 3, 1, "", "remove_orbital"], [62, 3, 1, "", "repeat"], [62, 3, 1, "", "replace"], [62, 3, 1, "", "reset"], [62, 3, 1, "", "rij"], [62, 3, 1, "", "set_nsc"], [62, 2, 1, "", "shape"], [62, 3, 1, "", "shift"], [62, 3, 1, "", "spalign"], [62, 2, 1, "", "spin"], [62, 3, 1, "", "spin_align"], [62, 3, 1, "", "spin_rotate"], [62, 3, 1, "", "spsame"], [62, 3, 1, "", "sub"], [62, 3, 1, "", "sub_orbital"], [62, 3, 1, "", "swap"], [62, 3, 1, "", "tile"], [62, 3, 1, "", "toSparseAtom"], [62, 3, 1, "", "tocsr"], [62, 3, 1, "", "transform"], [62, 3, 1, "", "transpose"], [62, 3, 1, "", "trs"], [62, 3, 1, "", "unrepeat"], [62, 3, 1, "", "untile"], [62, 3, 1, "", "write"]], "sisl.physics.Hamiltonian": [[63, 2, 1, "", "H"], [63, 3, 1, "", "Hk"], [63, 3, 1, "", "Rij"], [63, 2, 1, "", "S"], [63, 3, 1, "", "Sk"], [63, 3, 1, "", "__init__"], [63, 3, 1, "", "add"], [63, 3, 1, "", "append"], [63, 3, 1, "", "construct"], [63, 3, 1, "", "copy"], [63, 3, 1, "", "create_construct"], [63, 3, 1, "", "dHk"], [63, 3, 1, "", "dSk"], [63, 3, 1, "", "ddHk"], [63, 3, 1, "", "ddSk"], [63, 2, 1, "", "dim"], [63, 2, 1, "", "dkind"], [63, 2, 1, "", "dtype"], [63, 3, 1, "", "edges"], [63, 3, 1, "", "eig"], [63, 3, 1, "", "eigenstate"], [63, 3, 1, "", "eigenvalue"], [63, 3, 1, "", "eigh"], [63, 3, 1, "", "eigsh"], [63, 3, 1, "", "eliminate_zeros"], [63, 3, 1, "", "empty"], [63, 3, 1, "", "fermi_level"], [63, 3, 1, "", "finalize"], [63, 2, 1, "", "finalized"], [63, 3, 1, "", "fromsp"], [63, 2, 1, "", "geometry"], [63, 3, 1, "", "iter_nnz"], [63, 3, 1, "", "iter_orbitals"], [63, 2, 1, "", "nnz"], [63, 2, 1, "", "non_orthogonal"], [63, 3, 1, "", "nonzero"], [63, 2, 1, "", "orthogonal"], [63, 4, 1, "", "plot"], [63, 3, 1, "", "prepend"], [63, 3, 1, "", "read"], [63, 3, 1, "", "remove"], [63, 3, 1, "", "remove_orbital"], [63, 3, 1, "", "repeat"], [63, 3, 1, "", "replace"], [63, 3, 1, "", "reset"], [63, 3, 1, "", "rij"], [63, 3, 1, "", "set_nsc"], [63, 2, 1, "", "shape"], [63, 3, 1, "", "shift"], [63, 3, 1, "", "spalign"], [63, 2, 1, "", "spin"], [63, 3, 1, "", "spsame"], [63, 3, 1, "", "sub"], [63, 3, 1, "", "sub_orbital"], [63, 3, 1, "", "swap"], [63, 3, 1, "", "tile"], [63, 3, 1, "", "toSparseAtom"], [63, 3, 1, "", "tocsr"], [63, 3, 1, "", "transform"], [63, 3, 1, "", "transpose"], [63, 3, 1, "", "trs"], [63, 3, 1, "", "unrepeat"], [63, 3, 1, "", "untile"], [63, 3, 1, "", "write"]], "sisl.physics.MonkhorstPack": [[64, 3, 1, "", "__init__"], [64, 4, 1, "", "apply"], [64, 2, 1, "", "cell"], [64, 3, 1, "", "copy"], [64, 3, 1, "", "grid"], [64, 3, 1, "", "in_primitive"], [64, 3, 1, "", "iter"], [64, 2, 1, "", "k"], [64, 3, 1, "", "merge"], [64, 3, 1, "", "param_circle"], [64, 3, 1, "", "parametrize"], [64, 2, 1, "", "rcell"], [64, 3, 1, "", "replace"], [64, 3, 1, "", "set_parent"], [64, 3, 1, "", "tocartesian"], [64, 3, 1, "", "toreduced"], [64, 3, 1, "", "volume"], [64, 2, 1, "", "weight"], [64, 3, 1, "", "write"]], "sisl.physics.Overlap": [[65, 3, 1, "", "Rij"], [65, 2, 1, "", "S"], [65, 3, 1, "", "Sk"], [65, 3, 1, "", "__init__"], [65, 3, 1, "", "add"], [65, 3, 1, "", "append"], [65, 3, 1, "", "construct"], [65, 3, 1, "", "copy"], [65, 3, 1, "", "create_construct"], [65, 3, 1, "", "dSk"], [65, 3, 1, "", "ddSk"], [65, 2, 1, "", "dim"], [65, 2, 1, "", "dkind"], [65, 2, 1, "", "dtype"], [65, 3, 1, "", "edges"], [65, 3, 1, "", "eig"], [65, 3, 1, "", "eigh"], [65, 3, 1, "", "eigsh"], [65, 3, 1, "", "eliminate_zeros"], [65, 3, 1, "", "empty"], [65, 3, 1, "", "finalize"], [65, 2, 1, "", "finalized"], [65, 3, 1, "", "fromsp"], [65, 2, 1, "", "geometry"], [65, 3, 1, "", "iter_nnz"], [65, 3, 1, "", "iter_orbitals"], [65, 2, 1, "", "nnz"], [65, 2, 1, "", "non_orthogonal"], [65, 3, 1, "", "nonzero"], [65, 2, 1, "", "orthogonal"], [65, 3, 1, "", "prepend"], [65, 3, 1, "", "read"], [65, 3, 1, "", "remove"], [65, 3, 1, "", "remove_orbital"], [65, 3, 1, "", "repeat"], [65, 3, 1, "", "replace"], [65, 3, 1, "", "reset"], [65, 3, 1, "", "rij"], [65, 3, 1, "", "set_nsc"], [65, 2, 1, "", "shape"], [65, 3, 1, "", "spalign"], [65, 3, 1, "", "spsame"], [65, 3, 1, "", "sub"], [65, 3, 1, "", "sub_orbital"], [65, 3, 1, "", "swap"], [65, 3, 1, "", "tile"], [65, 3, 1, "", "toSparseAtom"], [65, 3, 1, "", "tocsr"], [65, 3, 1, "", "transpose"], [65, 3, 1, "", "unrepeat"], [65, 3, 1, "", "untile"], [65, 3, 1, "", "write"]], "sisl.physics.RealSpaceSE": [[66, 3, 1, "", "__init__"], [66, 3, 1, "", "broadening_matrix"], [66, 3, 1, "", "clear"], [66, 3, 1, "", "green"], [66, 3, 1, "", "initialize"], [66, 3, 1, "", "real_space_coupling"], [66, 3, 1, "", "real_space_parent"], [66, 3, 1, "", "se2broadening"], [66, 3, 1, "", "self_energy"], [66, 3, 1, "", "set_options"]], "sisl.physics.RealSpaceSI": [[67, 3, 1, "", "__init__"], [67, 3, 1, "", "broadening_matrix"], [67, 3, 1, "", "clear"], [67, 3, 1, "", "green"], [67, 3, 1, "", "initialize"], [67, 3, 1, "", "real_space_coupling"], [67, 3, 1, "", "real_space_parent"], [67, 3, 1, "", "se2broadening"], [67, 3, 1, "", "self_energy"], [67, 3, 1, "", "set_options"]], "sisl.physics.RecursiveSI": [[68, 3, 1, "", "__init__"], [68, 3, 1, "", "broadening_matrix"], [68, 3, 1, "", "green"], [68, 3, 1, "", "se2broadening"], [68, 3, 1, "", "self_energy"], [68, 3, 1, "", "self_energy_lr"]], "sisl.physics.SelfEnergy": [[69, 3, 1, "", "__init__"], [69, 3, 1, "", "broadening_matrix"], [69, 3, 1, "", "se2broadening"], [69, 3, 1, "", "self_energy"]], "sisl.physics.SemiInfinite": [[70, 3, 1, "", "__init__"], [70, 3, 1, "", "broadening_matrix"], [70, 3, 1, "", "se2broadening"], [70, 3, 1, "", "self_energy"]], "sisl.physics.SparseOrbitalBZ": [[71, 3, 1, "", "Rij"], [71, 2, 1, "", "S"], [71, 3, 1, "", "Sk"], [71, 3, 1, "", "__init__"], [71, 3, 1, "", "add"], [71, 3, 1, "", "append"], [71, 3, 1, "", "construct"], [71, 3, 1, "", "copy"], [71, 3, 1, "", "create_construct"], [71, 3, 1, "", "dSk"], [71, 3, 1, "", "ddSk"], [71, 2, 1, "", "dim"], [71, 2, 1, "", "dkind"], [71, 2, 1, "", "dtype"], [71, 3, 1, "", "edges"], [71, 3, 1, "", "eig"], [71, 3, 1, "", "eigh"], [71, 3, 1, "", "eigsh"], [71, 3, 1, "", "eliminate_zeros"], [71, 3, 1, "", "empty"], [71, 3, 1, "", "finalize"], [71, 2, 1, "", "finalized"], [71, 3, 1, "", "fromsp"], [71, 2, 1, "", "geometry"], [71, 3, 1, "", "iter_nnz"], [71, 3, 1, "", "iter_orbitals"], [71, 2, 1, "", "nnz"], [71, 2, 1, "", "non_orthogonal"], [71, 3, 1, "", "nonzero"], [71, 2, 1, "", "orthogonal"], [71, 3, 1, "", "prepend"], [71, 3, 1, "", "remove"], [71, 3, 1, "", "remove_orbital"], [71, 3, 1, "", "repeat"], [71, 3, 1, "", "replace"], [71, 3, 1, "", "reset"], [71, 3, 1, "", "rij"], [71, 3, 1, "", "set_nsc"], [71, 2, 1, "", "shape"], [71, 3, 1, "", "spalign"], [71, 3, 1, "", "spsame"], [71, 3, 1, "", "sub"], [71, 3, 1, "", "sub_orbital"], [71, 3, 1, "", "swap"], [71, 3, 1, "", "tile"], [71, 3, 1, "", "toSparseAtom"], [71, 3, 1, "", "tocsr"], [71, 3, 1, "", "transpose"], [71, 3, 1, "", "unrepeat"], [71, 3, 1, "", "untile"]], "sisl.physics.SparseOrbitalBZSpin": [[72, 3, 1, "", "Rij"], [72, 2, 1, "", "S"], [72, 3, 1, "", "Sk"], [72, 3, 1, "", "__init__"], [72, 3, 1, "", "add"], [72, 3, 1, "", "append"], [72, 3, 1, "", "construct"], [72, 3, 1, "", "copy"], [72, 3, 1, "", "create_construct"], [72, 3, 1, "", "dSk"], [72, 3, 1, "", "ddSk"], [72, 2, 1, "", "dim"], [72, 2, 1, "", "dkind"], [72, 2, 1, "", "dtype"], [72, 3, 1, "", "edges"], [72, 3, 1, "", "eig"], [72, 3, 1, "", "eigh"], [72, 3, 1, "", "eigsh"], [72, 3, 1, "", "eliminate_zeros"], [72, 3, 1, "", "empty"], [72, 3, 1, "", "finalize"], [72, 2, 1, "", "finalized"], [72, 3, 1, "", "fromsp"], [72, 2, 1, "", "geometry"], [72, 3, 1, "", "iter_nnz"], [72, 3, 1, "", "iter_orbitals"], [72, 2, 1, "", "nnz"], [72, 2, 1, "", "non_orthogonal"], [72, 3, 1, "", "nonzero"], [72, 2, 1, "", "orthogonal"], [72, 3, 1, "", "prepend"], [72, 3, 1, "", "remove"], [72, 3, 1, "", "remove_orbital"], [72, 3, 1, "", "repeat"], [72, 3, 1, "", "replace"], [72, 3, 1, "", "reset"], [72, 3, 1, "", "rij"], [72, 3, 1, "", "set_nsc"], [72, 2, 1, "", "shape"], [72, 3, 1, "", "spalign"], [72, 2, 1, "", "spin"], [72, 3, 1, "", "spsame"], [72, 3, 1, "", "sub"], [72, 3, 1, "", "sub_orbital"], [72, 3, 1, "", "swap"], [72, 3, 1, "", "tile"], [72, 3, 1, "", "toSparseAtom"], [72, 3, 1, "", "tocsr"], [72, 3, 1, "", "transform"], [72, 3, 1, "", "transpose"], [72, 3, 1, "", "trs"], [72, 3, 1, "", "unrepeat"], [72, 3, 1, "", "untile"]], "sisl.physics.Spin": [[73, 4, 1, "", "NONCOLINEAR"], [73, 4, 1, "", "POLARIZED"], [73, 4, 1, "", "SPINORBIT"], [73, 4, 1, "", "UNPOLARIZED"], [73, 4, 1, "", "X"], [73, 4, 1, "", "Y"], [73, 4, 1, "", "Z"], [73, 3, 1, "", "__init__"], [73, 3, 1, "", "copy"], [73, 2, 1, "", "dkind"], [73, 2, 1, "", "dtype"], [73, 2, 1, "", "is_colinear"], [73, 2, 1, "", "is_diagonal"], [73, 2, 1, "", "is_noncolinear"], [73, 2, 1, "", "is_polarized"], [73, 2, 1, "", "is_spinorbit"], [73, 2, 1, "", "is_unpolarized"], [73, 2, 1, "", "kind"], [73, 2, 1, "", "size"], [73, 2, 1, "", "spinor"]], "sisl.physics.State": [[74, 3, 1, "", "__init__"], [74, 3, 1, "", "align_norm"], [74, 3, 1, "", "align_phase"], [74, 3, 1, "", "change_gauge"], [74, 3, 1, "", "copy"], [74, 2, 1, "", "dkind"], [74, 2, 1, "", "dtype"], [74, 4, 1, "", "info"], [74, 3, 1, "", "inner"], [74, 3, 1, "", "ipr"], [74, 3, 1, "", "iter"], [74, 3, 1, "", "norm"], [74, 3, 1, "", "norm2"], [74, 3, 1, "", "normalize"], [74, 3, 1, "", "outer"], [74, 4, 1, "", "parent"], [74, 3, 1, "", "phase"], [74, 3, 1, "", "remove"], [74, 3, 1, "", "rotate"], [74, 2, 1, "", "shape"], [74, 4, 1, "", "state"], [74, 3, 1, "", "sub"], [74, 3, 1, "", "tile"], [74, 3, 1, "", "translate"]], "sisl.physics.StateC": [[75, 3, 1, "", "__init__"], [75, 3, 1, "", "align_norm"], [75, 3, 1, "", "align_phase"], [75, 3, 1, "", "asCoefficient"], [75, 3, 1, "", "asState"], [75, 4, 1, "", "c"], [75, 3, 1, "", "change_gauge"], [75, 3, 1, "", "copy"], [75, 3, 1, "", "degenerate"], [75, 3, 1, "", "derivative"], [75, 2, 1, "", "dkind"], [75, 2, 1, "", "dtype"], [75, 4, 1, "", "info"], [75, 3, 1, "", "inner"], [75, 3, 1, "", "ipr"], [75, 3, 1, "", "iter"], [75, 3, 1, "", "norm"], [75, 3, 1, "", "norm2"], [75, 3, 1, "", "normalize"], [75, 3, 1, "", "outer"], [75, 4, 1, "", "parent"], [75, 3, 1, "", "phase"], [75, 3, 1, "", "remove"], [75, 3, 1, "", "rotate"], [75, 2, 1, "", "shape"], [75, 3, 1, "", "sort"], [75, 4, 1, "", "state"], [75, 3, 1, "", "sub"], [75, 3, 1, "", "tile"], [75, 3, 1, "", "translate"]], "sisl.physics.WideBandSE": [[76, 3, 1, "", "__init__"], [76, 3, 1, "", "broadening_matrix"], [76, 3, 1, "", "se2broadening"], [76, 3, 1, "", "self_energy"]], "sisl.physics.electron": [[80, 6, 1, "", "COP"], [81, 1, 1, "", "CoefficientElectron"], [82, 6, 1, "", "DOS"], [83, 1, 1, "", "EigenstateElectron"], [84, 1, 1, "", "EigenvalueElectron"], [85, 1, 1, "", "EigenvectorElectron"], [86, 6, 1, "", "PDOS"], [87, 1, 1, "", "StateCElectron"], [88, 1, 1, "", "StateElectron"], [89, 6, 1, "", "berry_curvature"], [90, 6, 1, "", "berry_phase"], [91, 6, 1, "", "conductivity"], [92, 6, 1, "", "spin_moment"], [93, 6, 1, "", "spin_squared"], [94, 6, 1, "", "wavefunction"]], "sisl.physics.electron.CoefficientElectron": [[81, 3, 1, "", "__init__"], [81, 4, 1, "", "c"], [81, 3, 1, "", "copy"], [81, 3, 1, "", "degenerate"], [81, 2, 1, "", "dkind"], [81, 2, 1, "", "dtype"], [81, 4, 1, "", "info"], [81, 3, 1, "", "iter"], [81, 4, 1, "", "parent"], [81, 3, 1, "", "remove"], [81, 2, 1, "", "shape"], [81, 3, 1, "", "sub"]], "sisl.physics.electron.EigenstateElectron": [[83, 3, 1, "", "COHP"], [83, 3, 1, "", "COOP"], [83, 3, 1, "", "COP"], [83, 3, 1, "", "DOS"], [83, 3, 1, "", "PDOS"], [83, 3, 1, "", "Sk"], [83, 3, 1, "", "__init__"], [83, 3, 1, "", "align_norm"], [83, 3, 1, "", "align_phase"], [83, 3, 1, "", "asCoefficient"], [83, 3, 1, "", "asState"], [83, 3, 1, "", "berry_curvature"], [83, 4, 1, "", "c"], [83, 3, 1, "", "change_gauge"], [83, 3, 1, "", "copy"], [83, 3, 1, "", "degenerate"], [83, 3, 1, "", "derivative"], [83, 2, 1, "", "dkind"], [83, 2, 1, "", "dtype"], [83, 3, 1, "", "effective_mass"], [83, 2, 1, "", "eig"], [83, 4, 1, "", "info"], [83, 3, 1, "", "inner"], [83, 3, 1, "", "ipr"], [83, 3, 1, "", "iter"], [83, 3, 1, "", "norm"], [83, 3, 1, "", "norm2"], [83, 3, 1, "", "normalize"], [83, 3, 1, "", "occupation"], [83, 3, 1, "", "outer"], [83, 4, 1, "", "parent"], [83, 3, 1, "", "phase"], [83, 4, 1, "", "plot"], [83, 3, 1, "", "remove"], [83, 3, 1, "", "rotate"], [83, 2, 1, "", "shape"], [83, 3, 1, "", "sort"], [83, 3, 1, "", "spin_moment"], [83, 4, 1, "", "state"], [83, 3, 1, "", "sub"], [83, 3, 1, "", "tile"], [83, 3, 1, "", "translate"], [83, 3, 1, "", "velocity"], [83, 3, 1, "", "wavefunction"]], "sisl.physics.electron.EigenvalueElectron": [[84, 3, 1, "", "DOS"], [84, 3, 1, "", "__init__"], [84, 4, 1, "", "c"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "degenerate"], [84, 2, 1, "", "dkind"], [84, 2, 1, "", "dtype"], [84, 2, 1, "", "eig"], [84, 4, 1, "", "info"], [84, 3, 1, "", "iter"], [84, 3, 1, "", "occupation"], [84, 4, 1, "", "parent"], [84, 3, 1, "", "remove"], [84, 2, 1, "", "shape"], [84, 3, 1, "", "sub"]], "sisl.physics.electron.EigenvectorElectron": [[85, 3, 1, "", "Sk"], [85, 3, 1, "", "__init__"], [85, 3, 1, "", "align_norm"], [85, 3, 1, "", "align_phase"], [85, 3, 1, "", "change_gauge"], [85, 3, 1, "", "copy"], [85, 2, 1, "", "dkind"], [85, 2, 1, "", "dtype"], [85, 4, 1, "", "info"], [85, 3, 1, "", "inner"], [85, 3, 1, "", "ipr"], [85, 3, 1, "", "iter"], [85, 3, 1, "", "norm"], [85, 3, 1, "", "norm2"], [85, 3, 1, "", "normalize"], [85, 3, 1, "", "outer"], [85, 4, 1, "", "parent"], [85, 3, 1, "", "phase"], [85, 3, 1, "", "remove"], [85, 3, 1, "", "rotate"], [85, 2, 1, "", "shape"], [85, 3, 1, "", "spin_moment"], [85, 4, 1, "", "state"], [85, 3, 1, "", "sub"], [85, 3, 1, "", "tile"], [85, 3, 1, "", "translate"], [85, 3, 1, "", "wavefunction"]], "sisl.physics.electron.StateCElectron": [[87, 3, 1, "", "Sk"], [87, 3, 1, "", "__init__"], [87, 3, 1, "", "align_norm"], [87, 3, 1, "", "align_phase"], [87, 3, 1, "", "asCoefficient"], [87, 3, 1, "", "asState"], [87, 3, 1, "", "berry_curvature"], [87, 4, 1, "", "c"], [87, 3, 1, "", "change_gauge"], [87, 3, 1, "", "copy"], [87, 3, 1, "", "degenerate"], [87, 3, 1, "", "derivative"], [87, 2, 1, "", "dkind"], [87, 2, 1, "", "dtype"], [87, 3, 1, "", "effective_mass"], [87, 4, 1, "", "info"], [87, 3, 1, "", "inner"], [87, 3, 1, "", "ipr"], [87, 3, 1, "", "iter"], [87, 3, 1, "", "norm"], [87, 3, 1, "", "norm2"], [87, 3, 1, "", "normalize"], [87, 3, 1, "", "outer"], [87, 4, 1, "", "parent"], [87, 3, 1, "", "phase"], [87, 3, 1, "", "remove"], [87, 3, 1, "", "rotate"], [87, 2, 1, "", "shape"], [87, 3, 1, "", "sort"], [87, 3, 1, "", "spin_moment"], [87, 4, 1, "", "state"], [87, 3, 1, "", "sub"], [87, 3, 1, "", "tile"], [87, 3, 1, "", "translate"], [87, 3, 1, "", "velocity"], [87, 3, 1, "", "wavefunction"]], "sisl.physics.electron.StateElectron": [[88, 3, 1, "", "Sk"], [88, 3, 1, "", "__init__"], [88, 3, 1, "", "align_norm"], [88, 3, 1, "", "align_phase"], [88, 3, 1, "", "change_gauge"], [88, 3, 1, "", "copy"], [88, 2, 1, "", "dkind"], [88, 2, 1, "", "dtype"], [88, 4, 1, "", "info"], [88, 3, 1, "", "inner"], [88, 3, 1, "", "ipr"], [88, 3, 1, "", "iter"], [88, 3, 1, "", "norm"], [88, 3, 1, "", "norm2"], [88, 3, 1, "", "normalize"], [88, 3, 1, "", "outer"], [88, 4, 1, "", "parent"], [88, 3, 1, "", "phase"], [88, 3, 1, "", "remove"], [88, 3, 1, "", "rotate"], [88, 2, 1, "", "shape"], [88, 3, 1, "", "spin_moment"], [88, 4, 1, "", "state"], [88, 3, 1, "", "sub"], [88, 3, 1, "", "tile"], [88, 3, 1, "", "translate"], [88, 3, 1, "", "wavefunction"]], "sisl.physics.phonon": [[100, 1, 1, "", "CoefficientPhonon"], [101, 6, 1, "", "DOS"], [102, 1, 1, "", "EigenmodePhonon"], [103, 1, 1, "", "EigenvaluePhonon"], [104, 1, 1, "", "EigenvectorPhonon"], [105, 1, 1, "", "ModeCPhonon"], [106, 1, 1, "", "ModePhonon"], [107, 6, 1, "", "PDOS"]], "sisl.physics.phonon.CoefficientPhonon": [[100, 3, 1, "", "__init__"], [100, 4, 1, "", "c"], [100, 3, 1, "", "copy"], [100, 3, 1, "", "degenerate"], [100, 2, 1, "", "dkind"], [100, 2, 1, "", "dtype"], [100, 4, 1, "", "info"], [100, 3, 1, "", "iter"], [100, 4, 1, "", "parent"], [100, 3, 1, "", "remove"], [100, 2, 1, "", "shape"], [100, 3, 1, "", "sub"]], "sisl.physics.phonon.EigenmodePhonon": [[102, 3, 1, "", "DOS"], [102, 3, 1, "", "PDOS"], [102, 3, 1, "", "__init__"], [102, 3, 1, "", "align_norm"], [102, 3, 1, "", "align_phase"], [102, 3, 1, "", "asCoefficient"], [102, 3, 1, "", "asState"], [102, 4, 1, "", "c"], [102, 3, 1, "", "change_gauge"], [102, 3, 1, "", "copy"], [102, 3, 1, "", "degenerate"], [102, 3, 1, "", "derivative"], [102, 3, 1, "", "displacement"], [102, 2, 1, "", "dkind"], [102, 2, 1, "", "dtype"], [102, 2, 1, "", "hw"], [102, 4, 1, "", "info"], [102, 3, 1, "", "inner"], [102, 3, 1, "", "ipr"], [102, 3, 1, "", "iter"], [102, 2, 1, "", "mode"], [102, 3, 1, "", "norm"], [102, 3, 1, "", "norm2"], [102, 3, 1, "", "normalize"], [102, 3, 1, "", "occupation"], [102, 3, 1, "", "outer"], [102, 4, 1, "", "parent"], [102, 3, 1, "", "phase"], [102, 3, 1, "", "remove"], [102, 3, 1, "", "rotate"], [102, 2, 1, "", "shape"], [102, 3, 1, "", "sort"], [102, 4, 1, "", "state"], [102, 3, 1, "", "sub"], [102, 3, 1, "", "tile"], [102, 3, 1, "", "translate"], [102, 3, 1, "", "velocity"]], "sisl.physics.phonon.EigenvaluePhonon": [[103, 3, 1, "", "DOS"], [103, 3, 1, "", "__init__"], [103, 4, 1, "", "c"], [103, 3, 1, "", "copy"], [103, 3, 1, "", "degenerate"], [103, 2, 1, "", "dkind"], [103, 2, 1, "", "dtype"], [103, 2, 1, "", "hw"], [103, 4, 1, "", "info"], [103, 3, 1, "", "iter"], [103, 3, 1, "", "occupation"], [103, 4, 1, "", "parent"], [103, 3, 1, "", "remove"], [103, 2, 1, "", "shape"], [103, 3, 1, "", "sub"]], "sisl.physics.phonon.EigenvectorPhonon": [[104, 3, 1, "", "__init__"], [104, 3, 1, "", "align_norm"], [104, 3, 1, "", "align_phase"], [104, 3, 1, "", "change_gauge"], [104, 3, 1, "", "copy"], [104, 2, 1, "", "dkind"], [104, 2, 1, "", "dtype"], [104, 4, 1, "", "info"], [104, 3, 1, "", "inner"], [104, 3, 1, "", "ipr"], [104, 3, 1, "", "iter"], [104, 2, 1, "", "mode"], [104, 3, 1, "", "norm"], [104, 3, 1, "", "norm2"], [104, 3, 1, "", "normalize"], [104, 3, 1, "", "outer"], [104, 4, 1, "", "parent"], [104, 3, 1, "", "phase"], [104, 3, 1, "", "remove"], [104, 3, 1, "", "rotate"], [104, 2, 1, "", "shape"], [104, 4, 1, "", "state"], [104, 3, 1, "", "sub"], [104, 3, 1, "", "tile"], [104, 3, 1, "", "translate"]], "sisl.physics.phonon.ModeCPhonon": [[105, 3, 1, "", "__init__"], [105, 3, 1, "", "align_norm"], [105, 3, 1, "", "align_phase"], [105, 3, 1, "", "asCoefficient"], [105, 3, 1, "", "asState"], [105, 4, 1, "", "c"], [105, 3, 1, "", "change_gauge"], [105, 3, 1, "", "copy"], [105, 3, 1, "", "degenerate"], [105, 3, 1, "", "derivative"], [105, 2, 1, "", "dkind"], [105, 2, 1, "", "dtype"], [105, 4, 1, "", "info"], [105, 3, 1, "", "inner"], [105, 3, 1, "", "ipr"], [105, 3, 1, "", "iter"], [105, 2, 1, "", "mode"], [105, 3, 1, "", "norm"], [105, 3, 1, "", "norm2"], [105, 3, 1, "", "normalize"], [105, 3, 1, "", "outer"], [105, 4, 1, "", "parent"], [105, 3, 1, "", "phase"], [105, 3, 1, "", "remove"], [105, 3, 1, "", "rotate"], [105, 2, 1, "", "shape"], [105, 3, 1, "", "sort"], [105, 4, 1, "", "state"], [105, 3, 1, "", "sub"], [105, 3, 1, "", "tile"], [105, 3, 1, "", "translate"], [105, 3, 1, "", "velocity"]], "sisl.physics.phonon.ModePhonon": [[106, 3, 1, "", "__init__"], [106, 3, 1, "", "align_norm"], [106, 3, 1, "", "align_phase"], [106, 3, 1, "", "change_gauge"], [106, 3, 1, "", "copy"], [106, 2, 1, "", "dkind"], [106, 2, 1, "", "dtype"], [106, 4, 1, "", "info"], [106, 3, 1, "", "inner"], [106, 3, 1, "", "ipr"], [106, 3, 1, "", "iter"], [106, 2, 1, "", "mode"], [106, 3, 1, "", "norm"], [106, 3, 1, "", "norm2"], [106, 3, 1, "", "normalize"], [106, 3, 1, "", "outer"], [106, 4, 1, "", "parent"], [106, 3, 1, "", "phase"], [106, 3, 1, "", "remove"], [106, 3, 1, "", "rotate"], [106, 2, 1, "", "shape"], [106, 4, 1, "", "state"], [106, 3, 1, "", "sub"], [106, 3, 1, "", "tile"], [106, 3, 1, "", "translate"]], "sisl.shape": [[109, 1, 1, "", "Cube"], [110, 1, 1, "", "Cuboid"], [111, 1, 1, "", "Ellipsoid"], [112, 1, 1, "", "NullShape"], [113, 1, 1, "", "Shape"], [114, 1, 1, "", "Sphere"]], "sisl.shape.Cube": [[109, 3, 1, "", "__init__"], [109, 2, 1, "", "center"], [109, 3, 1, "", "copy"], [109, 2, 1, "", "edge_length"], [109, 3, 1, "", "expand"], [109, 2, 1, "", "origin"], [109, 3, 1, "", "scale"], [109, 4, 1, "", "to"], [109, 3, 1, "", "toCuboid"], [109, 3, 1, "", "toEllipsoid"], [109, 3, 1, "", "toSphere"], [109, 3, 1, "", "volume"], [109, 3, 1, "", "within"], [109, 3, 1, "", "within_index"]], "sisl.shape.Cuboid": [[110, 3, 1, "", "__init__"], [110, 2, 1, "", "center"], [110, 3, 1, "", "copy"], [110, 2, 1, "", "edge_length"], [110, 3, 1, "", "expand"], [110, 2, 1, "", "origin"], [110, 3, 1, "", "scale"], [110, 4, 1, "", "to"], [110, 3, 1, "", "toCuboid"], [110, 3, 1, "", "toEllipsoid"], [110, 3, 1, "", "toSphere"], [110, 3, 1, "", "volume"], [110, 3, 1, "", "within"], [110, 3, 1, "", "within_index"]], "sisl.shape.Ellipsoid": [[111, 3, 1, "", "__init__"], [111, 2, 1, "", "center"], [111, 3, 1, "", "copy"], [111, 3, 1, "", "expand"], [111, 2, 1, "", "radius"], [111, 3, 1, "", "scale"], [111, 4, 1, "", "to"], [111, 3, 1, "", "toCuboid"], [111, 3, 1, "", "toEllipsoid"], [111, 3, 1, "", "toSphere"], [111, 3, 1, "", "volume"], [111, 3, 1, "", "within"], [111, 3, 1, "", "within_index"]], "sisl.shape.NullShape": [[112, 3, 1, "", "__init__"], [112, 2, 1, "", "center"], [112, 3, 1, "", "expand"], [112, 3, 1, "", "scale"], [112, 4, 1, "", "to"], [112, 3, 1, "", "toCuboid"], [112, 3, 1, "", "toEllipsoid"], [112, 3, 1, "", "toSphere"], [112, 3, 1, "", "volume"], [112, 3, 1, "", "within"], [112, 3, 1, "", "within_index"]], "sisl.shape.Shape": [[113, 3, 1, "", "__init__"], [113, 2, 1, "", "center"], [113, 3, 1, "", "scale"], [113, 4, 1, "", "to"], [113, 3, 1, "", "toCuboid"], [113, 3, 1, "", "toEllipsoid"], [113, 3, 1, "", "toSphere"], [113, 3, 1, "", "within"], [113, 3, 1, "", "within_index"]], "sisl.shape.Sphere": [[114, 3, 1, "", "__init__"], [114, 2, 1, "", "center"], [114, 3, 1, "", "copy"], [114, 3, 1, "", "expand"], [114, 2, 1, "", "radius"], [114, 3, 1, "", "scale"], [114, 4, 1, "", "to"], [114, 3, 1, "", "toCuboid"], [114, 3, 1, "", "toEllipsoid"], [114, 3, 1, "", "toSphere"], [114, 3, 1, "", "volume"], [114, 3, 1, "", "within"], [114, 3, 1, "", "within_index"]], "sisl.unit": [[247, 0, 0, "-", "siesta"], [115, 6, 1, "", "unit_convert"], [116, 6, 1, "", "unit_default"], [117, 6, 1, "", "unit_group"], [118, 5, 1, "", "units"]], "sisl.utils": [[119, 1, 1, "", "PropertyDict"], [120, 6, 1, "", "angle"], [121, 6, 1, "", "direction"], [122, 6, 1, "", "erange"], [123, 6, 1, "", "fileindex"], [124, 6, 1, "", "iter_shape"], [125, 6, 1, "", "list2str"], [126, 6, 1, "", "lstranges"], [127, 6, 1, "", "math_eval"], [128, 6, 1, "", "str_spec"], [129, 6, 1, "", "strmap"], [130, 6, 1, "", "strseq"]], "sisl.utils.PropertyDict": [[119, 3, 1, "", "__init__"], [119, 3, 1, "", "clear"], [119, 3, 1, "", "copy"], [119, 3, 1, "", "fromkeys"], [119, 3, 1, "", "get"], [119, 3, 1, "", "items"], [119, 3, 1, "", "keys"], [119, 3, 1, "", "pop"], [119, 3, 1, "", "popitem"], [119, 3, 1, "", "setdefault"], [119, 3, 1, "", "update"], [119, 3, 1, "", "values"]], "sisl.viz": [[251, 1, 1, "", "Animation"], [252, 1, 1, "", "MultiplePlot"], [253, 1, 1, "", "Plot"], [254, 1, 1, "", "SubPlots"]], "sisl.viz.Animation": [[251, 3, 1, "", "__init__"], [251, 3, 1, "", "add_children"], [251, 3, 1, "", "add_shortcut"], [251, 3, 1, "", "animated"], [251, 4, 1, "", "backends"], [251, 3, 1, "", "call_shortcut"], [251, 3, 1, "", "clone"], [251, 3, 1, "", "copy"], [251, 3, 1, "", "dispatch_event"], [251, 4, 1, "", "entry_points"], [251, 3, 1, "", "entry_points_help"], [251, 3, 1, "", "follow"], [251, 3, 1, "", "from_plotly"], [251, 3, 1, "", "get_class_param"], [251, 3, 1, "", "get_figure"], [251, 2, 1, "", "get_figure_methods"], [251, 3, 1, "", "get_param"], [251, 3, 1, "", "get_setting"], [251, 3, 1, "", "get_settings_group"], [251, 3, 1, "", "get_sile"], [251, 3, 1, "", "has_shortcut"], [251, 3, 1, "", "has_these_settings"], [251, 3, 1, "", "init_all_plots"], [251, 3, 1, "", "init_settings"], [251, 3, 1, "", "insert_childplot"], [251, 3, 1, "", "listen"], [251, 3, 1, "", "merge"], [251, 3, 1, "", "modify_param"], [251, 3, 1, "", "multiple"], [251, 3, 1, "", "plot_name"], [251, 3, 1, "", "read_data"], [251, 2, 1, "", "read_data_methods"], [251, 3, 1, "", "remove_shortcut"], [251, 3, 1, "", "save"], [251, 3, 1, "", "set_children"], [251, 3, 1, "", "set_data"], [251, 2, 1, "", "set_data_methods"], [251, 3, 1, "", "set_shared_attr"], [251, 2, 1, "", "settings"], [251, 3, 1, "", "setup_hamiltonian"], [251, 3, 1, "", "shared_attr"], [251, 3, 1, "", "shortcut"], [251, 2, 1, "", "shortcuts_for_json"], [251, 3, 1, "", "shortcuts_summary"], [251, 3, 1, "", "show"], [251, 3, 1, "", "stop_listening"], [251, 3, 1, "", "subplots"], [251, 3, 1, "", "suffix"], [251, 3, 1, "", "undo_setting"], [251, 3, 1, "", "undo_settings"], [251, 3, 1, "", "undo_settings_group"], [251, 3, 1, "", "update_children_settings"], [251, 3, 1, "", "update_settings"], [251, 3, 1, "", "updates_available"]], "sisl.viz.MultiplePlot": [[252, 3, 1, "", "__init__"], [252, 3, 1, "", "add_children"], [252, 3, 1, "", "add_shortcut"], [252, 3, 1, "", "animated"], [252, 4, 1, "", "backends"], [252, 3, 1, "", "call_shortcut"], [252, 3, 1, "", "clone"], [252, 3, 1, "", "copy"], [252, 3, 1, "", "dispatch_event"], [252, 4, 1, "", "entry_points"], [252, 3, 1, "", "entry_points_help"], [252, 3, 1, "", "follow"], [252, 3, 1, "", "from_plotly"], [252, 3, 1, "", "get_class_param"], [252, 3, 1, "", "get_figure"], [252, 2, 1, "", "get_figure_methods"], [252, 3, 1, "", "get_param"], [252, 3, 1, "", "get_setting"], [252, 3, 1, "", "get_settings_group"], [252, 3, 1, "", "get_sile"], [252, 3, 1, "", "has_shortcut"], [252, 3, 1, "", "has_these_settings"], [252, 3, 1, "", "init_all_plots"], [252, 3, 1, "", "init_settings"], [252, 3, 1, "", "insert_childplot"], [252, 3, 1, "", "listen"], [252, 3, 1, "", "merge"], [252, 3, 1, "", "modify_param"], [252, 3, 1, "", "multiple"], [252, 3, 1, "", "plot_name"], [252, 3, 1, "", "read_data"], [252, 2, 1, "", "read_data_methods"], [252, 3, 1, "", "remove_shortcut"], [252, 3, 1, "", "save"], [252, 3, 1, "", "set_children"], [252, 3, 1, "", "set_data"], [252, 2, 1, "", "set_data_methods"], [252, 3, 1, "", "set_shared_attr"], [252, 2, 1, "", "settings"], [252, 3, 1, "", "setup_hamiltonian"], [252, 3, 1, "", "shared_attr"], [252, 3, 1, "", "shortcut"], [252, 2, 1, "", "shortcuts_for_json"], [252, 3, 1, "", "shortcuts_summary"], [252, 3, 1, "", "show"], [252, 3, 1, "", "stop_listening"], [252, 3, 1, "", "subplots"], [252, 3, 1, "", "suffix"], [252, 3, 1, "", "undo_setting"], [252, 3, 1, "", "undo_settings"], [252, 3, 1, "", "undo_settings_group"], [252, 3, 1, "", "update_children_settings"], [252, 3, 1, "", "update_settings"], [252, 3, 1, "", "updates_available"]], "sisl.viz.Plot": [[253, 3, 1, "", "__init__"], [253, 3, 1, "", "add_shortcut"], [253, 3, 1, "", "animated"], [253, 3, 1, "", "call_shortcut"], [253, 3, 1, "", "clone"], [253, 3, 1, "", "copy"], [253, 3, 1, "", "dispatch_event"], [253, 3, 1, "", "entry_points_help"], [253, 3, 1, "", "follow"], [253, 3, 1, "", "from_plotly"], [253, 3, 1, "", "get_class_param"], [253, 3, 1, "", "get_figure"], [253, 2, 1, "", "get_figure_methods"], [253, 3, 1, "", "get_param"], [253, 3, 1, "", "get_setting"], [253, 3, 1, "", "get_settings_group"], [253, 3, 1, "", "get_sile"], [253, 3, 1, "", "has_shortcut"], [253, 3, 1, "", "has_these_settings"], [253, 3, 1, "", "init_settings"], [253, 3, 1, "", "listen"], [253, 3, 1, "", "merge"], [253, 3, 1, "", "modify_param"], [253, 3, 1, "", "multiple"], [253, 4, 1, "", "paramGroups"], [253, 4, 1, "", "params"], [253, 3, 1, "", "plot_name"], [253, 3, 1, "", "read_data"], [253, 2, 1, "", "read_data_methods"], [253, 3, 1, "", "remove_shortcut"], [253, 3, 1, "", "save"], [253, 3, 1, "", "set_data"], [253, 2, 1, "", "set_data_methods"], [253, 2, 1, "id0", "settings"], [253, 3, 1, "", "setup_hamiltonian"], [253, 3, 1, "", "shortcut"], [253, 2, 1, "", "shortcuts_for_json"], [253, 3, 1, "", "shortcuts_summary"], [253, 3, 1, "", "show"], [253, 3, 1, "", "stop_listening"], [253, 3, 1, "", "subplots"], [253, 3, 1, "", "suffix"], [253, 3, 1, "", "undo_setting"], [253, 3, 1, "", "undo_settings"], [253, 3, 1, "", "undo_settings_group"], [253, 3, 1, "", "update_settings"], [253, 3, 1, "", "updates_available"]], "sisl.viz.SubPlots": [[254, 3, 1, "", "__init__"], [254, 3, 1, "", "add_children"], [254, 3, 1, "", "add_shortcut"], [254, 3, 1, "", "animated"], [254, 4, 1, "", "backends"], [254, 3, 1, "", "call_shortcut"], [254, 3, 1, "", "clone"], [254, 3, 1, "", "copy"], [254, 3, 1, "", "dispatch_event"], [254, 4, 1, "", "entry_points"], [254, 3, 1, "", "entry_points_help"], [254, 3, 1, "", "follow"], [254, 3, 1, "", "from_plotly"], [254, 3, 1, "", "get_class_param"], [254, 3, 1, "", "get_figure"], [254, 2, 1, "", "get_figure_methods"], [254, 3, 1, "", "get_param"], [254, 3, 1, "", "get_setting"], [254, 3, 1, "", "get_settings_group"], [254, 3, 1, "", "get_sile"], [254, 3, 1, "", "has_shortcut"], [254, 3, 1, "", "has_these_settings"], [254, 3, 1, "", "init_all_plots"], [254, 3, 1, "", "init_settings"], [254, 3, 1, "", "insert_childplot"], [254, 3, 1, "", "listen"], [254, 3, 1, "", "merge"], [254, 3, 1, "", "modify_param"], [254, 3, 1, "", "multiple"], [254, 3, 1, "", "plot_name"], [254, 3, 1, "", "read_data"], [254, 2, 1, "", "read_data_methods"], [254, 3, 1, "", "remove_shortcut"], [254, 3, 1, "", "save"], [254, 3, 1, "", "set_children"], [254, 3, 1, "", "set_data"], [254, 2, 1, "", "set_data_methods"], [254, 3, 1, "", "set_shared_attr"], [254, 2, 1, "", "settings"], [254, 3, 1, "", "setup_hamiltonian"], [254, 3, 1, "", "shared_attr"], [254, 3, 1, "", "shortcut"], [254, 2, 1, "", "shortcuts_for_json"], [254, 3, 1, "", "shortcuts_summary"], [254, 3, 1, "", "show"], [254, 3, 1, "", "stop_listening"], [254, 3, 1, "", "subplots"], [254, 3, 1, "", "suffix"], [254, 3, 1, "", "undo_setting"], [254, 3, 1, "", "undo_settings"], [254, 3, 1, "", "undo_settings_group"], [254, 3, 1, "", "update_children_settings"], [254, 3, 1, "", "update_settings"], [254, 3, 1, "", "updates_available"]], "sisl_toolbox": [[292, 0, 0, "-", "btd"]], "sisl_toolbox.btd": [[293, 1, 1, "", "DeviceGreen"], [294, 1, 1, "", "DownfoldSelfEnergy"], [295, 1, 1, "", "PivotSelfEnergy"]], "sisl_toolbox.btd.DeviceGreen": [[293, 3, 1, "", "Hk"], [293, 3, 1, "", "Sk"], [293, 3, 1, "", "__init__"], [293, 3, 1, "", "eigenchannel"], [293, 3, 1, "", "from_fdf"], [293, 3, 1, "", "green"], [293, 3, 1, "", "reset"], [293, 3, 1, "", "scattering_matrix"], [293, 3, 1, "", "scattering_state"], [293, 3, 1, "", "spectral"]], "sisl_toolbox.btd.DownfoldSelfEnergy": [[294, 3, 1, "", "__init__"], [294, 3, 1, "", "broadening_matrix"], [294, 3, 1, "", "se2broadening"], [294, 3, 1, "", "self_energy"]], "sisl_toolbox.btd.PivotSelfEnergy": [[295, 3, 1, "", "__init__"], [295, 3, 1, "", "broadening_matrix"], [295, 3, 1, "", "se2broadening"], [295, 3, 1, "", "self_energy"]], "sisl_toolbox.siesta": [[297, 0, 0, "-", "atom"]], "sisl_toolbox.siesta.atom": [[298, 1, 1, "", "AtomInput"]], "sisl_toolbox.siesta.atom.AtomInput": [[298, 3, 1, "", "__call__"], [298, 3, 1, "", "__init__"], [298, 3, 1, "", "ae"], [298, 3, 1, "", "excite"], [298, 3, 1, "", "from_input"], [298, 3, 1, "", "from_yaml"], [298, 3, 1, "", "pg"], [298, 3, 1, "", "plot"], [298, 3, 1, "", "write_all_electron"], [298, 3, 1, "", "write_generation"], [298, 3, 1, "", "write_header"], [298, 3, 1, "", "write_test"]], "sisl_toolbox.transiesta": [[300, 0, 0, "-", "poisson"]], "sisl_toolbox.transiesta.poisson": [[299, 6, 1, "", "solve_poisson"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:data", "6": "py:function", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"basic": [0, 132, 278, 317, 324], "class": [0, 132, 238, 242, 244, 315, 317], "simpl": 0, "object": [0, 239, 312], "advanc": [0, 289, 290], "util": [0, 119, 248], "common": 1, "geometri": [1, 6, 282, 288, 302, 303, 307, 308, 309, 310], "bulk": 1, "surfac": 1, "slab": 1, "1d": [1, 320, 321], "materi": 1, "2d": [1, 320, 321], "sisl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 118, 119, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 251, 252, 253, 254, 278, 280, 285, 315, 317], "atom": [2, 4, 297, 298, 320], "atomicorbit": 3, "gtorbit": 5, "grid": [7, 288, 290, 307, 321, 323], "hydrogenicorbit": 8, "orbit": [9, 309], "periodict": 10, "quaternion": 11, "storbit": 12, "sparseatom": 13, "sparsecsr": 14, "sparseorbit": 15, "sphericalorbit": 16, "supercel": [17, 320, 321], "constant": [18, 19, 20, 21, 22, 23, 24, 25, 26, 245, 246], "g": 18, "g0": 19, "physicalconst": 20, "c": 21, "h": 22, "hbar": 23, "m_e": 24, "m_p": 25, "q": 26, "agnr": 27, "bcc": 28, "bcc_slab": 29, "bilay": 30, "diamond": 31, "fcc": 32, "fcc_slab": 33, "graphen": [34, 304, 305, 308, 310], "graphene_nanoribbon": 35, "hcp": 36, "honeycomb": 37, "nanoribbon": 38, "nanotub": 39, "rocksalt": 40, "rocksalt_slab": 41, "sc": 42, "zgnr": 43, "mix": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 238], "adaptivediismix": 44, "adaptivepulaymix": 45, "andersonmix": 46, "basehistoryweightmix": 47, "basemix": 48, "baseweightmix": 49, "diismix": 50, "histori": 51, "linearmix": 52, "pulaymix": 53, "stepmix": 54, "oplist": 55, "physic": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 83, 84, 85, 87, 88, 100, 102, 103, 104, 105, 106, 239, 243], "bandstructur": [56, 307], "bloch": [57, 243], "brillouinzon": 58, "coeffici": 59, "densitymatrix": 60, "dynamicalmatrix": 61, "energydensitymatrix": 62, "hamiltonian": [63, 307, 309, 310, 323], "monkhorstpack": 64, "overlap": 65, "realspaces": 66, "realspacesi": 67, "recursivesi": 68, "selfenergi": 69, "semiinfinit": 70, "sparseorbitalbz": 71, "sparseorbitalbzspin": 72, "spin": [73, 243, 318], "state": [74, 239], "statec": 75, "widebands": 76, "bose_einstein": 77, "cold": 78, "degenerate_decoupl": 79, "cop": 80, "electron": [81, 83, 84, 85, 87, 88, 242, 305, 306, 307, 308, 309, 310], "coefficientelectron": 81, "do": [82, 101, 310, 317, 322], "eigenstateelectron": 83, "eigenvalueelectron": 84, "eigenvectorelectron": 85, "pdo": [86, 107, 310, 322], "statecelectron": 87, "stateelectron": 88, "berry_curvatur": 89, "berry_phas": 90, "conduct": 91, "spin_moment": 92, "spin_squar": 93, "wavefunct": [94, 323], "fermi_dirac": 95, "gaussian": 96, "get_distribut": 97, "heavisid": 98, "lorentzian": 99, "phonon": [100, 102, 103, 104, 105, 106, 244], "coefficientphonon": 100, "eigenmodephonon": 102, "eigenvaluephonon": 103, "eigenvectorphonon": 104, "modecphonon": 105, "modephonon": 106, "step_funct": 108, "shape": [109, 110, 111, 112, 113, 114, 250], "cube": [109, 290], "cuboid": 110, "ellipsoid": 111, "nullshap": 112, "sphere": 114, "unit_convert": 115, "unit_default": 116, "unit_group": 117, "unit": [118, 245, 247], "propertydict": 119, "angl": 120, "direct": 121, "erang": 122, "fileindex": 123, "iter_shap": 124, "list2str": 125, "lstrang": 126, "math_ev": 127, "str_spec": 128, "strmap": 129, "strseq": 130, "api": 131, "document": [131, 280], "io": [132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "method": [132, 300, 321], "retriev": 132, "warn": 132, "base": 132, "bigdft": [133, 144, 145, 146], "fhiaim": [134, 148, 149, 150], "basesil": 135, "sile": 136, "silebin": 137, "silecdf": 138, "sileerror": 139, "sileinfo": 140, "silewarn": 141, "add_sil": 142, "axsfsil": 143, "silebigdft": 144, "silebinbigdft": 145, "asciisilebigdft": 146, "cubesil": 147, "silebinfhiaim": 148, "silefhiaim": 149, "insilefhiaim": 150, "get_sil": [151, 153], "get_sile_class": 152, "gulp": [154, 155, 156, 157, 229], "silebingulp": 154, "silegulp": 155, "fcsilegulp": 156, "gotsilegulp": 157, "moldensil": 158, "openmx": [159, 160, 161, 162, 231], "silebinopenmx": 159, "silecdfopenmx": 160, "sileopenmx": 161, "omxsileopenmx": 162, "orca": [163, 164, 165, 166, 232], "silebinorca": 163, "sileorca": 164, "outputsileorca": 165, "txtsileorca": 166, "pdbsile": 167, "scaleup": [168, 169, 170, 171, 172, 233], "silebinscaleup": 168, "silescaleup": 169, "orboccsilescaleup": 170, "refsilescaleup": 171, "rhamsilescaleup": 172, "siesta": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 234, 247, 298, 301, 309, 310], "silebinsiesta": 173, "silecdfsiesta": 174, "silesiesta": 175, "bandssilesiesta": 176, "dmsilesiesta": 177, "eigsilesiesta": 178, "fasilesiesta": 179, "fcsilesiesta": 180, "fdfsilesiesta": 181, "gridsilesiesta": 182, "gridncsilesiesta": 183, "hsxsilesiesta": 184, "ionncsilesiesta": 185, "ionxmlsilesiesta": 186, "kpsilesiesta": 187, "ncsilesiesta": 188, "onlyssilesiesta": 189, "orbindxsilesiesta": 190, "outsilesiesta": 191, "pdossilesiesta": 192, "rkpsilesiesta": 193, "structsilesiesta": 194, "tsdesilesiesta": 195, "tsgfsilesiesta": 196, "tshssilesiesta": 197, "tsvncsilesiesta": 198, "wfsxsilesiesta": 199, "xvsilesiesta": 200, "tablesil": 201, "tbtran": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 235], "silebintbtran": 202, "silecdftbtran": 203, "siletbtran": 204, "deltancsiletbtran": 205, "phtavncsilephtran": 206, "phtncsilephtran": 207, "phtprojncsilephtran": 208, "phtsencsilephtran": 209, "tbtavncsiletbtran": 210, "tbtgfsiletbtran": 211, "tbtncsiletbtran": 212, "tbtprojncsiletbtran": 213, "tbtsencsiletbtran": 214, "vasp": [215, 216, 217, 218, 219, 220, 221, 222, 236], "silebinvasp": 215, "silevasp": 216, "carsilevasp": 217, "chgsilevasp": 218, "doscarsilevasp": 219, "eigenvalsilevasp": 220, "locpotsilevasp": 221, "outsilevasp": 222, "wannier90": [223, 224, 225, 237], "silebinwannier90": 223, "silewannier90": 224, "winsilewannier90": 225, "xsfsile": 226, "xyzsil": 227, "gener": [228, 297, 323], "file": [228, 288, 290], "input": [230, 297], "output": [230, 297], "transiesta": [234, 300, 301], "phtran": 235, "self": [238, 243], "consist": 238, "quantiti": [238, 240, 307], "contain": 238, "algorithm": [238, 292], "low": 239, "level": 239, "spars": 239, "matric": [239, 243], "brillouin": [240, 307], "zone": [240, 307], "multipl": [240, 314], "parallel": 240, "calcul": [240, 307, 308, 310], "distribut": 241, "function": [241, 242, 244], "relat": [242, 244], "support": [242, 244, 301, 316], "quantit": 243, "energi": 243, "": [243, 315, 324], "theorem": 243, "convers": [247, 289], "rang": 249, "routin": 249, "miscellan": 249, "viz": [251, 252, 253, 254, 312, 317], "anim": 251, "multipleplot": [252, 314], "plot": [253, 297, 307, 309, 312, 314, 315, 317, 320, 321], "subplot": 254, "visual": [255, 280, 321], "releas": 256, "note": 256, "0": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "10": 257, "contributor": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "pull": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "request": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 319, 322], "merg": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 314], "11": 258, "12": [259, 260, 261], "ad": [259, 260, 261, 262, 316], "fix": [259, 260, 261, 262], "chang": [259, 261, 262], "remov": 259, "toolbox": [259, 280, 296], "btd": [259, 293, 294, 295], "1": [260, 264, 270, 302, 305], "2": [261, 265, 271, 303, 306], "13": 262, "8": [263, 264, 265, 266, 267, 268, 277], "3": [266, 272], "4": [267, 273], "5": [268, 274], "9": [269, 270, 271, 272, 273, 274, 275, 276, 277], "6": 275, "7": 276, "cite": 278, "usag": [278, 282, 324], "transport": 278, "backend": [278, 312, 315, 316], "contribut": 279, "extern": 279, "code": 279, "tight": 280, "bind": 280, "dft": [280, 282], "interfac": 280, "librari": 280, "first": [280, 312, 313], "time": 280, "us": [280, 285, 317, 319, 321], "everi": 280, "user": 280, "guid": 280, "refer": [280, 286], "instal": [281, 313], "requir": 281, "depend": 281, "pip": 281, "conda": 281, "stabl": 281, "develop": 281, "manual": 281, "window": 281, "test": 281, "your": [281, 312], "version": 281, "introduct": 282, "packag": 282, "manipul": 282, "command": [282, 287, 289, 297, 300], "line": [282, 287, 289, 297, 300], "node": 283, "workflow": 283, "other": 284, "resourc": 284, "public": 285, "arxiv": 285, "script": 287, "sdata": 288, "sgeom": 289, "avail": 289, "format": 289, "featur": [289, 290], "repeat": 289, "tile": 289, "structur": [289, 305, 306, 307, 308, 309, 310], "rotat": 289, "combin": [289, 317], "argument": 289, "sgrid": 290, "creat": [290, 307, 308, 309, 310, 316], "differ": [290, 312], "reduc": [290, 321], "size": 290, "averag": [290, 307], "sum": 290, "stoolbox": 291, "have": 291, "an": [291, 316], "idea": 291, "block": 292, "tri": 292, "diagon": 292, "invers": 292, "sisl_toolbox": [293, 294, 295, 298], "devicegreen": 293, "downfoldselfenergi": 294, "pivotselfenergi": 295, "tool": [297, 300], "atominput": 298, "solve_poisson": 299, "hartre": 300, "correct": 300, "fft": 300, "poisson": 300, "solver": 300, "better": [300, 314], "perform": [300, 321], "tutori": [301, 317], "deprec": 301, "creation": [302, 303, 314], "part": [302, 303, 305, 306, 321], "specifi": [304, 320, 321], "super": 304, "cell": [304, 320], "inform": 304, "exampl": [304, 305], "squar": [304, 305], "setup": [305, 306], "walk": 307, "through": 307, "investig": [307, 308], "eigenst": [307, 309, 310], "k": 307, "real": [307, 309], "space": [307, 309], "berri": 308, "phase": 308, "compar": 308, "h2o": 309, "molecul": 309, "charg": 309, "ASE": 311, "step": [312, 313], "activ": 312, "framework": [312, 315, 316], "my": 312, "plotabl": 312, "updat": 312, "store": 312, "load": 312, "discov": 312, "more": 312, "get": [313, 318, 324], "start": 313, "intro": [314, 315], "than": 314, "individu": [314, 318], "type": 314, "exist": [314, 316, 322], "let": [314, 324], "handl": 314, "The": [315, 317], "wrapper": 315, "configur": 315, "session": 315, "new": 316, "extend": 316, "non": 316, "modul": 317, "showcas": 317, "blender": 317, "yourself": 317, "bandsplot": [318, 319], "band": 318, "you": 318, "want": 318, "quick": 318, "style": [318, 320], "displai": [318, 320, 321], "smallest": 318, "gap": 318, "custom": [318, 320], "textur": 318, "fatbandsplot": 319, "specif": 319, "weight": 319, "scale": [319, 320], "fatband": 319, "set": [319, 323], "geometryplot": 320, "3d": [320, 321], "ax": [320, 321], "perspect": 320, "toggl": 320, "bond": 320, "pick": 320, "which": 320, "draw": 320, "arrow": 320, "gridplot": [321, 323], "dimension": 321, "isosurfac": 321, "contour": 321, "volumetr": 321, "colorscal": 321, "onli": 321, "appli": 321, "transform": 321, "scan": 321, "pdosplot": 322, "easi": 322, "fast": 322, "split": 322, "manag": 322, "wavefunctionplot": 323, "from": 323, "select": 323, "precis": 323, "plotclass": 324, "technic": 324}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Basic classes": [[0, "basic-classes"]], "Simple objects": [[0, "simple-objects"]], "Advanced classes": [[0, "advanced-classes"]], "Utility classes": [[0, "utility-classes"]], "Common geometries": [[1, "module-sisl.geom"]], "Bulk": [[1, "bulk"]], "Surfaces (slabs)": [[1, "surfaces-slabs"]], "1D materials": [[1, "d-materials"]], "2D materials": [[1, "id1"]], "sisl.Atom": [[2, "sisl-atom"]], "sisl.AtomicOrbital": [[3, "sisl-atomicorbital"]], "sisl.Atoms": [[4, "sisl-atoms"]], "sisl.GTOrbital": [[5, "sisl-gtorbital"]], "sisl.Geometry": [[6, "sisl-geometry"]], "sisl.Grid": [[7, "sisl-grid"]], "sisl.HydrogenicOrbital": [[8, "sisl-hydrogenicorbital"]], "sisl.Orbital": [[9, "sisl-orbital"]], "sisl.PeriodicTable": [[10, "sisl-periodictable"]], "sisl.Quaternion": [[11, "sisl-quaternion"]], "sisl.STOrbital": [[12, "sisl-storbital"]], "sisl.SparseAtom": [[13, "sisl-sparseatom"]], "sisl.SparseCSR": [[14, "sisl-sparsecsr"]], "sisl.SparseOrbital": [[15, "sisl-sparseorbital"]], "sisl.SphericalOrbital": [[16, "sisl-sphericalorbital"]], "sisl.SuperCell": [[17, "sisl-supercell"]], "sisl.constant.G": [[18, "sisl-constant-g"]], "sisl.constant.G0": [[19, "sisl-constant-g0"]], "sisl.constant.PhysicalConstant": [[20, "sisl-constant-physicalconstant"]], "sisl.constant.c": [[21, "sisl-constant-c"]], "sisl.constant.h": [[22, "sisl-constant-h"]], "sisl.constant.hbar": [[23, "sisl-constant-hbar"]], "sisl.constant.m_e": [[24, "sisl-constant-m-e"]], "sisl.constant.m_p": [[25, "sisl-constant-m-p"]], "sisl.constant.q": [[26, "sisl-constant-q"]], "agnr": [[27, "agnr"]], "bcc": [[28, "bcc"]], "bcc_slab": [[29, "bcc-slab"]], "bilayer": [[30, "bilayer"]], "diamond": [[31, "diamond"]], "fcc": [[32, "fcc"]], "fcc_slab": [[33, "fcc-slab"]], "graphene": [[34, "graphene"]], "graphene_nanoribbon": [[35, "graphene-nanoribbon"]], "hcp": [[36, "hcp"]], "honeycomb": [[37, "honeycomb"]], "nanoribbon": [[38, "nanoribbon"]], "nanotube": [[39, "nanotube"]], "rocksalt": [[40, "rocksalt"]], "rocksalt_slab": [[41, "rocksalt-slab"]], "sc": [[42, "sc"]], "zgnr": [[43, "zgnr"]], "sisl.mixing.AdaptiveDIISMixer": [[44, "sisl-mixing-adaptivediismixer"]], "sisl.mixing.AdaptivePulayMixer": [[45, "sisl-mixing-adaptivepulaymixer"]], "sisl.mixing.AndersonMixer": [[46, "sisl-mixing-andersonmixer"]], "sisl.mixing.BaseHistoryWeightMixer": [[47, "sisl-mixing-basehistoryweightmixer"]], "sisl.mixing.BaseMixer": [[48, "sisl-mixing-basemixer"]], "sisl.mixing.BaseWeightMixer": [[49, "sisl-mixing-baseweightmixer"]], "sisl.mixing.DIISMixer": [[50, "sisl-mixing-diismixer"]], "sisl.mixing.History": [[51, "sisl-mixing-history"]], "sisl.mixing.LinearMixer": [[52, "sisl-mixing-linearmixer"]], "sisl.mixing.PulayMixer": [[53, "sisl-mixing-pulaymixer"]], "sisl.mixing.StepMixer": [[54, "sisl-mixing-stepmixer"]], "sisl.oplist.oplist": [[55, "sisl-oplist-oplist"]], "sisl.physics.BandStructure": [[56, "sisl-physics-bandstructure"]], "sisl.physics.Bloch": [[57, "sisl-physics-bloch"]], "sisl.physics.BrillouinZone": [[58, "sisl-physics-brillouinzone"]], "sisl.physics.Coefficient": [[59, "sisl-physics-coefficient"]], "sisl.physics.DensityMatrix": [[60, "sisl-physics-densitymatrix"]], "sisl.physics.DynamicalMatrix": [[61, "sisl-physics-dynamicalmatrix"]], "sisl.physics.EnergyDensityMatrix": [[62, "sisl-physics-energydensitymatrix"]], "sisl.physics.Hamiltonian": [[63, "sisl-physics-hamiltonian"]], "sisl.physics.MonkhorstPack": [[64, "sisl-physics-monkhorstpack"]], "sisl.physics.Overlap": [[65, "sisl-physics-overlap"]], "sisl.physics.RealSpaceSE": [[66, "sisl-physics-realspacese"]], "sisl.physics.RealSpaceSI": [[67, "sisl-physics-realspacesi"]], "sisl.physics.RecursiveSI": [[68, "sisl-physics-recursivesi"]], "sisl.physics.SelfEnergy": [[69, "sisl-physics-selfenergy"]], "sisl.physics.SemiInfinite": [[70, "sisl-physics-semiinfinite"]], "sisl.physics.SparseOrbitalBZ": [[71, "sisl-physics-sparseorbitalbz"]], "sisl.physics.SparseOrbitalBZSpin": [[72, "sisl-physics-sparseorbitalbzspin"]], "sisl.physics.Spin": [[73, "sisl-physics-spin"]], "sisl.physics.State": [[74, "sisl-physics-state"]], "sisl.physics.StateC": [[75, "sisl-physics-statec"]], "sisl.physics.WideBandSE": [[76, "sisl-physics-widebandse"]], "bose_einstein": [[77, "bose-einstein"]], "cold": [[78, "cold"]], "degenerate_decouple": [[79, "degenerate-decouple"]], "COP": [[80, "cop"]], "sisl.physics.electron.CoefficientElectron": [[81, "sisl-physics-electron-coefficientelectron"]], "DOS": [[82, "dos"], [101, "dos"]], "sisl.physics.electron.EigenstateElectron": [[83, "sisl-physics-electron-eigenstateelectron"]], "sisl.physics.electron.EigenvalueElectron": [[84, "sisl-physics-electron-eigenvalueelectron"]], "sisl.physics.electron.EigenvectorElectron": [[85, "sisl-physics-electron-eigenvectorelectron"]], "PDOS": [[86, "pdos"], [107, "pdos"]], "sisl.physics.electron.StateCElectron": [[87, "sisl-physics-electron-statecelectron"]], "sisl.physics.electron.StateElectron": [[88, "sisl-physics-electron-stateelectron"]], "berry_curvature": [[89, "berry-curvature"]], "berry_phase": [[90, "berry-phase"]], "conductivity": [[91, "conductivity"]], "spin_moment": [[92, "spin-moment"]], "spin_squared": [[93, "spin-squared"]], "wavefunction": [[94, "wavefunction"]], "fermi_dirac": [[95, "fermi-dirac"]], "gaussian": [[96, "gaussian"]], "get_distribution": [[97, "get-distribution"]], "heaviside": [[98, "heaviside"]], "lorentzian": [[99, "lorentzian"]], "sisl.physics.phonon.CoefficientPhonon": [[100, "sisl-physics-phonon-coefficientphonon"]], "sisl.physics.phonon.EigenmodePhonon": [[102, "sisl-physics-phonon-eigenmodephonon"]], "sisl.physics.phonon.EigenvaluePhonon": [[103, "sisl-physics-phonon-eigenvaluephonon"]], "sisl.physics.phonon.EigenvectorPhonon": [[104, "sisl-physics-phonon-eigenvectorphonon"]], "sisl.physics.phonon.ModeCPhonon": [[105, "sisl-physics-phonon-modecphonon"]], "sisl.physics.phonon.ModePhonon": [[106, "sisl-physics-phonon-modephonon"]], "step_function": [[108, "step-function"]], "sisl.shape.Cube": [[109, "sisl-shape-cube"]], "sisl.shape.Cuboid": [[110, "sisl-shape-cuboid"]], "sisl.shape.Ellipsoid": [[111, "sisl-shape-ellipsoid"]], "sisl.shape.NullShape": [[112, "sisl-shape-nullshape"]], "sisl.shape.Shape": [[113, "sisl-shape-shape"]], "sisl.shape.Sphere": [[114, "sisl-shape-sphere"]], "unit_convert": [[115, "unit-convert"]], "unit_default": [[116, "unit-default"]], "unit_group": [[117, "unit-group"]], "sisl.unit.units": [[118, "sisl-unit-units"]], "sisl.utils.PropertyDict": [[119, "sisl-utils-propertydict"]], "angle": [[120, "angle"]], "direction": [[121, "direction"]], "erange": [[122, "erange"]], "fileindex": [[123, "fileindex"]], "iter_shape": [[124, "iter-shape"]], "list2str": [[125, "list2str"]], "lstranges": [[126, "lstranges"]], "math_eval": [[127, "math-eval"]], "str_spec": [[128, "str-spec"]], "strmap": [[129, "strmap"]], "strseq": [[130, "strseq"]], "API documentation": [[131, "api-documentation"]], "Basic IO methods/classes": [[132, "basic-io-methods-classes"]], "Retrieval methods and warnings": [[132, "retrieval-methods-and-warnings"]], "Base classes": [[132, "base-classes"]], "BigDFT": [[133, "bigdft"]], "FHIaims": [[134, "fhiaims"]], "sisl.io.BaseSile": [[135, "sisl-io-basesile"]], "sisl.io.Sile": [[136, "sisl-io-sile"]], "sisl.io.SileBin": [[137, "sisl-io-silebin"]], "sisl.io.SileCDF": [[138, "sisl-io-silecdf"]], "sisl.io.SileError": [[139, "sisl-io-sileerror"]], "sisl.io.SileInfo": [[140, "sisl-io-sileinfo"]], "sisl.io.SileWarning": [[141, "sisl-io-silewarning"]], "add_sile": [[142, "add-sile"]], "sisl.io.axsfSile": [[143, "sisl-io-axsfsile"]], "sisl.io.bigdft.SileBigDFT": [[144, "sisl-io-bigdft-silebigdft"]], "sisl.io.bigdft.SileBinBigDFT": [[145, "sisl-io-bigdft-silebinbigdft"]], "sisl.io.bigdft.asciiSileBigDFT": [[146, "sisl-io-bigdft-asciisilebigdft"]], "sisl.io.cubeSile": [[147, "sisl-io-cubesile"]], "sisl.io.fhiaims.SileBinFHIaims": [[148, "sisl-io-fhiaims-silebinfhiaims"]], "sisl.io.fhiaims.SileFHIaims": [[149, "sisl-io-fhiaims-silefhiaims"]], "sisl.io.fhiaims.inSileFHIaims": [[150, "sisl-io-fhiaims-insilefhiaims"]], "get_sile": [[151, "get-sile"]], "get_sile_class": [[152, "get-sile-class"]], "get_siles": [[153, "get-siles"]], "sisl.io.gulp.SileBinGULP": [[154, "sisl-io-gulp-silebingulp"]], "sisl.io.gulp.SileGULP": [[155, "sisl-io-gulp-silegulp"]], "sisl.io.gulp.fcSileGULP": [[156, "sisl-io-gulp-fcsilegulp"]], "sisl.io.gulp.gotSileGULP": [[157, "sisl-io-gulp-gotsilegulp"]], "sisl.io.moldenSile": [[158, "sisl-io-moldensile"]], "sisl.io.openmx.SileBinOpenMX": [[159, "sisl-io-openmx-silebinopenmx"]], "sisl.io.openmx.SileCDFOpenMX": [[160, "sisl-io-openmx-silecdfopenmx"]], "sisl.io.openmx.SileOpenMX": [[161, "sisl-io-openmx-sileopenmx"]], "sisl.io.openmx.omxSileOpenMX": [[162, "sisl-io-openmx-omxsileopenmx"]], "sisl.io.orca.SileBinORCA": [[163, "sisl-io-orca-silebinorca"]], "sisl.io.orca.SileORCA": [[164, "sisl-io-orca-sileorca"]], "sisl.io.orca.outputSileORCA": [[165, "sisl-io-orca-outputsileorca"]], "sisl.io.orca.txtSileORCA": [[166, "sisl-io-orca-txtsileorca"]], "sisl.io.pdbSile": [[167, "sisl-io-pdbsile"]], "sisl.io.scaleup.SileBinScaleUp": [[168, "sisl-io-scaleup-silebinscaleup"]], "sisl.io.scaleup.SileScaleUp": [[169, "sisl-io-scaleup-silescaleup"]], "sisl.io.scaleup.orboccSileScaleUp": [[170, "sisl-io-scaleup-orboccsilescaleup"]], "sisl.io.scaleup.refSileScaleUp": [[171, "sisl-io-scaleup-refsilescaleup"]], "sisl.io.scaleup.rhamSileScaleUp": [[172, "sisl-io-scaleup-rhamsilescaleup"]], "sisl.io.siesta.SileBinSiesta": [[173, "sisl-io-siesta-silebinsiesta"]], "sisl.io.siesta.SileCDFSiesta": [[174, "sisl-io-siesta-silecdfsiesta"]], "sisl.io.siesta.SileSiesta": [[175, "sisl-io-siesta-silesiesta"]], "sisl.io.siesta.bandsSileSiesta": [[176, "sisl-io-siesta-bandssilesiesta"]], "sisl.io.siesta.dmSileSiesta": [[177, "sisl-io-siesta-dmsilesiesta"]], "sisl.io.siesta.eigSileSiesta": [[178, "sisl-io-siesta-eigsilesiesta"]], "sisl.io.siesta.faSileSiesta": [[179, "sisl-io-siesta-fasilesiesta"]], "sisl.io.siesta.fcSileSiesta": [[180, "sisl-io-siesta-fcsilesiesta"]], "sisl.io.siesta.fdfSileSiesta": [[181, "sisl-io-siesta-fdfsilesiesta"]], "sisl.io.siesta.gridSileSiesta": [[182, "sisl-io-siesta-gridsilesiesta"]], "sisl.io.siesta.gridncSileSiesta": [[183, "sisl-io-siesta-gridncsilesiesta"]], "sisl.io.siesta.hsxSileSiesta": [[184, "sisl-io-siesta-hsxsilesiesta"]], "sisl.io.siesta.ionncSileSiesta": [[185, "sisl-io-siesta-ionncsilesiesta"]], "sisl.io.siesta.ionxmlSileSiesta": [[186, "sisl-io-siesta-ionxmlsilesiesta"]], "sisl.io.siesta.kpSileSiesta": [[187, "sisl-io-siesta-kpsilesiesta"]], "sisl.io.siesta.ncSileSiesta": [[188, "sisl-io-siesta-ncsilesiesta"]], "sisl.io.siesta.onlysSileSiesta": [[189, "sisl-io-siesta-onlyssilesiesta"]], "sisl.io.siesta.orbindxSileSiesta": [[190, "sisl-io-siesta-orbindxsilesiesta"]], "sisl.io.siesta.outSileSiesta": [[191, "sisl-io-siesta-outsilesiesta"]], "sisl.io.siesta.pdosSileSiesta": [[192, "sisl-io-siesta-pdossilesiesta"]], "sisl.io.siesta.rkpSileSiesta": [[193, "sisl-io-siesta-rkpsilesiesta"]], "sisl.io.siesta.structSileSiesta": [[194, "sisl-io-siesta-structsilesiesta"]], "sisl.io.siesta.tsdeSileSiesta": [[195, "sisl-io-siesta-tsdesilesiesta"]], "sisl.io.siesta.tsgfSileSiesta": [[196, "sisl-io-siesta-tsgfsilesiesta"]], "sisl.io.siesta.tshsSileSiesta": [[197, "sisl-io-siesta-tshssilesiesta"]], "sisl.io.siesta.tsvncSileSiesta": [[198, "sisl-io-siesta-tsvncsilesiesta"]], "sisl.io.siesta.wfsxSileSiesta": [[199, "sisl-io-siesta-wfsxsilesiesta"]], "sisl.io.siesta.xvSileSiesta": [[200, "sisl-io-siesta-xvsilesiesta"]], "sisl.io.tableSile": [[201, "sisl-io-tablesile"]], "sisl.io.tbtrans.SileBinTBtrans": [[202, "sisl-io-tbtrans-silebintbtrans"]], "sisl.io.tbtrans.SileCDFTBtrans": [[203, "sisl-io-tbtrans-silecdftbtrans"]], "sisl.io.tbtrans.SileTBtrans": [[204, "sisl-io-tbtrans-siletbtrans"]], "sisl.io.tbtrans.deltancSileTBtrans": [[205, "sisl-io-tbtrans-deltancsiletbtrans"]], "sisl.io.tbtrans.phtavncSilePHtrans": [[206, "sisl-io-tbtrans-phtavncsilephtrans"]], "sisl.io.tbtrans.phtncSilePHtrans": [[207, "sisl-io-tbtrans-phtncsilephtrans"]], "sisl.io.tbtrans.phtprojncSilePHtrans": [[208, "sisl-io-tbtrans-phtprojncsilephtrans"]], "sisl.io.tbtrans.phtsencSilePHtrans": [[209, "sisl-io-tbtrans-phtsencsilephtrans"]], "sisl.io.tbtrans.tbtavncSileTBtrans": [[210, "sisl-io-tbtrans-tbtavncsiletbtrans"]], "sisl.io.tbtrans.tbtgfSileTBtrans": [[211, "sisl-io-tbtrans-tbtgfsiletbtrans"]], "sisl.io.tbtrans.tbtncSileTBtrans": [[212, "sisl-io-tbtrans-tbtncsiletbtrans"]], "sisl.io.tbtrans.tbtprojncSileTBtrans": [[213, "sisl-io-tbtrans-tbtprojncsiletbtrans"]], "sisl.io.tbtrans.tbtsencSileTBtrans": [[214, "sisl-io-tbtrans-tbtsencsiletbtrans"]], "sisl.io.vasp.SileBinVASP": [[215, "sisl-io-vasp-silebinvasp"]], "sisl.io.vasp.SileVASP": [[216, "sisl-io-vasp-silevasp"]], "sisl.io.vasp.carSileVASP": [[217, "sisl-io-vasp-carsilevasp"]], "sisl.io.vasp.chgSileVASP": [[218, "sisl-io-vasp-chgsilevasp"]], "sisl.io.vasp.doscarSileVASP": [[219, "sisl-io-vasp-doscarsilevasp"]], "sisl.io.vasp.eigenvalSileVASP": [[220, "sisl-io-vasp-eigenvalsilevasp"]], "sisl.io.vasp.locpotSileVASP": [[221, "sisl-io-vasp-locpotsilevasp"]], "sisl.io.vasp.outSileVASP": [[222, "sisl-io-vasp-outsilevasp"]], "sisl.io.wannier90.SileBinWannier90": [[223, "sisl-io-wannier90-silebinwannier90"]], "sisl.io.wannier90.SileWannier90": [[224, "sisl-io-wannier90-silewannier90"]], "sisl.io.wannier90.winSileWannier90": [[225, "sisl-io-wannier90-winsilewannier90"]], "sisl.io.xsfSile": [[226, "sisl-io-xsfsile"]], "sisl.io.xyzSile": [[227, "sisl-io-xyzsile"]], "Generic files": [[228, "generic-files"]], "GULP": [[229, "module-sisl.io.gulp"]], "Input/Output": [[230, "module-sisl.io"]], "OpenMX": [[231, "module-sisl.io.openmx"]], "ORCA": [[232, "module-sisl.io.orca"]], "ScaleUP": [[233, "scaleup"]], "Siesta": [[234, "module-sisl.io.siesta"]], "TranSiesta": [[234, "transiesta"]], "TBtrans": [[235, "module-sisl.io.tbtrans"]], "PHtrans": [[235, "phtrans"]], "VASP": [[236, "module-sisl.io.vasp"]], "Wannier90": [[237, "module-sisl.io.wannier90"]], "Mixing self-consistent quantities": [[238, "module-sisl.mixing"]], "Container classes": [[238, "container-classes"]], "Mixing algorithms": [[238, "mixing-algorithms"]], "Physical objects": [[239, "module-sisl.physics"]], "Low level objects": [[239, "low-level-objects"]], "States": [[239, "states"]], "Sparse matrices": [[239, "sparse-matrices"]], "Brillouin zone": [[240, "brillouin-zone"]], "Multiple quantities": [[240, "multiple-quantities"]], "Parallel calculations": [[240, "parallel-calculations"]], "Distribution functions": [[241, "distribution-functions"]], "Electron related functions": [[242, "module-sisl.physics.electron"]], "Supporting classes": [[242, "supporting-classes"], [244, "supporting-classes"]], "Physical quantites": [[243, "physical-quantites"]], "Spin": [[243, "spin"]], "Matrices": [[243, "matrices"]], "Self energies": [[243, "self-energies"]], "Bloch\u2019s theorem": [[243, "bloch-s-theorem"]], "Phonon related functions": [[244, "module-sisl.physics.phonon"]], "Units and constants": [[245, "units-and-constants"]], "Constants": [[246, "module-sisl.constant"]], "Unit conversion": [[247, "module-sisl.unit"]], "Siesta units": [[247, "module-sisl.unit.siesta"]], "Utilities": [[248, "utilities"]], "Range routines": [[249, "range-routines"]], "Miscellaneous routines": [[249, "miscellaneous-routines"]], "Shapes": [[250, "shapes"]], "sisl.viz.Animation": [[251, "sisl-viz-animation"]], "sisl.viz.MultiplePlot": [[252, "sisl-viz-multipleplot"]], "sisl.viz.Plot": [[253, "sisl-viz-plot"]], "sisl.viz.SubPlots": [[254, "sisl-viz-subplots"]], "Visualization": [[255, "visualization"], [280, null]], "Release notes": [[256, "release-notes"]], "0.10.0": [[257, "id1"]], "Contributors": [[257, "contributors"], [258, "contributors"], [259, "contributors"], [260, "contributors"], [261, "contributors"], [262, "contributors"], [263, "contributors"], [264, "contributors"], [265, "contributors"], [266, "contributors"], [267, "contributors"], [268, "contributors"], [269, "contributors"], [270, "contributors"], [271, "contributors"], [272, "contributors"], [273, "contributors"], [274, "contributors"], [275, "contributors"], [276, "contributors"], [277, "contributors"]], "Pull requests merged": [[257, "pull-requests-merged"], [258, "pull-requests-merged"], [259, "pull-requests-merged"], [260, "pull-requests-merged"], [261, "pull-requests-merged"], [262, "pull-requests-merged"], [263, "pull-requests-merged"], [264, "pull-requests-merged"], [265, "pull-requests-merged"], [266, "pull-requests-merged"], [267, "pull-requests-merged"], [268, "pull-requests-merged"], [269, "pull-requests-merged"], [270, "pull-requests-merged"], [271, "pull-requests-merged"], [272, "pull-requests-merged"], [273, "pull-requests-merged"], [274, "pull-requests-merged"], [275, "pull-requests-merged"], [276, "pull-requests-merged"], [277, "pull-requests-merged"]], "0.11.0": [[258, "id1"]], "0.12.0": [[259, "id1"]], "Added": [[259, "added"], [260, "added"], [261, "added"], [262, "added"]], "Fixed": [[259, "fixed"], [260, "fixed"], [261, "fixed"], [262, "fixed"]], "Changed": [[259, "changed"], [261, "changed"], [262, "changed"]], "Removed": [[259, "removed"]], "toolbox.btd": [[259, "toolbox-btd"]], "# Added": [[259, "id2"]], "0.12.1": [[260, "id1"]], "0.12.2": [[261, "id1"]], "0.13.0": [[262, "id1"]], "0.8.0": [[263, "id1"]], "0.8.1": [[264, "id1"]], "0.8.2": [[265, "id1"]], "0.8.3": [[266, "id1"]], "0.8.4": [[267, "id1"]], "0.8.5": [[268, "id1"]], "0.9.0": [[269, "id1"]], "0.9.1": [[270, "id1"]], "0.9.2": [[271, "id1"]], "0.9.3": [[272, "id1"]], "0.9.4": [[273, "id1"]], "0.9.5": [[274, "id1"]], "0.9.6": [[275, "id1"]], "0.9.7": [[276, "id1"]], "0.9.8": [[277, "id1"]], "Citing sisl": [[278, "citing-sisl"]], "Citing basic usage": [[278, "citing-basic-usage"]], "Citing transport backend": [[278, "citing-transport-backend"]], "Contributing": [[279, "contributing"]], "Contribute external code": [[279, "contribute-external-code"]], "sisl: tight-binding and DFT interface library": [[280, "sisl-tight-binding-and-dft-interface-library"]], "First time use": [[280, "first-time-use"]], "Every use of sisl": [[280, "every-use-of-sisl"]], "User Guide": [[280, null]], "Toolboxes": [[280, null], [296, "toolboxes"]], "Reference documentation": [[280, null]], "Installation": [[281, "installation"], [313, "installation"]], "Required dependencies": [[281, "required-dependencies"]], "pip": [[281, "pip"]], "conda": [[281, "conda"]], "Stable": [[281, "stable"]], "Development": [[281, "development"]], "Manual installation": [[281, "manual-installation"]], "Windows": [[281, "windows"]], "Testing your installation": [[281, "testing-your-installation"]], "Development version": [[281, "development-version"]], "Introduction": [[282, "introduction"]], "Package": [[282, "package"]], "DFT": [[282, "dft"]], "Geometry manipulation": [[282, "geometry-manipulation"]], "Command line usage": [[282, "command-line-usage"]], "Nodes and workflows": [[283, "Nodes-and-workflows"]], "Nodes": [[283, "Nodes"]], "Workflows": [[283, "Workflows"]], "Other resources": [[284, "other-resources"]], "Publications using sisl": [[285, "publications-using-sisl"]], "arXiv publications": [[285, "arxiv-publications"]], "References": [[286, "references"]], "Command line scripts": [[287, "command-line-scripts"]], "sdata": [[288, "sdata"]], "Files with Geometry": [[288, "files-with-geometry"]], "Files with Grid": [[288, "files-with-grid"]], "sgeom": [[289, "sgeom"]], "Conversion": [[289, "conversion"]], "Available formats": [[289, "available-formats"]], "Advanced Features": [[289, "advanced-features"]], "Repeating/Tiling structures": [[289, "repeating-tiling-structures"]], "Rotating structure": [[289, "rotating-structure"]], "Combining command line arguments": [[289, "combining-command-line-arguments"]], "sgrid": [[290, "sgrid"]], "Creating CUBE files": [[290, "creating-cube-files"]], "Grid differences": [[290, "grid-differences"]], "Reducing grid sizes": [[290, "reducing-grid-sizes"]], "Averaging and summing": [[290, "averaging-and-summing"]], "Advanced features": [[290, "advanced-features"]], "stoolbox": [[291, "stoolbox"]], "Have an idea?": [[291, "have-an-idea"]], "Block-tri-diagonal inversion algorithms": [[292, "block-tri-diagonal-inversion-algorithms"]], "sisl_toolbox.btd.DeviceGreen": [[293, "sisl-toolbox-btd-devicegreen"]], "sisl_toolbox.btd.DownfoldSelfEnergy": [[294, "sisl-toolbox-btd-downfoldselfenergy"]], "sisl_toolbox.btd.PivotSelfEnergy": [[295, "sisl-toolbox-btd-pivotselfenergy"]], "Plotting atom output": [[297, "plotting-atom-output"]], "Command line tool": [[297, "command-line-tool"], [300, "command-line-tool"]], "Input generation": [[297, "input-generation"]], "sisl_toolbox.siesta.atom.AtomInput": [[298, "sisl-toolbox-siesta-atom-atominput"]], "solve_poisson": [[299, "solve-poisson"]], "TranSiesta Hartree correction for FFT Poisson solver": [[300, "transiesta-hartree-correction-for-fft-poisson-solver"]], "Better performance": [[300, "better-performance"]], "Method": [[300, "method"]], "Tutorials": [[301, "tutorials"]], "Siesta/TranSiesta support": [[301, "siesta-transiesta-support"]], "Deprecated tutorials": [[301, "deprecated-tutorials"]], "Geometry creation \u2013 part 1": [[302, "geometry-creation-part-1"]], "Geometry creation \u2013 part 2": [[303, "geometry-creation-part-2"]], "Specifying super-cell information": [[304, "specifying-super-cell-information"]], "Example \u2013 square": [[304, "example-square"], [305, "example-square"]], "Example \u2013 graphene": [[304, "example-graphene"], [305, "example-graphene"]], "Electronic structure setup \u2013 part 1": [[305, "electronic-structure-setup-part-1"]], "Electronic structure setup \u2013 part 2": [[306, "electronic-structure-setup-part-2"]], "Electronic structure calculation \u2013 a walk-through": [[307, "Electronic-structure-calculation-\u2013-a-walk-through"]], "Creating the geometry to investigate": [[307, "Creating-the-geometry-to-investigate"], [308, "Creating-the-geometry-to-investigate"]], "Creating the electronic structure": [[307, "Creating-the-electronic-structure"], [309, "Creating-the-electronic-structure"], [310, "Creating-the-electronic-structure"]], "Hamiltonian eigenstates": [[307, "Hamiltonian-eigenstates"], [309, "Hamiltonian-eigenstates"], [310, "Hamiltonian-eigenstates"]], "Brillouin-zone calculations": [[307, "Brillouin-zone-calculations"]], "Bandstructure": [[307, "Bandstructure"]], "Calculating k-averaged quantities": [[307, "Calculating-k-averaged-quantities"]], "Plotting eigenstates on a real space grid": [[307, "Plotting-eigenstates-on-a-real-space-grid"]], "Berry phase calculation for graphene": [[308, "Berry-phase-calculation-for-graphene"]], "Comparing electronic structures": [[308, "Comparing-electronic-structures"]], "Berry phase calculation": [[308, "Berry-phase-calculation"]], "Siesta \u2014 the H2O molecule": [[309, "Siesta-\u2014-the-H2O-molecule"]], "Creating the geometry": [[309, "Creating-the-geometry"], [310, "Creating-the-geometry"]], "Plotting orbitals": [[309, "Plotting-orbitals"]], "Real space charge": [[309, "Real-space-charge"]], "Siesta \u2014 graphene": [[310, "Siesta-\u2014-graphene"]], "Calculating DOS and PDOS": [[310, "Calculating-DOS-and-PDOS"]], "ASE": [[311, "ase"]], "First steps": [[312, "First-steps"], [313, "first-steps"]], "Activating the viz framework": [[312, "Activating-the-viz-framework"]], "My first plots": [[312, "My-first-plots"]], "Plotable objects": [[312, "Plotable-objects"]], "Updating your plots": [[312, "Updating-your-plots"]], "Storing and loading plots": [[312, "Storing-and-loading-plots"]], "Different plotting backends": [[312, "Different-plotting-backends"]], "Discover more": [[312, "Discover-more"]], "Getting started": [[313, "getting-started"]], "Intro to multiple plots": [[314, "Intro-to-multiple-plots"]], "Multiple better than individual": [[314, "Multiple-better-than-individual"]], "Types of multiple plots": [[314, "Types-of-multiple-plots"]], "Merging existing plots": [[314, "Merging-existing-plots"]], "Let MultiplePlot handle plot creation": [[314, "Let-MultiplePlot-handle-plot-creation"]], "Intro to the framework": [[315, "intro-to-the-framework"]], "The plotting backend": [[315, "the-plotting-backend"]], "sisl\u2019s wrapper": [[315, "sisl-s-wrapper"]], "The Plot class": [[315, "the-plot-class"]], "The Configurable class": [[315, "the-configurable-class"]], "The Session class": [[315, "the-session-class"]], "Adding new backends": [[316, "Adding-new-backends"]], "Extending an existing backend": [[316, "Extending-an-existing-backend"]], "Creating a backend for a supported framework": [[316, "Creating-a-backend-for-a-supported-framework"]], "Creating a backend for a non supported framework": [[316, "Creating-a-backend-for-a-non-supported-framework"]], "The sisl.viz module": [[317, "the-sisl-viz-module"]], "Basic Tutorials": [[317, "basic-tutorials"]], "Showcase of plot classes": [[317, "showcase-of-plot-classes"]], "Using it with blender": [[317, "using-it-with-blender"]], "Combining plots": [[317, "combining-plots"]], "Do it yourself": [[317, "do-it-yourself"]], "BandsPlot": [[318, "BandsPlot"]], "Getting the bands that you want": [[318, "Getting-the-bands-that-you-want"]], "Quick styling": [[318, "Quick-styling"]], "Displaying the smallest gaps": [[318, "Displaying-the-smallest-gaps"]], "Displaying custom gaps": [[318, "Displaying-custom-gaps"]], "Individual band styling": [[318, "Individual-band-styling"]], "Displaying spin texture": [[318, "Displaying-spin-texture"]], "FatbandsPlot": [[319, "FatbandsPlot"]], "Requesting specific weights": [[319, "Requesting-specific-weights"]], "Scaling fatbands": [[319, "Scaling-fatbands"]], "Use BandsPlot settings": [[319, "Use-BandsPlot-settings"]], "GeometryPlot": [[320, "GeometryPlot"]], "Plotting in 3D, 2D and 1D": [[320, "Plotting-in-3D,-2D-and-1D"], [321, "Plotting-in-3D,-2D-and-1D"]], "Specifying the axes": [[320, "Specifying-the-axes"], [321, "Specifying-the-axes"]], "2D perspective": [[320, "2D-perspective"]], "Toggling bonds, atoms and cell": [[320, "Toggling-bonds,-atoms-and-cell"]], "Picking which atoms to display": [[320, "Picking-which-atoms-to-display"]], "Scaling atoms": [[320, "Scaling-atoms"]], "Custom styles for atoms.": [[320, "Custom-styles-for-atoms."]], "Custom styles for bonds": [[320, "Custom-styles-for-bonds"]], "Drawing arrows": [[320, "Drawing-arrows"]], "Drawing supercells": [[320, "Drawing-supercells"]], "GridPlot": [[321, "GridPlot"]], "Dimensionality reducing method": [[321, "Dimensionality-reducing-method"]], "Isosurfaces and contours": [[321, "Isosurfaces-and-contours"]], "Volumetric display": [[321, "Volumetric-display"]], "Colorscales": [[321, "Colorscales"]], "Using only part of the grid": [[321, "Using-only-part-of-the-grid"]], "Applying transformations": [[321, "Applying-transformations"]], "Visualizing supercells": [[321, "Visualizing-supercells"]], "Performing scans": [[321, "Performing-scans"]], "PdosPlot": [[322, "PdosPlot"]], "PDOS requests": [[322, "PDOS-requests"]], "Easy and fast DOS splitting": [[322, "Easy-and-fast-DOS-splitting"]], "Managing existing requests": [[322, "Managing-existing-requests"]], "WavefunctionPlot": [[323, "WavefunctionPlot"]], "Generating wavefunctions from a hamiltonian": [[323, "Generating-wavefunctions-from-a-hamiltonian"]], "Selecting the wavefunction": [[323, "Selecting-the-wavefunction"]], "Grid precision": [[323, "Grid-precision"]], "GridPlot settings": [[323, "GridPlot-settings"]], "<plotclass>": [[324, "<plotclass>"]], "Basic usage": [[324, "Basic-usage"]], "Let\u2019s get technical": [[324, "Let\u2019s-get-technical"]]}, "indexentries": {"atom": [[0, "index-0"]], "basic": [[0, "index-0"]], "geometry": [[0, "index-0"]], "matrix": [[0, "index-1"]], "orbital": [[0, "index-0"]], "sparse-matrix": [[0, "index-1"]], "supercell": [[0, "index-0"]], "module": [[1, "module-sisl.geom"], [131, "module-sisl"], [133, "module-sisl.io.bigdft"], [134, "module-sisl.io.fhiaims"], [229, "module-sisl.io.gulp"], [230, "module-sisl.io"], [231, "module-sisl.io.openmx"], [232, "module-sisl.io.orca"], [233, "module-sisl.io.scaleup"], [234, "module-sisl.io.siesta"], [235, "module-sisl.io.tbtrans"], [236, "module-sisl.io.vasp"], [237, "module-sisl.io.wannier90"], [238, "module-sisl.mixing"], [239, "module-sisl.physics"], [242, "module-sisl.physics.electron"], [244, "module-sisl.physics.phonon"], [246, "module-sisl.constant"], [247, "module-sisl.unit"], [247, "module-sisl.unit.siesta"], [248, "module-sisl.utils"], [250, "module-sisl.shape"], [292, "module-sisl_toolbox.btd"], [296, "module-sisl_toolbox"], [297, "module-sisl_toolbox.siesta.atom"], [300, "module-sisl_toolbox.transiesta.poisson"]], "sisl.geom": [[1, "module-sisl.geom"]], "atom (class in sisl)": [[2, "sisl.Atom"]], "z (sisl.atom property)": [[2, "sisl.Atom.Z"]], "__init__() (sisl.atom method)": [[2, "sisl.Atom.__init__"]], "copy() (sisl.atom method)": [[2, "sisl.Atom.copy"]], "equal() (sisl.atom method)": [[2, "sisl.Atom.equal"]], "index() (sisl.atom method)": [[2, "sisl.Atom.index"]], "iter() (sisl.atom method)": [[2, "sisl.Atom.iter"]], "mass (sisl.atom property)": [[2, "sisl.Atom.mass"]], "maxr() (sisl.atom method)": [[2, "sisl.Atom.maxR"]], "no (sisl.atom property)": [[2, "sisl.Atom.no"]], "orbitals (sisl.atom property)": [[2, "sisl.Atom.orbitals"]], "radius() (sisl.atom method)": [[2, "sisl.Atom.radius"]], "remove() (sisl.atom method)": [[2, "sisl.Atom.remove"]], "scale() (sisl.atom method)": [[2, "sisl.Atom.scale"]], "sub() (sisl.atom method)": [[2, "sisl.Atom.sub"]], "symbol (sisl.atom property)": [[2, "sisl.Atom.symbol"]], "tag (sisl.atom property)": [[2, "sisl.Atom.tag"]], "tosphere() (sisl.atom method)": [[2, "sisl.Atom.toSphere"]], "atomicorbital (class in sisl)": [[3, "sisl.AtomicOrbital"]], "p (sisl.atomicorbital property)": [[3, "sisl.AtomicOrbital.P"]], "r (sisl.atomicorbital property)": [[3, "sisl.AtomicOrbital.R"]], "__init__() (sisl.atomicorbital method)": [[3, "sisl.AtomicOrbital.__init__"]], "copy() (sisl.atomicorbital method)": [[3, "sisl.AtomicOrbital.copy"]], "equal() (sisl.atomicorbital method)": [[3, "sisl.AtomicOrbital.equal"]], "l (sisl.atomicorbital property)": [[3, "sisl.AtomicOrbital.l"]], "m (sisl.atomicorbital property)": [[3, "sisl.AtomicOrbital.m"]], "n (sisl.atomicorbital property)": [[3, "sisl.AtomicOrbital.n"]], "name() (sisl.atomicorbital method)": [[3, "sisl.AtomicOrbital.name"]], "orb (sisl.atomicorbital property)": [[3, "sisl.AtomicOrbital.orb"]], "psi() (sisl.atomicorbital method)": [[3, "sisl.AtomicOrbital.psi"]], "psi_spher() (sisl.atomicorbital method)": [[3, "sisl.AtomicOrbital.psi_spher"]], "q0 (sisl.atomicorbital property)": [[3, "sisl.AtomicOrbital.q0"]], "radial() (sisl.atomicorbital method)": [[3, "sisl.AtomicOrbital.radial"]], "scale() (sisl.atomicorbital method)": [[3, "sisl.AtomicOrbital.scale"]], "set_radial() (sisl.atomicorbital method)": [[3, "sisl.AtomicOrbital.set_radial"]], "spher() (sisl.atomicorbital method)": [[3, "sisl.AtomicOrbital.spher"]], "tag (sisl.atomicorbital property)": [[3, "sisl.AtomicOrbital.tag"]], "togrid() (sisl.atomicorbital method)": [[3, "sisl.AtomicOrbital.toGrid"]], "tosphere() (sisl.atomicorbital method)": [[3, "sisl.AtomicOrbital.toSphere"]], "zeta (sisl.atomicorbital property)": [[3, "sisl.AtomicOrbital.zeta"]], "atoms (class in sisl)": [[4, "sisl.Atoms"]], "z (sisl.atoms property)": [[4, "sisl.Atoms.Z"]], "__init__() (sisl.atoms method)": [[4, "sisl.Atoms.__init__"]], "add() (sisl.atoms method)": [[4, "sisl.Atoms.add"]], "append() (sisl.atoms method)": [[4, "sisl.Atoms.append"]], "atom (sisl.atoms property)": [[4, "sisl.Atoms.atom"]], "copy() (sisl.atoms method)": [[4, "sisl.Atoms.copy"]], "equal() (sisl.atoms method)": [[4, "sisl.Atoms.equal"]], "firsto (sisl.atoms property)": [[4, "sisl.Atoms.firsto"]], "formula() (sisl.atoms method)": [[4, "sisl.Atoms.formula"]], "group_atom_data() (sisl.atoms method)": [[4, "sisl.Atoms.group_atom_data"]], "hassame() (sisl.atoms method)": [[4, "sisl.Atoms.hassame"]], "index() (sisl.atoms method)": [[4, "sisl.Atoms.index"]], "insert() (sisl.atoms method)": [[4, "sisl.Atoms.insert"]], "iter() (sisl.atoms method)": [[4, "sisl.Atoms.iter"]], "lasto (sisl.atoms property)": [[4, "sisl.Atoms.lasto"]], "mass (sisl.atoms property)": [[4, "sisl.Atoms.mass"]], "maxr() (sisl.atoms method)": [[4, "sisl.Atoms.maxR"]], "no (sisl.atoms property)": [[4, "sisl.Atoms.no"]], "nspecie (sisl.atoms property)": [[4, "sisl.Atoms.nspecie"]], "orbital() (sisl.atoms method)": [[4, "sisl.Atoms.orbital"]], "orbitals (sisl.atoms property)": [[4, "sisl.Atoms.orbitals"]], "prepend() (sisl.atoms method)": [[4, "sisl.Atoms.prepend"]], "q0 (sisl.atoms property)": [[4, "sisl.Atoms.q0"]], "reduce() (sisl.atoms method)": [[4, "sisl.Atoms.reduce"]], "remove() (sisl.atoms method)": [[4, "sisl.Atoms.remove"]], "reorder() (sisl.atoms method)": [[4, "sisl.Atoms.reorder"]], "repeat() (sisl.atoms method)": [[4, "sisl.Atoms.repeat"]], "replace() (sisl.atoms method)": [[4, "sisl.Atoms.replace"]], "replace_atom() (sisl.atoms method)": [[4, "sisl.Atoms.replace_atom"]], "reverse() (sisl.atoms method)": [[4, "sisl.Atoms.reverse"]], "scale() (sisl.atoms method)": [[4, "sisl.Atoms.scale"]], "specie (sisl.atoms property)": [[4, "sisl.Atoms.specie"]], "specie_index() (sisl.atoms method)": [[4, "sisl.Atoms.specie_index"]], "sub() (sisl.atoms method)": [[4, "sisl.Atoms.sub"]], "swap() (sisl.atoms method)": [[4, "sisl.Atoms.swap"]], "swap_atom() (sisl.atoms method)": [[4, "sisl.Atoms.swap_atom"]], "tile() (sisl.atoms method)": [[4, "sisl.Atoms.tile"]], "gtorbital (class in sisl)": [[5, "sisl.GTOrbital"]], "r (sisl.gtorbital property)": [[5, "sisl.GTOrbital.R"]], "__init__() (sisl.gtorbital method)": [[5, "sisl.GTOrbital.__init__"]], "alpha (sisl.gtorbital property)": [[5, "sisl.GTOrbital.alpha"]], "coeff (sisl.gtorbital property)": [[5, "sisl.GTOrbital.coeff"]], "copy() (sisl.gtorbital method)": [[5, "sisl.GTOrbital.copy"]], "equal() (sisl.gtorbital method)": [[5, "sisl.GTOrbital.equal"]], "l (sisl.gtorbital property)": [[5, "sisl.GTOrbital.l"]], "m (sisl.gtorbital property)": [[5, "sisl.GTOrbital.m"]], "n (sisl.gtorbital property)": [[5, "sisl.GTOrbital.n"]], "name() (sisl.gtorbital method)": [[5, "sisl.GTOrbital.name"]], "psi() (sisl.gtorbital method)": [[5, "sisl.GTOrbital.psi"]], "psi_spher() (sisl.gtorbital method)": [[5, "sisl.GTOrbital.psi_spher"]], "q0 (sisl.gtorbital property)": [[5, "sisl.GTOrbital.q0"]], "radial() (sisl.gtorbital method)": [[5, "sisl.GTOrbital.radial"]], "scale() (sisl.gtorbital method)": [[5, "sisl.GTOrbital.scale"]], "spher() (sisl.gtorbital method)": [[5, "sisl.GTOrbital.spher"]], "tag (sisl.gtorbital property)": [[5, "sisl.GTOrbital.tag"]], "togrid() (sisl.gtorbital method)": [[5, "sisl.GTOrbital.toGrid"]], "tosphere() (sisl.gtorbital method)": [[5, "sisl.GTOrbital.toSphere"]], "geometry (class in sisl)": [[6, "sisl.Geometry"]], "rij() (sisl.geometry method)": [[6, "sisl.Geometry.Rij"], [6, "sisl.Geometry.rij"]], "__init__() (sisl.geometry method)": [[6, "sisl.Geometry.__init__"]], "a2isc() (sisl.geometry method)": [[6, "sisl.Geometry.a2isc"]], "a2o() (sisl.geometry method)": [[6, "sisl.Geometry.a2o"]], "a2sc() (sisl.geometry method)": [[6, "sisl.Geometry.a2sc"]], "a2transpose() (sisl.geometry method)": [[6, "sisl.Geometry.a2transpose"]], "add() (sisl.geometry method)": [[6, "sisl.Geometry.add"]], "add_vacuum() (sisl.geometry method)": [[6, "sisl.Geometry.add_vacuum"]], "angle() (sisl.geometry method)": [[6, "sisl.Geometry.angle"]], "append() (sisl.geometry method)": [[6, "sisl.Geometry.append"]], "apply() (sisl.geometry method)": [[6, "sisl.Geometry.apply"]], "area() (sisl.geometry method)": [[6, "sisl.Geometry.area"]], "as_primary() (sisl.geometry method)": [[6, "sisl.Geometry.as_primary"]], "asc2uc() (sisl.geometry method)": [[6, "sisl.Geometry.asc2uc"]], "atoms (sisl.geometry property)": [[6, "sisl.Geometry.atoms"]], "attach() (sisl.geometry method)": [[6, "sisl.Geometry.attach"]], "auc2sc() (sisl.geometry method)": [[6, "sisl.Geometry.auc2sc"]], "axyz() (sisl.geometry method)": [[6, "sisl.Geometry.axyz"]], "bond_correct() (sisl.geometry method)": [[6, "sisl.Geometry.bond_correct"]], "cell (sisl.geometry property)": [[6, "sisl.Geometry.cell"]], "center() (sisl.geometry method)": [[6, "sisl.Geometry.center"]], "close() (sisl.geometry method)": [[6, "sisl.Geometry.close"]], "close_sc() (sisl.geometry method)": [[6, "sisl.Geometry.close_sc"]], "copy() (sisl.geometry method)": [[6, "sisl.Geometry.copy"]], "distance() (sisl.geometry method)": [[6, "sisl.Geometry.distance"]], "equal() (sisl.geometry method)": [[6, "sisl.Geometry.equal"]], "firsto (sisl.geometry property)": [[6, "sisl.Geometry.firsto"]], "fxyz (sisl.geometry property)": [[6, "sisl.Geometry.fxyz"]], "ir() (sisl.geometry method)": [[6, "sisl.Geometry.iR"]], "icell (sisl.geometry property)": [[6, "sisl.Geometry.icell"]], "insert() (sisl.geometry method)": [[6, "sisl.Geometry.insert"]], "is_orthogonal() (sisl.geometry method)": [[6, "sisl.Geometry.is_orthogonal"]], "isc_off (sisl.geometry property)": [[6, "sisl.Geometry.isc_off"]], "iter() (sisl.geometry method)": [[6, "sisl.Geometry.iter"]], "iter_block() (sisl.geometry method)": [[6, "sisl.Geometry.iter_block"]], "iter_block_rand() (sisl.geometry method)": [[6, "sisl.Geometry.iter_block_rand"]], "iter_block_shape() (sisl.geometry method)": [[6, "sisl.Geometry.iter_block_shape"]], "iter_orbitals() (sisl.geometry method)": [[6, "sisl.Geometry.iter_orbitals"]], "iter_species() (sisl.geometry method)": [[6, "sisl.Geometry.iter_species"]], "lasto (sisl.geometry property)": [[6, "sisl.Geometry.lasto"]], "length (sisl.geometry property)": [[6, "sisl.Geometry.length"]], "mass (sisl.geometry property)": [[6, "sisl.Geometry.mass"]], "maxr() (sisl.geometry method)": [[6, "sisl.Geometry.maxR"]], "mirror() (sisl.geometry method)": [[6, "sisl.Geometry.mirror"]], "move() (sisl.geometry method)": [[6, "sisl.Geometry.move"]], "n_s (sisl.geometry property)": [[6, "sisl.Geometry.n_s"]], "na (sisl.geometry property)": [[6, "sisl.Geometry.na"]], "na_s (sisl.geometry property)": [[6, "sisl.Geometry.na_s"]], "names (sisl.geometry property)": [[6, "sisl.Geometry.names"]], "new (sisl.geometry attribute)": [[6, "sisl.Geometry.new"]], "no (sisl.geometry property)": [[6, "sisl.Geometry.no"]], "no_s (sisl.geometry property)": [[6, "sisl.Geometry.no_s"]], "nsc (sisl.geometry property)": [[6, "sisl.Geometry.nsc"]], "o2a() (sisl.geometry method)": [[6, "sisl.Geometry.o2a"]], "o2isc() (sisl.geometry method)": [[6, "sisl.Geometry.o2isc"]], "o2sc() (sisl.geometry method)": [[6, "sisl.Geometry.o2sc"]], "o2transpose() (sisl.geometry method)": [[6, "sisl.Geometry.o2transpose"]], "orij() (sisl.geometry method)": [[6, "sisl.Geometry.oRij"], [6, "sisl.Geometry.orij"]], "optimize_nsc() (sisl.geometry method)": [[6, "sisl.Geometry.optimize_nsc"]], "orbitals (sisl.geometry property)": [[6, "sisl.Geometry.orbitals"]], "origin (sisl.geometry property)": [[6, "sisl.Geometry.origin"]], "origo (sisl.geometry property)": [[6, "sisl.Geometry.origo"]], "osc2uc() (sisl.geometry method)": [[6, "sisl.Geometry.osc2uc"]], "ouc2sc() (sisl.geometry method)": [[6, "sisl.Geometry.ouc2sc"]], "overlap() (sisl.geometry method)": [[6, "sisl.Geometry.overlap"]], "plot (sisl.geometry attribute)": [[6, "sisl.Geometry.plot"]], "prepend() (sisl.geometry method)": [[6, "sisl.Geometry.prepend"]], "q0 (sisl.geometry property)": [[6, "sisl.Geometry.q0"]], "rcell (sisl.geometry property)": [[6, "sisl.Geometry.rcell"]], "read() (sisl.geometry static method)": [[6, "sisl.Geometry.read"]], "reduce() (sisl.geometry method)": [[6, "sisl.Geometry.reduce"]], "remove() (sisl.geometry method)": [[6, "sisl.Geometry.remove"]], "remove_orbital() (sisl.geometry method)": [[6, "sisl.Geometry.remove_orbital"]], "reorder() (sisl.geometry method)": [[6, "sisl.Geometry.reorder"]], "repeat() (sisl.geometry method)": [[6, "sisl.Geometry.repeat"]], "replace() (sisl.geometry method)": [[6, "sisl.Geometry.replace"]], "reverse() (sisl.geometry method)": [[6, "sisl.Geometry.reverse"]], "rotate() (sisl.geometry method)": [[6, "sisl.Geometry.rotate"]], "rotate_miller() (sisl.geometry method)": [[6, "sisl.Geometry.rotate_miller"]], "sc2uc() (sisl.geometry method)": [[6, "sisl.Geometry.sc2uc"]], "sc_index() (sisl.geometry method)": [[6, "sisl.Geometry.sc_index"]], "sc_off (sisl.geometry property)": [[6, "sisl.Geometry.sc_off"]], "scale() (sisl.geometry method)": [[6, "sisl.Geometry.scale"]], "set_nsc() (sisl.geometry method)": [[6, "sisl.Geometry.set_nsc"]], "set_sc() (sisl.geometry method)": [[6, "sisl.Geometry.set_sc"]], "set_supercell() (sisl.geometry method)": [[6, "sisl.Geometry.set_supercell"]], "sort() (sisl.geometry method)": [[6, "sisl.Geometry.sort"]], "sparserij() (sisl.geometry method)": [[6, "sisl.Geometry.sparserij"]], "sub() (sisl.geometry method)": [[6, "sisl.Geometry.sub"]], "sub_orbital() (sisl.geometry method)": [[6, "sisl.Geometry.sub_orbital"]], "swap() (sisl.geometry method)": [[6, "sisl.Geometry.swap"]], "swapaxes() (sisl.geometry method)": [[6, "sisl.Geometry.swapaxes"]], "tile() (sisl.geometry method)": [[6, "sisl.Geometry.tile"]], "to (sisl.geometry attribute)": [[6, "sisl.Geometry.to"]], "translate() (sisl.geometry method)": [[6, "sisl.Geometry.translate"]], "translate2uc() (sisl.geometry method)": [[6, "sisl.Geometry.translate2uc"]], "uc2sc() (sisl.geometry method)": [[6, "sisl.Geometry.uc2sc"]], "unrepeat() (sisl.geometry method)": [[6, "sisl.Geometry.unrepeat"]], "untile() (sisl.geometry method)": [[6, "sisl.Geometry.untile"]], "volume (sisl.geometry property)": [[6, "sisl.Geometry.volume"]], "within() (sisl.geometry method)": [[6, "sisl.Geometry.within"]], "within_inf() (sisl.geometry method)": [[6, "sisl.Geometry.within_inf"]], "within_sc() (sisl.geometry method)": [[6, "sisl.Geometry.within_sc"]], "write() (sisl.geometry method)": [[6, "sisl.Geometry.write"]], "dirichlet (sisl.grid attribute)": [[7, "sisl.Grid.DIRICHLET"]], "grid (class in sisl)": [[7, "sisl.Grid"]], "neumann (sisl.grid attribute)": [[7, "sisl.Grid.NEUMANN"]], "open (sisl.grid attribute)": [[7, "sisl.Grid.OPEN"]], "periodic (sisl.grid attribute)": [[7, "sisl.Grid.PERIODIC"]], "__init__() (sisl.grid method)": [[7, "sisl.Grid.__init__"]], "add_vacuum() (sisl.grid method)": [[7, "sisl.Grid.add_vacuum"]], "append() (sisl.grid method)": [[7, "sisl.Grid.append"]], "apply() (sisl.grid method)": [[7, "sisl.Grid.apply"]], "area() (sisl.grid method)": [[7, "sisl.Grid.area"]], "average() (sisl.grid method)": [[7, "sisl.Grid.average"]], "cell (sisl.grid property)": [[7, "sisl.Grid.cell"]], "copy() (sisl.grid method)": [[7, "sisl.Grid.copy"]], "cross_section() (sisl.grid method)": [[7, "sisl.Grid.cross_section"]], "dcell (sisl.grid property)": [[7, "sisl.Grid.dcell"]], "dkind (sisl.grid property)": [[7, "sisl.Grid.dkind"]], "dtype (sisl.grid property)": [[7, "sisl.Grid.dtype"]], "dvolume (sisl.grid property)": [[7, "sisl.Grid.dvolume"]], "fill() (sisl.grid method)": [[7, "sisl.Grid.fill"]], "icell (sisl.grid property)": [[7, "sisl.Grid.icell"]], "index() (sisl.grid method)": [[7, "sisl.Grid.index"]], "index2xyz() (sisl.grid method)": [[7, "sisl.Grid.index2xyz"]], "index_fold() (sisl.grid method)": [[7, "sisl.Grid.index_fold"]], "index_truncate() (sisl.grid method)": [[7, "sisl.Grid.index_truncate"]], "interp() (sisl.grid method)": [[7, "sisl.Grid.interp"]], "is_orthogonal() (sisl.grid method)": [[7, "sisl.Grid.is_orthogonal"]], "isc_off (sisl.grid property)": [[7, "sisl.Grid.isc_off"]], "isosurface() (sisl.grid method)": [[7, "sisl.Grid.isosurface"]], "length (sisl.grid property)": [[7, "sisl.Grid.length"]], "mean() (sisl.grid method)": [[7, "sisl.Grid.mean"]], "mgrid() (sisl.grid class method)": [[7, "sisl.Grid.mgrid"]], "n_s (sisl.grid property)": [[7, "sisl.Grid.n_s"]], "nsc (sisl.grid property)": [[7, "sisl.Grid.nsc"]], "origin (sisl.grid property)": [[7, "sisl.Grid.origin"]], "origo (sisl.grid property)": [[7, "sisl.Grid.origo"]], "plot (sisl.grid attribute)": [[7, "sisl.Grid.plot"]], "pyamg_boundary_condition() (sisl.grid method)": [[7, "sisl.Grid.pyamg_boundary_condition"]], "pyamg_fix() (sisl.grid method)": [[7, "sisl.Grid.pyamg_fix"]], "pyamg_index() (sisl.grid method)": [[7, "sisl.Grid.pyamg_index"]], "pyamg_source() (sisl.grid class method)": [[7, "sisl.Grid.pyamg_source"]], "rcell (sisl.grid property)": [[7, "sisl.Grid.rcell"]], "read() (sisl.grid static method)": [[7, "sisl.Grid.read"]], "remove() (sisl.grid method)": [[7, "sisl.Grid.remove"]], "remove_part() (sisl.grid method)": [[7, "sisl.Grid.remove_part"]], "sc_index() (sisl.grid method)": [[7, "sisl.Grid.sc_index"]], "sc_off (sisl.grid property)": [[7, "sisl.Grid.sc_off"]], "set_bc() (sisl.grid method)": [[7, "sisl.Grid.set_bc"]], "set_boundary() (sisl.grid method)": [[7, "sisl.Grid.set_boundary"]], "set_boundary_condition() (sisl.grid method)": [[7, "sisl.Grid.set_boundary_condition"]], "set_geometry() (sisl.grid method)": [[7, "sisl.Grid.set_geometry"]], "set_grid() (sisl.grid method)": [[7, "sisl.Grid.set_grid"]], "set_nsc() (sisl.grid method)": [[7, "sisl.Grid.set_nsc"]], "set_sc() (sisl.grid method)": [[7, "sisl.Grid.set_sc"]], "set_supercell() (sisl.grid method)": [[7, "sisl.Grid.set_supercell"]], "shape (sisl.grid property)": [[7, "sisl.Grid.shape"]], "size (sisl.grid property)": [[7, "sisl.Grid.size"]], "smooth() (sisl.grid method)": [[7, "sisl.Grid.smooth"]], "sub() (sisl.grid method)": [[7, "sisl.Grid.sub"]], "sub_part() (sisl.grid method)": [[7, "sisl.Grid.sub_part"]], "sum() (sisl.grid method)": [[7, "sisl.Grid.sum"]], "swapaxes() (sisl.grid method)": [[7, "sisl.Grid.swapaxes"]], "tile() (sisl.grid method)": [[7, "sisl.Grid.tile"]], "topyamg() (sisl.grid method)": [[7, "sisl.Grid.topyamg"]], "volume (sisl.grid property)": [[7, "sisl.Grid.volume"]], "write() (sisl.grid method)": [[7, "sisl.Grid.write"]], "hydrogenicorbital (class in sisl)": [[8, "sisl.HydrogenicOrbital"]], "p (sisl.hydrogenicorbital property)": [[8, "sisl.HydrogenicOrbital.P"]], "r (sisl.hydrogenicorbital property)": [[8, "sisl.HydrogenicOrbital.R"]], "__init__() (sisl.hydrogenicorbital method)": [[8, "sisl.HydrogenicOrbital.__init__"]], "copy() (sisl.hydrogenicorbital method)": [[8, "sisl.HydrogenicOrbital.copy"]], "equal() (sisl.hydrogenicorbital method)": [[8, "sisl.HydrogenicOrbital.equal"]], "l (sisl.hydrogenicorbital property)": [[8, "sisl.HydrogenicOrbital.l"]], "m (sisl.hydrogenicorbital property)": [[8, "sisl.HydrogenicOrbital.m"]], "n (sisl.hydrogenicorbital property)": [[8, "sisl.HydrogenicOrbital.n"]], "name() (sisl.hydrogenicorbital method)": [[8, "sisl.HydrogenicOrbital.name"]], "orb (sisl.hydrogenicorbital property)": [[8, "sisl.HydrogenicOrbital.orb"]], "psi() (sisl.hydrogenicorbital method)": [[8, "sisl.HydrogenicOrbital.psi"]], "psi_spher() (sisl.hydrogenicorbital method)": [[8, "sisl.HydrogenicOrbital.psi_spher"]], "q0 (sisl.hydrogenicorbital property)": [[8, "sisl.HydrogenicOrbital.q0"]], "radial() (sisl.hydrogenicorbital method)": [[8, "sisl.HydrogenicOrbital.radial"]], "scale() (sisl.hydrogenicorbital method)": [[8, "sisl.HydrogenicOrbital.scale"]], "set_radial() (sisl.hydrogenicorbital method)": [[8, "sisl.HydrogenicOrbital.set_radial"]], "spher() (sisl.hydrogenicorbital method)": [[8, "sisl.HydrogenicOrbital.spher"]], "tag (sisl.hydrogenicorbital property)": [[8, "sisl.HydrogenicOrbital.tag"]], "togrid() (sisl.hydrogenicorbital method)": [[8, "sisl.HydrogenicOrbital.toGrid"]], "tosphere() (sisl.hydrogenicorbital method)": [[8, "sisl.HydrogenicOrbital.toSphere"]], "zeta (sisl.hydrogenicorbital property)": [[8, "sisl.HydrogenicOrbital.zeta"]], "orbital (class in sisl)": [[9, "sisl.Orbital"]], "r (sisl.orbital property)": [[9, "sisl.Orbital.R"]], "__init__() (sisl.orbital method)": [[9, "sisl.Orbital.__init__"]], "copy() (sisl.orbital method)": [[9, "sisl.Orbital.copy"]], "equal() (sisl.orbital method)": [[9, "sisl.Orbital.equal"]], "name() (sisl.orbital method)": [[9, "sisl.Orbital.name"]], "psi() (sisl.orbital method)": [[9, "sisl.Orbital.psi"]], "q0 (sisl.orbital property)": [[9, "sisl.Orbital.q0"]], "scale() (sisl.orbital method)": [[9, "sisl.Orbital.scale"]], "tag (sisl.orbital property)": [[9, "sisl.Orbital.tag"]], "togrid() (sisl.orbital method)": [[9, "sisl.Orbital.toGrid"]], "tosphere() (sisl.orbital method)": [[9, "sisl.Orbital.toSphere"]], "periodictable (class in sisl)": [[10, "sisl.PeriodicTable"]], "z() (sisl.periodictable method)": [[10, "sisl.PeriodicTable.Z"]], "z_int() (sisl.periodictable method)": [[10, "sisl.PeriodicTable.Z_int"]], "z_label() (sisl.periodictable method)": [[10, "sisl.PeriodicTable.Z_label"]], "z_short() (sisl.periodictable method)": [[10, "sisl.PeriodicTable.Z_short"]], "atomic_mass() (sisl.periodictable method)": [[10, "sisl.PeriodicTable.atomic_mass"]], "radii() (sisl.periodictable method)": [[10, "sisl.PeriodicTable.radii"]], "radius() (sisl.periodictable method)": [[10, "sisl.PeriodicTable.radius"]], "quaternion (class in sisl)": [[11, "sisl.Quaternion"]], "__init__() (sisl.quaternion method)": [[11, "sisl.Quaternion.__init__"]], "angle (sisl.quaternion property)": [[11, "sisl.Quaternion.angle"]], "conj() (sisl.quaternion method)": [[11, "sisl.Quaternion.conj"]], "copy() (sisl.quaternion method)": [[11, "sisl.Quaternion.copy"]], "degree (sisl.quaternion property)": [[11, "sisl.Quaternion.degree"]], "norm() (sisl.quaternion method)": [[11, "sisl.Quaternion.norm"]], "radian (sisl.quaternion property)": [[11, "sisl.Quaternion.radian"]], "rotate() (sisl.quaternion method)": [[11, "sisl.Quaternion.rotate"]], "r (sisl.storbital property)": [[12, "sisl.STOrbital.R"]], "storbital (class in sisl)": [[12, "sisl.STOrbital"]], "__init__() (sisl.storbital method)": [[12, "sisl.STOrbital.__init__"]], "alpha (sisl.storbital property)": [[12, "sisl.STOrbital.alpha"]], "coeff (sisl.storbital property)": [[12, "sisl.STOrbital.coeff"]], "copy() (sisl.storbital method)": [[12, "sisl.STOrbital.copy"]], "equal() (sisl.storbital method)": [[12, "sisl.STOrbital.equal"]], "l (sisl.storbital property)": [[12, "sisl.STOrbital.l"]], "m (sisl.storbital property)": [[12, "sisl.STOrbital.m"]], "n (sisl.storbital property)": [[12, "sisl.STOrbital.n"]], "name() (sisl.storbital method)": [[12, "sisl.STOrbital.name"]], "psi() (sisl.storbital method)": [[12, "sisl.STOrbital.psi"]], "psi_spher() (sisl.storbital method)": [[12, "sisl.STOrbital.psi_spher"]], "q0 (sisl.storbital property)": [[12, "sisl.STOrbital.q0"]], "radial() (sisl.storbital method)": [[12, "sisl.STOrbital.radial"]], "scale() (sisl.storbital method)": [[12, "sisl.STOrbital.scale"]], "spher() (sisl.storbital method)": [[12, "sisl.STOrbital.spher"]], "tag (sisl.storbital property)": [[12, "sisl.STOrbital.tag"]], "togrid() (sisl.storbital method)": [[12, "sisl.STOrbital.toGrid"]], "tosphere() (sisl.storbital method)": [[12, "sisl.STOrbital.toSphere"]], "rij() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.Rij"], [13, "sisl.SparseAtom.rij"]], "sparseatom (class in sisl)": [[13, "sisl.SparseAtom"]], "__init__() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.__init__"]], "construct() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.construct"]], "copy() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.copy"]], "create_construct() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.create_construct"]], "dim (sisl.sparseatom property)": [[13, "sisl.SparseAtom.dim"]], "dkind (sisl.sparseatom property)": [[13, "sisl.SparseAtom.dkind"]], "dtype (sisl.sparseatom property)": [[13, "sisl.SparseAtom.dtype"]], "edges() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.edges"]], "eliminate_zeros() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.eliminate_zeros"]], "empty() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.empty"]], "finalize() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.finalize"]], "finalized (sisl.sparseatom property)": [[13, "sisl.SparseAtom.finalized"]], "fromsp() (sisl.sparseatom class method)": [[13, "sisl.SparseAtom.fromsp"]], "geometry (sisl.sparseatom property)": [[13, "sisl.SparseAtom.geometry"]], "iter_nnz() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.iter_nnz"]], "nnz (sisl.sparseatom property)": [[13, "sisl.SparseAtom.nnz"]], "nonzero() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.nonzero"]], "remove() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.remove"]], "repeat() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.repeat"]], "reset() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.reset"]], "set_nsc() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.set_nsc"]], "shape (sisl.sparseatom property)": [[13, "sisl.SparseAtom.shape"]], "spalign() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.spalign"]], "spsame() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.spsame"]], "sub() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.sub"]], "swap() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.swap"]], "tile() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.tile"]], "tocsr() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.tocsr"]], "transpose() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.transpose"]], "unrepeat() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.unrepeat"]], "untile() (sisl.sparseatom method)": [[13, "sisl.SparseAtom.untile"]], "sparsecsr (class in sisl)": [[14, "sisl.SparseCSR"]], "__init__() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.__init__"]], "align() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.align"]], "col (sisl.sparsecsr attribute)": [[14, "sisl.SparseCSR.col"]], "copy() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.copy"]], "data (sisl.sparsecsr property)": [[14, "sisl.SparseCSR.data"]], "delete_columns() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.delete_columns"]], "diagonal() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.diagonal"]], "diags() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.diags"]], "dim (sisl.sparsecsr property)": [[14, "sisl.SparseCSR.dim"]], "dkind (sisl.sparsecsr property)": [[14, "sisl.SparseCSR.dkind"]], "dtype (sisl.sparsecsr property)": [[14, "sisl.SparseCSR.dtype"]], "edges() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.edges"]], "eliminate_zeros() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.eliminate_zeros"]], "empty() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.empty"]], "finalize() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.finalize"]], "finalized (sisl.sparsecsr property)": [[14, "sisl.SparseCSR.finalized"]], "fromsp() (sisl.sparsecsr class method)": [[14, "sisl.SparseCSR.fromsp"]], "iter_nnz() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.iter_nnz"]], "ncol (sisl.sparsecsr attribute)": [[14, "sisl.SparseCSR.ncol"]], "nnz (sisl.sparsecsr property)": [[14, "sisl.SparseCSR.nnz"]], "nonzero() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.nonzero"]], "ptr (sisl.sparsecsr attribute)": [[14, "sisl.SparseCSR.ptr"]], "remove() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.remove"]], "scale_columns() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.scale_columns"]], "shape (sisl.sparsecsr property)": [[14, "sisl.SparseCSR.shape"]], "sparsity_union() (sisl.sparsecsr class method)": [[14, "sisl.SparseCSR.sparsity_union"]], "spsame() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.spsame"]], "sub() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.sub"]], "tocsr() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.tocsr"]], "todense() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.todense"]], "transform() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.transform"]], "translate_columns() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.translate_columns"]], "transpose() (sisl.sparsecsr method)": [[14, "sisl.SparseCSR.transpose"]], "rij() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.Rij"], [15, "sisl.SparseOrbital.rij"]], "sparseorbital (class in sisl)": [[15, "sisl.SparseOrbital"]], "__init__() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.__init__"]], "add() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.add"]], "append() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.append"]], "construct() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.construct"]], "copy() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.copy"]], "create_construct() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.create_construct"]], "dim (sisl.sparseorbital property)": [[15, "sisl.SparseOrbital.dim"]], "dkind (sisl.sparseorbital property)": [[15, "sisl.SparseOrbital.dkind"]], "dtype (sisl.sparseorbital property)": [[15, "sisl.SparseOrbital.dtype"]], "edges() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.edges"]], "eliminate_zeros() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.eliminate_zeros"]], "empty() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.empty"]], "finalize() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.finalize"]], "finalized (sisl.sparseorbital property)": [[15, "sisl.SparseOrbital.finalized"]], "fromsp() (sisl.sparseorbital class method)": [[15, "sisl.SparseOrbital.fromsp"]], "geometry (sisl.sparseorbital property)": [[15, "sisl.SparseOrbital.geometry"]], "iter_nnz() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.iter_nnz"]], "nnz (sisl.sparseorbital property)": [[15, "sisl.SparseOrbital.nnz"]], "nonzero() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.nonzero"]], "prepend() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.prepend"]], "remove() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.remove"]], "remove_orbital() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.remove_orbital"]], "repeat() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.repeat"]], "replace() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.replace"]], "reset() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.reset"]], "set_nsc() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.set_nsc"]], "shape (sisl.sparseorbital property)": [[15, "sisl.SparseOrbital.shape"]], "spalign() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.spalign"]], "spsame() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.spsame"]], "sub() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.sub"]], "sub_orbital() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.sub_orbital"]], "swap() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.swap"]], "tile() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.tile"]], "tosparseatom() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.toSparseAtom"]], "tocsr() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.tocsr"]], "transpose() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.transpose"]], "unrepeat() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.unrepeat"]], "untile() (sisl.sparseorbital method)": [[15, "sisl.SparseOrbital.untile"]], "r (sisl.sphericalorbital property)": [[16, "sisl.SphericalOrbital.R"]], "sphericalorbital (class in sisl)": [[16, "sisl.SphericalOrbital"]], "__init__() (sisl.sphericalorbital method)": [[16, "sisl.SphericalOrbital.__init__"]], "copy() (sisl.sphericalorbital method)": [[16, "sisl.SphericalOrbital.copy"]], "equal() (sisl.sphericalorbital method)": [[16, "sisl.SphericalOrbital.equal"]], "f (sisl.sphericalorbital attribute)": [[16, "sisl.SphericalOrbital.f"]], "l (sisl.sphericalorbital property)": [[16, "sisl.SphericalOrbital.l"]], "name() (sisl.sphericalorbital method)": [[16, "sisl.SphericalOrbital.name"]], "psi() (sisl.sphericalorbital method)": [[16, "sisl.SphericalOrbital.psi"]], "psi_spher() (sisl.sphericalorbital method)": [[16, "sisl.SphericalOrbital.psi_spher"]], "q0 (sisl.sphericalorbital property)": [[16, "sisl.SphericalOrbital.q0"]], "radial() (sisl.sphericalorbital method)": [[16, "sisl.SphericalOrbital.radial"]], "scale() (sisl.sphericalorbital method)": [[16, "sisl.SphericalOrbital.scale"]], "set_radial() (sisl.sphericalorbital method)": [[16, "sisl.SphericalOrbital.set_radial"]], "spher() (sisl.sphericalorbital method)": [[16, "sisl.SphericalOrbital.spher"]], "tag (sisl.sphericalorbital property)": [[16, "sisl.SphericalOrbital.tag"]], "toatomicorbital() (sisl.sphericalorbital method)": [[16, "sisl.SphericalOrbital.toAtomicOrbital"]], "togrid() (sisl.sphericalorbital method)": [[16, "sisl.SphericalOrbital.toGrid"]], "tosphere() (sisl.sphericalorbital method)": [[16, "sisl.SphericalOrbital.toSphere"]], "supercell (class in sisl)": [[17, "sisl.SuperCell"]], "__init__() (sisl.supercell method)": [[17, "sisl.SuperCell.__init__"]], "add() (sisl.supercell method)": [[17, "sisl.SuperCell.add"]], "add_vacuum() (sisl.supercell method)": [[17, "sisl.SuperCell.add_vacuum"]], "angle() (sisl.supercell method)": [[17, "sisl.SuperCell.angle"]], "append() (sisl.supercell method)": [[17, "sisl.SuperCell.append"]], "area() (sisl.supercell method)": [[17, "sisl.SuperCell.area"]], "cell (sisl.supercell attribute)": [[17, "sisl.SuperCell.cell"]], "cell2length() (sisl.supercell method)": [[17, "sisl.SuperCell.cell2length"]], "center() (sisl.supercell method)": [[17, "sisl.SuperCell.center"]], "copy() (sisl.supercell method)": [[17, "sisl.SuperCell.copy"]], "equal() (sisl.supercell method)": [[17, "sisl.SuperCell.equal"]], "fit() (sisl.supercell method)": [[17, "sisl.SuperCell.fit"]], "icell (sisl.supercell property)": [[17, "sisl.SuperCell.icell"]], "is_cartesian() (sisl.supercell method)": [[17, "sisl.SuperCell.is_cartesian"]], "is_orthogonal() (sisl.supercell method)": [[17, "sisl.SuperCell.is_orthogonal"]], "isc_off (sisl.supercell property)": [[17, "sisl.SuperCell.isc_off"]], "length (sisl.supercell property)": [[17, "sisl.SuperCell.length"]], "move() (sisl.supercell method)": [[17, "sisl.SuperCell.move"]], "n_s (sisl.supercell attribute)": [[17, "sisl.SuperCell.n_s"]], "nsc (sisl.supercell attribute)": [[17, "sisl.SuperCell.nsc"]], "offset() (sisl.supercell method)": [[17, "sisl.SuperCell.offset"]], "origin (sisl.supercell property)": [[17, "sisl.SuperCell.origin"]], "parallel() (sisl.supercell method)": [[17, "sisl.SuperCell.parallel"]], "parameters() (sisl.supercell method)": [[17, "sisl.SuperCell.parameters"]], "plane() (sisl.supercell method)": [[17, "sisl.SuperCell.plane"]], "prepend() (sisl.supercell method)": [[17, "sisl.SuperCell.prepend"]], "rcell (sisl.supercell property)": [[17, "sisl.SuperCell.rcell"]], "read() (sisl.supercell static method)": [[17, "sisl.SuperCell.read"]], "repeat() (sisl.supercell method)": [[17, "sisl.SuperCell.repeat"]], "rotate() (sisl.supercell method)": [[17, "sisl.SuperCell.rotate"]], "sc_index() (sisl.supercell method)": [[17, "sisl.SuperCell.sc_index"]], "sc_off (sisl.supercell property)": [[17, "sisl.SuperCell.sc_off"]], "scale() (sisl.supercell method)": [[17, "sisl.SuperCell.scale"]], "set_nsc() (sisl.supercell method)": [[17, "sisl.SuperCell.set_nsc"]], "swapaxes() (sisl.supercell method)": [[17, "sisl.SuperCell.swapaxes"]], "tile() (sisl.supercell method)": [[17, "sisl.SuperCell.tile"]], "tocuboid() (sisl.supercell method)": [[17, "sisl.SuperCell.toCuboid"]], "tocell() (sisl.supercell class method)": [[17, "sisl.SuperCell.tocell"]], "translate() (sisl.supercell method)": [[17, "sisl.SuperCell.translate"]], "unrepeat() (sisl.supercell method)": [[17, "sisl.SuperCell.unrepeat"]], "untile() (sisl.supercell method)": [[17, "sisl.SuperCell.untile"]], "vertices() (sisl.supercell method)": [[17, "sisl.SuperCell.vertices"]], "volume (sisl.supercell property)": [[17, "sisl.SuperCell.volume"]], "g (in module sisl.constant)": [[18, "sisl.constant.G"]], "g0 (in module sisl.constant)": [[19, "sisl.constant.G0"]], "physicalconstant (class in sisl.constant)": [[20, "sisl.constant.PhysicalConstant"]], "__call__() (sisl.constant.physicalconstant method)": [[20, "sisl.constant.PhysicalConstant.__call__"]], "__init__() (sisl.constant.physicalconstant method)": [[20, "sisl.constant.PhysicalConstant.__init__"]], "as_integer_ratio() (sisl.constant.physicalconstant method)": [[20, "sisl.constant.PhysicalConstant.as_integer_ratio"]], "conjugate() (sisl.constant.physicalconstant method)": [[20, "sisl.constant.PhysicalConstant.conjugate"]], "fromhex() (sisl.constant.physicalconstant method)": [[20, "sisl.constant.PhysicalConstant.fromhex"]], "hex() (sisl.constant.physicalconstant method)": [[20, "sisl.constant.PhysicalConstant.hex"]], "imag (sisl.constant.physicalconstant attribute)": [[20, "sisl.constant.PhysicalConstant.imag"]], "is_integer() (sisl.constant.physicalconstant method)": [[20, "sisl.constant.PhysicalConstant.is_integer"]], "real (sisl.constant.physicalconstant attribute)": [[20, "sisl.constant.PhysicalConstant.real"]], "unit (sisl.constant.physicalconstant property)": [[20, "sisl.constant.PhysicalConstant.unit"]], "c (in module sisl.constant)": [[21, "sisl.constant.c"]], "h (in module sisl.constant)": [[22, "sisl.constant.h"]], "hbar (in module sisl.constant)": [[23, "sisl.constant.hbar"]], "m_e (in module sisl.constant)": [[24, "sisl.constant.m_e"]], "m_p (in module sisl.constant)": [[25, "sisl.constant.m_p"]], "q (in module sisl.constant)": [[26, "sisl.constant.q"]], "agnr() (in module sisl.geom)": [[27, "sisl.geom.agnr"]], "bcc() (in module sisl.geom)": [[28, "sisl.geom.bcc"]], "bcc_slab() (in module sisl.geom)": [[29, "sisl.geom.bcc_slab"]], "bilayer() (in module sisl.geom)": [[30, "sisl.geom.bilayer"]], "diamond() (in module sisl.geom)": [[31, "sisl.geom.diamond"]], "fcc() (in module sisl.geom)": [[32, "sisl.geom.fcc"]], "fcc_slab() (in module sisl.geom)": [[33, "sisl.geom.fcc_slab"]], "graphene() (in module sisl.geom)": [[34, "sisl.geom.graphene"]], "graphene_nanoribbon() (in module sisl.geom)": [[35, "sisl.geom.graphene_nanoribbon"]], "hcp() (in module sisl.geom)": [[36, "sisl.geom.hcp"]], "honeycomb() (in module sisl.geom)": [[37, "sisl.geom.honeycomb"]], "nanoribbon() (in module sisl.geom)": [[38, "sisl.geom.nanoribbon"]], "nanotube() (in module sisl.geom)": [[39, "sisl.geom.nanotube"]], "rocksalt() (in module sisl.geom)": [[40, "sisl.geom.rocksalt"]], "rocksalt_slab() (in module sisl.geom)": [[41, "sisl.geom.rocksalt_slab"]], "sc() (in module sisl.geom)": [[42, "sisl.geom.sc"]], "zgnr() (in module sisl.geom)": [[43, "sisl.geom.zgnr"]], "adaptivediismixer (class in sisl.mixing)": [[44, "sisl.mixing.AdaptiveDIISMixer"]], "__call__() (sisl.mixing.adaptivediismixer method)": [[44, "sisl.mixing.AdaptiveDIISMixer.__call__"]], "__init__() (sisl.mixing.adaptivediismixer method)": [[44, "sisl.mixing.AdaptiveDIISMixer.__init__"]], "adjust_weight() (sisl.mixing.adaptivediismixer method)": [[44, "sisl.mixing.AdaptiveDIISMixer.adjust_weight"]], "coefficients() (sisl.mixing.adaptivediismixer method)": [[44, "sisl.mixing.AdaptiveDIISMixer.coefficients"]], "history (sisl.mixing.adaptivediismixer property)": [[44, "sisl.mixing.AdaptiveDIISMixer.history"]], "mix() (sisl.mixing.adaptivediismixer method)": [[44, "sisl.mixing.AdaptiveDIISMixer.mix"]], "set_history() (sisl.mixing.adaptivediismixer method)": [[44, "sisl.mixing.AdaptiveDIISMixer.set_history"]], "set_weight() (sisl.mixing.adaptivediismixer method)": [[44, "sisl.mixing.AdaptiveDIISMixer.set_weight"]], "solve_lagrange() (sisl.mixing.adaptivediismixer method)": [[44, "sisl.mixing.AdaptiveDIISMixer.solve_lagrange"]], "weight (sisl.mixing.adaptivediismixer property)": [[44, "sisl.mixing.AdaptiveDIISMixer.weight"]], "adaptivepulaymixer (class in sisl.mixing)": [[45, "sisl.mixing.AdaptivePulayMixer"]], "__call__() (sisl.mixing.adaptivepulaymixer method)": [[45, "sisl.mixing.AdaptivePulayMixer.__call__"]], "__init__() (sisl.mixing.adaptivepulaymixer method)": [[45, "sisl.mixing.AdaptivePulayMixer.__init__"]], "adjust_weight() (sisl.mixing.adaptivepulaymixer method)": [[45, "sisl.mixing.AdaptivePulayMixer.adjust_weight"]], "coefficients() (sisl.mixing.adaptivepulaymixer method)": [[45, "sisl.mixing.AdaptivePulayMixer.coefficients"]], "history (sisl.mixing.adaptivepulaymixer property)": [[45, "sisl.mixing.AdaptivePulayMixer.history"]], "mix() (sisl.mixing.adaptivepulaymixer method)": [[45, "sisl.mixing.AdaptivePulayMixer.mix"]], "set_history() (sisl.mixing.adaptivepulaymixer method)": [[45, "sisl.mixing.AdaptivePulayMixer.set_history"]], "set_weight() (sisl.mixing.adaptivepulaymixer method)": [[45, "sisl.mixing.AdaptivePulayMixer.set_weight"]], "solve_lagrange() (sisl.mixing.adaptivepulaymixer method)": [[45, "sisl.mixing.AdaptivePulayMixer.solve_lagrange"]], "weight (sisl.mixing.adaptivepulaymixer property)": [[45, "sisl.mixing.AdaptivePulayMixer.weight"]], "andersonmixer (class in sisl.mixing)": [[46, "sisl.mixing.AndersonMixer"]], "__call__() (sisl.mixing.andersonmixer method)": [[46, "sisl.mixing.AndersonMixer.__call__"]], "__init__() (sisl.mixing.andersonmixer method)": [[46, "sisl.mixing.AndersonMixer.__init__"]], "history (sisl.mixing.andersonmixer property)": [[46, "sisl.mixing.AndersonMixer.history"]], "set_history() (sisl.mixing.andersonmixer method)": [[46, "sisl.mixing.AndersonMixer.set_history"]], "set_weight() (sisl.mixing.andersonmixer method)": [[46, "sisl.mixing.AndersonMixer.set_weight"]], "weight (sisl.mixing.andersonmixer property)": [[46, "sisl.mixing.AndersonMixer.weight"]], "basehistoryweightmixer (class in sisl.mixing)": [[47, "sisl.mixing.BaseHistoryWeightMixer"]], "__call__() (sisl.mixing.basehistoryweightmixer method)": [[47, "sisl.mixing.BaseHistoryWeightMixer.__call__"]], "__init__() (sisl.mixing.basehistoryweightmixer method)": [[47, "sisl.mixing.BaseHistoryWeightMixer.__init__"]], "history (sisl.mixing.basehistoryweightmixer property)": [[47, "sisl.mixing.BaseHistoryWeightMixer.history"]], "set_history() (sisl.mixing.basehistoryweightmixer method)": [[47, "sisl.mixing.BaseHistoryWeightMixer.set_history"]], "set_weight() (sisl.mixing.basehistoryweightmixer method)": [[47, "sisl.mixing.BaseHistoryWeightMixer.set_weight"]], "weight (sisl.mixing.basehistoryweightmixer property)": [[47, "sisl.mixing.BaseHistoryWeightMixer.weight"]], "basemixer (class in sisl.mixing)": [[48, "sisl.mixing.BaseMixer"]], "__call__() (sisl.mixing.basemixer method)": [[48, "sisl.mixing.BaseMixer.__call__"]], "baseweightmixer (class in sisl.mixing)": [[49, "sisl.mixing.BaseWeightMixer"]], "__call__() (sisl.mixing.baseweightmixer method)": [[49, "sisl.mixing.BaseWeightMixer.__call__"]], "__init__() (sisl.mixing.baseweightmixer method)": [[49, "sisl.mixing.BaseWeightMixer.__init__"]], "set_weight() (sisl.mixing.baseweightmixer method)": [[49, "sisl.mixing.BaseWeightMixer.set_weight"]], "weight (sisl.mixing.baseweightmixer property)": [[49, "sisl.mixing.BaseWeightMixer.weight"]], "diismixer (class in sisl.mixing)": [[50, "sisl.mixing.DIISMixer"]], "__call__() (sisl.mixing.diismixer method)": [[50, "sisl.mixing.DIISMixer.__call__"]], "__init__() (sisl.mixing.diismixer method)": [[50, "sisl.mixing.DIISMixer.__init__"]], "coefficients() (sisl.mixing.diismixer method)": [[50, "sisl.mixing.DIISMixer.coefficients"]], "history (sisl.mixing.diismixer property)": [[50, "sisl.mixing.DIISMixer.history"]], "mix() (sisl.mixing.diismixer method)": [[50, "sisl.mixing.DIISMixer.mix"]], "set_history() (sisl.mixing.diismixer method)": [[50, "sisl.mixing.DIISMixer.set_history"]], "set_weight() (sisl.mixing.diismixer method)": [[50, "sisl.mixing.DIISMixer.set_weight"]], "solve_lagrange() (sisl.mixing.diismixer method)": [[50, "sisl.mixing.DIISMixer.solve_lagrange"]], "weight (sisl.mixing.diismixer property)": [[50, "sisl.mixing.DIISMixer.weight"]], "history (class in sisl.mixing)": [[51, "sisl.mixing.History"]], "__init__() (sisl.mixing.history method)": [[51, "sisl.mixing.History.__init__"]], "append() (sisl.mixing.history method)": [[51, "sisl.mixing.History.append"]], "clear() (sisl.mixing.history method)": [[51, "sisl.mixing.History.clear"]], "elements (sisl.mixing.history property)": [[51, "sisl.mixing.History.elements"]], "history_max (sisl.mixing.history attribute)": [[51, "sisl.mixing.History.history_max"]], "max_elements (sisl.mixing.history property)": [[51, "sisl.mixing.History.max_elements"]], "linearmixer (class in sisl.mixing)": [[52, "sisl.mixing.LinearMixer"]], "__call__() (sisl.mixing.linearmixer method)": [[52, "sisl.mixing.LinearMixer.__call__"]], "__init__() (sisl.mixing.linearmixer method)": [[52, "sisl.mixing.LinearMixer.__init__"]], "history (sisl.mixing.linearmixer property)": [[52, "sisl.mixing.LinearMixer.history"]], "set_history() (sisl.mixing.linearmixer method)": [[52, "sisl.mixing.LinearMixer.set_history"]], "set_weight() (sisl.mixing.linearmixer method)": [[52, "sisl.mixing.LinearMixer.set_weight"]], "weight (sisl.mixing.linearmixer property)": [[52, "sisl.mixing.LinearMixer.weight"]], "pulaymixer (class in sisl.mixing)": [[53, "sisl.mixing.PulayMixer"]], "__call__() (sisl.mixing.pulaymixer method)": [[53, "sisl.mixing.PulayMixer.__call__"]], "__init__() (sisl.mixing.pulaymixer method)": [[53, "sisl.mixing.PulayMixer.__init__"]], "coefficients() (sisl.mixing.pulaymixer method)": [[53, "sisl.mixing.PulayMixer.coefficients"]], "history (sisl.mixing.pulaymixer property)": [[53, "sisl.mixing.PulayMixer.history"]], "mix() (sisl.mixing.pulaymixer method)": [[53, "sisl.mixing.PulayMixer.mix"]], "set_history() (sisl.mixing.pulaymixer method)": [[53, "sisl.mixing.PulayMixer.set_history"]], "set_weight() (sisl.mixing.pulaymixer method)": [[53, "sisl.mixing.PulayMixer.set_weight"]], "solve_lagrange() (sisl.mixing.pulaymixer method)": [[53, "sisl.mixing.PulayMixer.solve_lagrange"]], "weight (sisl.mixing.pulaymixer property)": [[53, "sisl.mixing.PulayMixer.weight"]], "stepmixer (class in sisl.mixing)": [[54, "sisl.mixing.StepMixer"]], "__call__() (sisl.mixing.stepmixer method)": [[54, "sisl.mixing.StepMixer.__call__"]], "__init__() (sisl.mixing.stepmixer method)": [[54, "sisl.mixing.StepMixer.__init__"]], "mixer (sisl.mixing.stepmixer property)": [[54, "sisl.mixing.StepMixer.mixer"]], "next() (sisl.mixing.stepmixer method)": [[54, "sisl.mixing.StepMixer.next"]], "yield_chain() (sisl.mixing.stepmixer class method)": [[54, "sisl.mixing.StepMixer.yield_chain"]], "yield_repeat() (sisl.mixing.stepmixer class method)": [[54, "sisl.mixing.StepMixer.yield_repeat"]], "__init__() (sisl.oplist.oplist method)": [[55, "sisl.oplist.oplist.__init__"]], "append() (sisl.oplist.oplist method)": [[55, "sisl.oplist.oplist.append"]], "clear() (sisl.oplist.oplist method)": [[55, "sisl.oplist.oplist.clear"]], "copy() (sisl.oplist.oplist method)": [[55, "sisl.oplist.oplist.copy"]], "count() (sisl.oplist.oplist method)": [[55, "sisl.oplist.oplist.count"]], "decorate() (sisl.oplist.oplist class method)": [[55, "sisl.oplist.oplist.decorate"]], "extend() (sisl.oplist.oplist method)": [[55, "sisl.oplist.oplist.extend"]], "index() (sisl.oplist.oplist method)": [[55, "sisl.oplist.oplist.index"]], "insert() (sisl.oplist.oplist method)": [[55, "sisl.oplist.oplist.insert"]], "oplist (class in sisl.oplist)": [[55, "sisl.oplist.oplist"]], "pop() (sisl.oplist.oplist method)": [[55, "sisl.oplist.oplist.pop"]], "remove() (sisl.oplist.oplist method)": [[55, "sisl.oplist.oplist.remove"]], "reverse() (sisl.oplist.oplist method)": [[55, "sisl.oplist.oplist.reverse"]], "sort() (sisl.oplist.oplist method)": [[55, "sisl.oplist.oplist.sort"]], "bandstructure (class in sisl.physics)": [[56, "sisl.physics.BandStructure"]], "__init__() (sisl.physics.bandstructure method)": [[56, "sisl.physics.BandStructure.__init__"]], "apply (sisl.physics.bandstructure attribute)": [[56, "sisl.physics.BandStructure.apply"]], "cell (sisl.physics.bandstructure property)": [[56, "sisl.physics.BandStructure.cell"]], "copy() (sisl.physics.bandstructure method)": [[56, "sisl.physics.BandStructure.copy"]], "in_primitive() (sisl.physics.bandstructure static method)": [[56, "sisl.physics.BandStructure.in_primitive"]], "insert_jump() (sisl.physics.bandstructure method)": [[56, "sisl.physics.BandStructure.insert_jump"]], "iter() (sisl.physics.bandstructure method)": [[56, "sisl.physics.BandStructure.iter"]], "k (sisl.physics.bandstructure property)": [[56, "sisl.physics.BandStructure.k"]], "lineark() (sisl.physics.bandstructure method)": [[56, "sisl.physics.BandStructure.lineark"]], "lineartick() (sisl.physics.bandstructure method)": [[56, "sisl.physics.BandStructure.lineartick"]], "merge() (sisl.physics.bandstructure static method)": [[56, "sisl.physics.BandStructure.merge"]], "param_circle() (sisl.physics.bandstructure static method)": [[56, "sisl.physics.BandStructure.param_circle"]], "parametrize() (sisl.physics.bandstructure static method)": [[56, "sisl.physics.BandStructure.parametrize"]], "plot (sisl.physics.bandstructure attribute)": [[56, "sisl.physics.BandStructure.plot"]], "rcell (sisl.physics.bandstructure property)": [[56, "sisl.physics.BandStructure.rcell"]], "set_parent() (sisl.physics.bandstructure method)": [[56, "sisl.physics.BandStructure.set_parent"]], "tocartesian() (sisl.physics.bandstructure method)": [[56, "sisl.physics.BandStructure.tocartesian"]], "tolinear() (sisl.physics.bandstructure method)": [[56, "sisl.physics.BandStructure.tolinear"]], "toreduced() (sisl.physics.bandstructure method)": [[56, "sisl.physics.BandStructure.toreduced"]], "volume() (sisl.physics.bandstructure method)": [[56, "sisl.physics.BandStructure.volume"]], "weight (sisl.physics.bandstructure property)": [[56, "sisl.physics.BandStructure.weight"]], "write() (sisl.physics.bandstructure method)": [[56, "sisl.physics.BandStructure.write"]], "bloch (class in sisl.physics)": [[57, "sisl.physics.Bloch"]], "__call__() (sisl.physics.bloch method)": [[57, "sisl.physics.Bloch.__call__"]], "__init__() (sisl.physics.bloch method)": [[57, "sisl.physics.Bloch.__init__"]], "bloch (sisl.physics.bloch property)": [[57, "sisl.physics.Bloch.bloch"]], "unfold() (sisl.physics.bloch method)": [[57, "sisl.physics.Bloch.unfold"]], "unfold_points() (sisl.physics.bloch method)": [[57, "sisl.physics.Bloch.unfold_points"]], "brillouinzone (class in sisl.physics)": [[58, "sisl.physics.BrillouinZone"]], "__init__() (sisl.physics.brillouinzone method)": [[58, "sisl.physics.BrillouinZone.__init__"]], "apply (sisl.physics.brillouinzone attribute)": [[58, "sisl.physics.BrillouinZone.apply"]], "cell (sisl.physics.brillouinzone property)": [[58, "sisl.physics.BrillouinZone.cell"]], "copy() (sisl.physics.brillouinzone method)": [[58, "sisl.physics.BrillouinZone.copy"]], "in_primitive() (sisl.physics.brillouinzone static method)": [[58, "sisl.physics.BrillouinZone.in_primitive"]], "iter() (sisl.physics.brillouinzone method)": [[58, "sisl.physics.BrillouinZone.iter"]], "k (sisl.physics.brillouinzone property)": [[58, "sisl.physics.BrillouinZone.k"]], "merge() (sisl.physics.brillouinzone static method)": [[58, "sisl.physics.BrillouinZone.merge"]], "param_circle() (sisl.physics.brillouinzone static method)": [[58, "sisl.physics.BrillouinZone.param_circle"]], "parametrize() (sisl.physics.brillouinzone static method)": [[58, "sisl.physics.BrillouinZone.parametrize"]], "rcell (sisl.physics.brillouinzone property)": [[58, "sisl.physics.BrillouinZone.rcell"]], "set_parent() (sisl.physics.brillouinzone method)": [[58, "sisl.physics.BrillouinZone.set_parent"]], "tocartesian() (sisl.physics.brillouinzone method)": [[58, "sisl.physics.BrillouinZone.tocartesian"]], "toreduced() (sisl.physics.brillouinzone method)": [[58, "sisl.physics.BrillouinZone.toreduced"]], "volume() (sisl.physics.brillouinzone method)": [[58, "sisl.physics.BrillouinZone.volume"]], "weight (sisl.physics.brillouinzone property)": [[58, "sisl.physics.BrillouinZone.weight"]], "write() (sisl.physics.brillouinzone method)": [[58, "sisl.physics.BrillouinZone.write"]], "coefficient (class in sisl.physics)": [[59, "sisl.physics.Coefficient"]], "__init__() (sisl.physics.coefficient method)": [[59, "sisl.physics.Coefficient.__init__"]], "c (sisl.physics.coefficient attribute)": [[59, "sisl.physics.Coefficient.c"]], "copy() (sisl.physics.coefficient method)": [[59, "sisl.physics.Coefficient.copy"]], "degenerate() (sisl.physics.coefficient method)": [[59, "sisl.physics.Coefficient.degenerate"]], "dkind (sisl.physics.coefficient property)": [[59, "sisl.physics.Coefficient.dkind"]], "dtype (sisl.physics.coefficient property)": [[59, "sisl.physics.Coefficient.dtype"]], "info (sisl.physics.coefficient attribute)": [[59, "sisl.physics.Coefficient.info"]], "iter() (sisl.physics.coefficient method)": [[59, "sisl.physics.Coefficient.iter"]], "parent (sisl.physics.coefficient attribute)": [[59, "sisl.physics.Coefficient.parent"]], "remove() (sisl.physics.coefficient method)": [[59, "sisl.physics.Coefficient.remove"]], "shape (sisl.physics.coefficient property)": [[59, "sisl.physics.Coefficient.shape"]], "sub() (sisl.physics.coefficient method)": [[59, "sisl.physics.Coefficient.sub"]], "d (sisl.physics.densitymatrix property)": [[60, "sisl.physics.DensityMatrix.D"]], "densitymatrix (class in sisl.physics)": [[60, "sisl.physics.DensityMatrix"]], "dk() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.Dk"]], "rij() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.Rij"], [60, "sisl.physics.DensityMatrix.rij"]], "s (sisl.physics.densitymatrix property)": [[60, "sisl.physics.DensityMatrix.S"]], "sk() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.Sk"]], "__init__() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.__init__"]], "add() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.add"]], "append() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.append"]], "construct() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.construct"]], "copy() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.copy"]], "create_construct() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.create_construct"]], "ddk() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.dDk"]], "dsk() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.dSk"]], "dddk() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.ddDk"]], "ddsk() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.ddSk"]], "density() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.density"]], "dim (sisl.physics.densitymatrix property)": [[60, "sisl.physics.DensityMatrix.dim"]], "dkind (sisl.physics.densitymatrix property)": [[60, "sisl.physics.DensityMatrix.dkind"]], "dtype (sisl.physics.densitymatrix property)": [[60, "sisl.physics.DensityMatrix.dtype"]], "edges() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.edges"]], "eig() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.eig"]], "eigh() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.eigh"]], "eigsh() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.eigsh"]], "eliminate_zeros() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.eliminate_zeros"]], "empty() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.empty"]], "finalize() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.finalize"]], "finalized (sisl.physics.densitymatrix property)": [[60, "sisl.physics.DensityMatrix.finalized"]], "fromsp() (sisl.physics.densitymatrix class method)": [[60, "sisl.physics.DensityMatrix.fromsp"]], "geometry (sisl.physics.densitymatrix property)": [[60, "sisl.physics.DensityMatrix.geometry"]], "iter_nnz() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.iter_nnz"]], "iter_orbitals() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.iter_orbitals"]], "mulliken() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.mulliken"]], "nnz (sisl.physics.densitymatrix property)": [[60, "sisl.physics.DensityMatrix.nnz"]], "non_orthogonal (sisl.physics.densitymatrix property)": [[60, "sisl.physics.DensityMatrix.non_orthogonal"]], "nonzero() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.nonzero"]], "orbital_momentum() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.orbital_momentum"]], "orthogonal (sisl.physics.densitymatrix property)": [[60, "sisl.physics.DensityMatrix.orthogonal"]], "prepend() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.prepend"]], "read() (sisl.physics.densitymatrix static method)": [[60, "sisl.physics.DensityMatrix.read"]], "remove() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.remove"]], "remove_orbital() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.remove_orbital"]], "repeat() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.repeat"]], "replace() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.replace"]], "reset() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.reset"]], "set_nsc() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.set_nsc"]], "shape (sisl.physics.densitymatrix property)": [[60, "sisl.physics.DensityMatrix.shape"]], "spalign() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.spalign"]], "spin (sisl.physics.densitymatrix property)": [[60, "sisl.physics.DensityMatrix.spin"]], "spin_align() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.spin_align"]], "spin_rotate() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.spin_rotate"]], "spsame() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.spsame"]], "sub() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.sub"]], "sub_orbital() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.sub_orbital"]], "swap() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.swap"]], "tile() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.tile"]], "tosparseatom() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.toSparseAtom"]], "tocsr() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.tocsr"]], "transform() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.transform"]], "transpose() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.transpose"]], "trs() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.trs"]], "unrepeat() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.unrepeat"]], "untile() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.untile"]], "write() (sisl.physics.densitymatrix method)": [[60, "sisl.physics.DensityMatrix.write"]], "d (sisl.physics.dynamicalmatrix property)": [[61, "sisl.physics.DynamicalMatrix.D"]], "dk() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.Dk"]], "dynamicalmatrix (class in sisl.physics)": [[61, "sisl.physics.DynamicalMatrix"]], "rij() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.Rij"], [61, "sisl.physics.DynamicalMatrix.rij"]], "s (sisl.physics.dynamicalmatrix property)": [[61, "sisl.physics.DynamicalMatrix.S"]], "sk() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.Sk"]], "__init__() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.__init__"]], "add() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.add"]], "append() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.append"]], "apply_newton() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.apply_newton"]], "construct() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.construct"]], "copy() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.copy"]], "create_construct() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.create_construct"]], "ddk() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.dDk"]], "dsk() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.dSk"]], "dddk() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.ddDk"]], "ddsk() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.ddSk"]], "dim (sisl.physics.dynamicalmatrix property)": [[61, "sisl.physics.DynamicalMatrix.dim"]], "dkind (sisl.physics.dynamicalmatrix property)": [[61, "sisl.physics.DynamicalMatrix.dkind"]], "dtype (sisl.physics.dynamicalmatrix property)": [[61, "sisl.physics.DynamicalMatrix.dtype"]], "edges() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.edges"]], "eig() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.eig"]], "eigenmode() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.eigenmode"]], "eigenvalue() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.eigenvalue"]], "eigh() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.eigh"]], "eigsh() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.eigsh"]], "eliminate_zeros() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.eliminate_zeros"]], "empty() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.empty"]], "finalize() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.finalize"]], "finalized (sisl.physics.dynamicalmatrix property)": [[61, "sisl.physics.DynamicalMatrix.finalized"]], "fromsp() (sisl.physics.dynamicalmatrix class method)": [[61, "sisl.physics.DynamicalMatrix.fromsp"]], "geometry (sisl.physics.dynamicalmatrix property)": [[61, "sisl.physics.DynamicalMatrix.geometry"]], "iter_nnz() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.iter_nnz"]], "iter_orbitals() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.iter_orbitals"]], "nnz (sisl.physics.dynamicalmatrix property)": [[61, "sisl.physics.DynamicalMatrix.nnz"]], "non_orthogonal (sisl.physics.dynamicalmatrix property)": [[61, "sisl.physics.DynamicalMatrix.non_orthogonal"]], "nonzero() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.nonzero"]], "orthogonal (sisl.physics.dynamicalmatrix property)": [[61, "sisl.physics.DynamicalMatrix.orthogonal"]], "prepend() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.prepend"]], "read() (sisl.physics.dynamicalmatrix static method)": [[61, "sisl.physics.DynamicalMatrix.read"]], "remove() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.remove"]], "remove_orbital() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.remove_orbital"]], "repeat() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.repeat"]], "replace() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.replace"]], "reset() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.reset"]], "set_nsc() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.set_nsc"]], "shape (sisl.physics.dynamicalmatrix property)": [[61, "sisl.physics.DynamicalMatrix.shape"]], "spalign() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.spalign"]], "spsame() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.spsame"]], "sub() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.sub"]], "sub_orbital() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.sub_orbital"]], "swap() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.swap"]], "tile() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.tile"]], "tosparseatom() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.toSparseAtom"]], "tocsr() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.tocsr"]], "transpose() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.transpose"]], "unrepeat() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.unrepeat"]], "untile() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.untile"]], "write() (sisl.physics.dynamicalmatrix method)": [[61, "sisl.physics.DynamicalMatrix.write"]], "e (sisl.physics.energydensitymatrix property)": [[62, "sisl.physics.EnergyDensityMatrix.E"]], "ek() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.Ek"]], "energydensitymatrix (class in sisl.physics)": [[62, "sisl.physics.EnergyDensityMatrix"]], "rij() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.Rij"], [62, "sisl.physics.EnergyDensityMatrix.rij"]], "s (sisl.physics.energydensitymatrix property)": [[62, "sisl.physics.EnergyDensityMatrix.S"]], "sk() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.Sk"]], "__init__() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.__init__"]], "add() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.add"]], "append() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.append"]], "construct() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.construct"]], "copy() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.copy"]], "create_construct() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.create_construct"]], "dek() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.dEk"]], "dsk() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.dSk"]], "ddek() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.ddEk"]], "ddsk() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.ddSk"]], "density() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.density"]], "dim (sisl.physics.energydensitymatrix property)": [[62, "sisl.physics.EnergyDensityMatrix.dim"]], "dkind (sisl.physics.energydensitymatrix property)": [[62, "sisl.physics.EnergyDensityMatrix.dkind"]], "dtype (sisl.physics.energydensitymatrix property)": [[62, "sisl.physics.EnergyDensityMatrix.dtype"]], "edges() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.edges"]], "eig() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.eig"]], "eigh() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.eigh"]], "eigsh() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.eigsh"]], "eliminate_zeros() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.eliminate_zeros"]], "empty() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.empty"]], "finalize() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.finalize"]], "finalized (sisl.physics.energydensitymatrix property)": [[62, "sisl.physics.EnergyDensityMatrix.finalized"]], "fromsp() (sisl.physics.energydensitymatrix class method)": [[62, "sisl.physics.EnergyDensityMatrix.fromsp"]], "geometry (sisl.physics.energydensitymatrix property)": [[62, "sisl.physics.EnergyDensityMatrix.geometry"]], "iter_nnz() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.iter_nnz"]], "iter_orbitals() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.iter_orbitals"]], "mulliken() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.mulliken"]], "nnz (sisl.physics.energydensitymatrix property)": [[62, "sisl.physics.EnergyDensityMatrix.nnz"]], "non_orthogonal (sisl.physics.energydensitymatrix property)": [[62, "sisl.physics.EnergyDensityMatrix.non_orthogonal"]], "nonzero() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.nonzero"]], "orthogonal (sisl.physics.energydensitymatrix property)": [[62, "sisl.physics.EnergyDensityMatrix.orthogonal"]], "prepend() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.prepend"]], "read() (sisl.physics.energydensitymatrix static method)": [[62, "sisl.physics.EnergyDensityMatrix.read"]], "remove() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.remove"]], "remove_orbital() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.remove_orbital"]], "repeat() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.repeat"]], "replace() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.replace"]], "reset() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.reset"]], "set_nsc() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.set_nsc"]], "shape (sisl.physics.energydensitymatrix property)": [[62, "sisl.physics.EnergyDensityMatrix.shape"]], "shift() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.shift"]], "spalign() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.spalign"]], "spin (sisl.physics.energydensitymatrix property)": [[62, "sisl.physics.EnergyDensityMatrix.spin"]], "spin_align() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.spin_align"]], "spin_rotate() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.spin_rotate"]], "spsame() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.spsame"]], "sub() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.sub"]], "sub_orbital() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.sub_orbital"]], "swap() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.swap"]], "tile() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.tile"]], "tosparseatom() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.toSparseAtom"]], "tocsr() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.tocsr"]], "transform() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.transform"]], "transpose() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.transpose"]], "trs() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.trs"]], "unrepeat() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.unrepeat"]], "untile() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.untile"]], "write() (sisl.physics.energydensitymatrix method)": [[62, "sisl.physics.EnergyDensityMatrix.write"]], "h (sisl.physics.hamiltonian property)": [[63, "sisl.physics.Hamiltonian.H"]], "hamiltonian (class in sisl.physics)": [[63, "sisl.physics.Hamiltonian"]], "hk() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.Hk"]], "rij() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.Rij"], [63, "sisl.physics.Hamiltonian.rij"]], "s (sisl.physics.hamiltonian property)": [[63, "sisl.physics.Hamiltonian.S"]], "sk() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.Sk"]], "__init__() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.__init__"]], "add() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.add"]], "append() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.append"]], "construct() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.construct"]], "copy() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.copy"]], "create_construct() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.create_construct"]], "dhk() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.dHk"]], "dsk() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.dSk"]], "ddhk() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.ddHk"]], "ddsk() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.ddSk"]], "dim (sisl.physics.hamiltonian property)": [[63, "sisl.physics.Hamiltonian.dim"]], "dkind (sisl.physics.hamiltonian property)": [[63, "sisl.physics.Hamiltonian.dkind"]], "dtype (sisl.physics.hamiltonian property)": [[63, "sisl.physics.Hamiltonian.dtype"]], "edges() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.edges"]], "eig() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.eig"]], "eigenstate() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.eigenstate"]], "eigenvalue() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.eigenvalue"]], "eigh() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.eigh"]], "eigsh() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.eigsh"]], "eliminate_zeros() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.eliminate_zeros"]], "empty() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.empty"]], "fermi_level() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.fermi_level"]], "finalize() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.finalize"]], "finalized (sisl.physics.hamiltonian property)": [[63, "sisl.physics.Hamiltonian.finalized"]], "fromsp() (sisl.physics.hamiltonian class method)": [[63, "sisl.physics.Hamiltonian.fromsp"]], "geometry (sisl.physics.hamiltonian property)": [[63, "sisl.physics.Hamiltonian.geometry"]], "iter_nnz() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.iter_nnz"]], "iter_orbitals() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.iter_orbitals"]], "nnz (sisl.physics.hamiltonian property)": [[63, "sisl.physics.Hamiltonian.nnz"]], "non_orthogonal (sisl.physics.hamiltonian property)": [[63, "sisl.physics.Hamiltonian.non_orthogonal"]], "nonzero() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.nonzero"]], "orthogonal (sisl.physics.hamiltonian property)": [[63, "sisl.physics.Hamiltonian.orthogonal"]], "plot (sisl.physics.hamiltonian attribute)": [[63, "sisl.physics.Hamiltonian.plot"]], "prepend() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.prepend"]], "read() (sisl.physics.hamiltonian static method)": [[63, "sisl.physics.Hamiltonian.read"]], "remove() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.remove"]], "remove_orbital() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.remove_orbital"]], "repeat() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.repeat"]], "replace() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.replace"]], "reset() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.reset"]], "set_nsc() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.set_nsc"]], "shape (sisl.physics.hamiltonian property)": [[63, "sisl.physics.Hamiltonian.shape"]], "shift() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.shift"]], "spalign() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.spalign"]], "spin (sisl.physics.hamiltonian property)": [[63, "sisl.physics.Hamiltonian.spin"]], "spsame() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.spsame"]], "sub() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.sub"]], "sub_orbital() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.sub_orbital"]], "swap() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.swap"]], "tile() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.tile"]], "tosparseatom() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.toSparseAtom"]], "tocsr() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.tocsr"]], "transform() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.transform"]], "transpose() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.transpose"]], "trs() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.trs"]], "unrepeat() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.unrepeat"]], "untile() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.untile"]], "write() (sisl.physics.hamiltonian method)": [[63, "sisl.physics.Hamiltonian.write"]], "monkhorstpack (class in sisl.physics)": [[64, "sisl.physics.MonkhorstPack"]], "__init__() (sisl.physics.monkhorstpack method)": [[64, "sisl.physics.MonkhorstPack.__init__"]], "apply (sisl.physics.monkhorstpack attribute)": [[64, "sisl.physics.MonkhorstPack.apply"]], "cell (sisl.physics.monkhorstpack property)": [[64, "sisl.physics.MonkhorstPack.cell"]], "copy() (sisl.physics.monkhorstpack method)": [[64, "sisl.physics.MonkhorstPack.copy"]], "grid() (sisl.physics.monkhorstpack class method)": [[64, "sisl.physics.MonkhorstPack.grid"]], "in_primitive() (sisl.physics.monkhorstpack static method)": [[64, "sisl.physics.MonkhorstPack.in_primitive"]], "iter() (sisl.physics.monkhorstpack method)": [[64, "sisl.physics.MonkhorstPack.iter"]], "k (sisl.physics.monkhorstpack property)": [[64, "sisl.physics.MonkhorstPack.k"]], "merge() (sisl.physics.monkhorstpack static method)": [[64, "sisl.physics.MonkhorstPack.merge"]], "param_circle() (sisl.physics.monkhorstpack static method)": [[64, "sisl.physics.MonkhorstPack.param_circle"]], "parametrize() (sisl.physics.monkhorstpack static method)": [[64, "sisl.physics.MonkhorstPack.parametrize"]], "rcell (sisl.physics.monkhorstpack property)": [[64, "sisl.physics.MonkhorstPack.rcell"]], "replace() (sisl.physics.monkhorstpack method)": [[64, "sisl.physics.MonkhorstPack.replace"]], "set_parent() (sisl.physics.monkhorstpack method)": [[64, "sisl.physics.MonkhorstPack.set_parent"]], "tocartesian() (sisl.physics.monkhorstpack method)": [[64, "sisl.physics.MonkhorstPack.tocartesian"]], "toreduced() (sisl.physics.monkhorstpack method)": [[64, "sisl.physics.MonkhorstPack.toreduced"]], "volume() (sisl.physics.monkhorstpack method)": [[64, "sisl.physics.MonkhorstPack.volume"]], "weight (sisl.physics.monkhorstpack property)": [[64, "sisl.physics.MonkhorstPack.weight"]], "write() (sisl.physics.monkhorstpack method)": [[64, "sisl.physics.MonkhorstPack.write"]], "overlap (class in sisl.physics)": [[65, "sisl.physics.Overlap"]], "rij() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.Rij"], [65, "sisl.physics.Overlap.rij"]], "s (sisl.physics.overlap property)": [[65, "sisl.physics.Overlap.S"]], "sk() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.Sk"]], "__init__() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.__init__"]], "add() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.add"]], "append() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.append"]], "construct() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.construct"]], "copy() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.copy"]], "create_construct() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.create_construct"]], "dsk() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.dSk"]], "ddsk() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.ddSk"]], "dim (sisl.physics.overlap property)": [[65, "sisl.physics.Overlap.dim"]], "dkind (sisl.physics.overlap property)": [[65, "sisl.physics.Overlap.dkind"]], "dtype (sisl.physics.overlap property)": [[65, "sisl.physics.Overlap.dtype"]], "edges() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.edges"]], "eig() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.eig"]], "eigh() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.eigh"]], "eigsh() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.eigsh"]], "eliminate_zeros() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.eliminate_zeros"]], "empty() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.empty"]], "finalize() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.finalize"]], "finalized (sisl.physics.overlap property)": [[65, "sisl.physics.Overlap.finalized"]], "fromsp() (sisl.physics.overlap class method)": [[65, "sisl.physics.Overlap.fromsp"]], "geometry (sisl.physics.overlap property)": [[65, "sisl.physics.Overlap.geometry"]], "iter_nnz() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.iter_nnz"]], "iter_orbitals() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.iter_orbitals"]], "nnz (sisl.physics.overlap property)": [[65, "sisl.physics.Overlap.nnz"]], "non_orthogonal (sisl.physics.overlap property)": [[65, "sisl.physics.Overlap.non_orthogonal"]], "nonzero() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.nonzero"]], "orthogonal (sisl.physics.overlap property)": [[65, "sisl.physics.Overlap.orthogonal"]], "prepend() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.prepend"]], "read() (sisl.physics.overlap static method)": [[65, "sisl.physics.Overlap.read"]], "remove() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.remove"]], "remove_orbital() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.remove_orbital"]], "repeat() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.repeat"]], "replace() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.replace"]], "reset() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.reset"]], "set_nsc() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.set_nsc"]], "shape (sisl.physics.overlap property)": [[65, "sisl.physics.Overlap.shape"]], "spalign() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.spalign"]], "spsame() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.spsame"]], "sub() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.sub"]], "sub_orbital() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.sub_orbital"]], "swap() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.swap"]], "tile() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.tile"]], "tosparseatom() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.toSparseAtom"]], "tocsr() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.tocsr"]], "transpose() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.transpose"]], "unrepeat() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.unrepeat"]], "untile() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.untile"]], "write() (sisl.physics.overlap method)": [[65, "sisl.physics.Overlap.write"]], "realspacese (class in sisl.physics)": [[66, "sisl.physics.RealSpaceSE"]], "__init__() (sisl.physics.realspacese method)": [[66, "sisl.physics.RealSpaceSE.__init__"]], "broadening_matrix() (sisl.physics.realspacese method)": [[66, "sisl.physics.RealSpaceSE.broadening_matrix"]], "clear() (sisl.physics.realspacese method)": [[66, "sisl.physics.RealSpaceSE.clear"]], "green() (sisl.physics.realspacese method)": [[66, "sisl.physics.RealSpaceSE.green"]], "initialize() (sisl.physics.realspacese method)": [[66, "sisl.physics.RealSpaceSE.initialize"]], "real_space_coupling() (sisl.physics.realspacese method)": [[66, "sisl.physics.RealSpaceSE.real_space_coupling"]], "real_space_parent() (sisl.physics.realspacese method)": [[66, "sisl.physics.RealSpaceSE.real_space_parent"]], "se2broadening() (sisl.physics.realspacese static method)": [[66, "sisl.physics.RealSpaceSE.se2broadening"]], "self_energy() (sisl.physics.realspacese method)": [[66, "sisl.physics.RealSpaceSE.self_energy"]], "set_options() (sisl.physics.realspacese method)": [[66, "sisl.physics.RealSpaceSE.set_options"]], "realspacesi (class in sisl.physics)": [[67, "sisl.physics.RealSpaceSI"]], "__init__() (sisl.physics.realspacesi method)": [[67, "sisl.physics.RealSpaceSI.__init__"]], "broadening_matrix() (sisl.physics.realspacesi method)": [[67, "sisl.physics.RealSpaceSI.broadening_matrix"]], "clear() (sisl.physics.realspacesi method)": [[67, "sisl.physics.RealSpaceSI.clear"]], "green() (sisl.physics.realspacesi method)": [[67, "sisl.physics.RealSpaceSI.green"]], "initialize() (sisl.physics.realspacesi method)": [[67, "sisl.physics.RealSpaceSI.initialize"]], "real_space_coupling() (sisl.physics.realspacesi method)": [[67, "sisl.physics.RealSpaceSI.real_space_coupling"]], "real_space_parent() (sisl.physics.realspacesi method)": [[67, "sisl.physics.RealSpaceSI.real_space_parent"]], "se2broadening() (sisl.physics.realspacesi static method)": [[67, "sisl.physics.RealSpaceSI.se2broadening"]], "self_energy() (sisl.physics.realspacesi method)": [[67, "sisl.physics.RealSpaceSI.self_energy"]], "set_options() (sisl.physics.realspacesi method)": [[67, "sisl.physics.RealSpaceSI.set_options"]], "recursivesi (class in sisl.physics)": [[68, "sisl.physics.RecursiveSI"]], "__init__() (sisl.physics.recursivesi method)": [[68, "sisl.physics.RecursiveSI.__init__"]], "broadening_matrix() (sisl.physics.recursivesi method)": [[68, "sisl.physics.RecursiveSI.broadening_matrix"]], "green() (sisl.physics.recursivesi method)": [[68, "sisl.physics.RecursiveSI.green"]], "se2broadening() (sisl.physics.recursivesi static method)": [[68, "sisl.physics.RecursiveSI.se2broadening"]], "self_energy() (sisl.physics.recursivesi method)": [[68, "sisl.physics.RecursiveSI.self_energy"]], "self_energy_lr() (sisl.physics.recursivesi method)": [[68, "sisl.physics.RecursiveSI.self_energy_lr"]], "selfenergy (class in sisl.physics)": [[69, "sisl.physics.SelfEnergy"]], "__init__() (sisl.physics.selfenergy method)": [[69, "sisl.physics.SelfEnergy.__init__"]], "broadening_matrix() (sisl.physics.selfenergy method)": [[69, "sisl.physics.SelfEnergy.broadening_matrix"]], "se2broadening() (sisl.physics.selfenergy static method)": [[69, "sisl.physics.SelfEnergy.se2broadening"]], "self_energy() (sisl.physics.selfenergy method)": [[69, "sisl.physics.SelfEnergy.self_energy"]], "semiinfinite (class in sisl.physics)": [[70, "sisl.physics.SemiInfinite"]], "__init__() (sisl.physics.semiinfinite method)": [[70, "sisl.physics.SemiInfinite.__init__"]], "broadening_matrix() (sisl.physics.semiinfinite method)": [[70, "sisl.physics.SemiInfinite.broadening_matrix"]], "se2broadening() (sisl.physics.semiinfinite static method)": [[70, "sisl.physics.SemiInfinite.se2broadening"]], "self_energy() (sisl.physics.semiinfinite method)": [[70, "sisl.physics.SemiInfinite.self_energy"]], "rij() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.Rij"], [71, "sisl.physics.SparseOrbitalBZ.rij"]], "s (sisl.physics.sparseorbitalbz property)": [[71, "sisl.physics.SparseOrbitalBZ.S"]], "sk() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.Sk"]], "sparseorbitalbz (class in sisl.physics)": [[71, "sisl.physics.SparseOrbitalBZ"]], "__init__() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.__init__"]], "add() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.add"]], "append() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.append"]], "construct() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.construct"]], "copy() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.copy"]], "create_construct() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.create_construct"]], "dsk() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.dSk"]], "ddsk() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.ddSk"]], "dim (sisl.physics.sparseorbitalbz property)": [[71, "sisl.physics.SparseOrbitalBZ.dim"]], "dkind (sisl.physics.sparseorbitalbz property)": [[71, "sisl.physics.SparseOrbitalBZ.dkind"]], "dtype (sisl.physics.sparseorbitalbz property)": [[71, "sisl.physics.SparseOrbitalBZ.dtype"]], "edges() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.edges"]], "eig() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.eig"]], "eigh() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.eigh"]], "eigsh() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.eigsh"]], "eliminate_zeros() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.eliminate_zeros"]], "empty() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.empty"]], "finalize() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.finalize"]], "finalized (sisl.physics.sparseorbitalbz property)": [[71, "sisl.physics.SparseOrbitalBZ.finalized"]], "fromsp() (sisl.physics.sparseorbitalbz class method)": [[71, "sisl.physics.SparseOrbitalBZ.fromsp"]], "geometry (sisl.physics.sparseorbitalbz property)": [[71, "sisl.physics.SparseOrbitalBZ.geometry"]], "iter_nnz() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.iter_nnz"]], "iter_orbitals() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.iter_orbitals"]], "nnz (sisl.physics.sparseorbitalbz property)": [[71, "sisl.physics.SparseOrbitalBZ.nnz"]], "non_orthogonal (sisl.physics.sparseorbitalbz property)": [[71, "sisl.physics.SparseOrbitalBZ.non_orthogonal"]], "nonzero() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.nonzero"]], "orthogonal (sisl.physics.sparseorbitalbz property)": [[71, "sisl.physics.SparseOrbitalBZ.orthogonal"]], "prepend() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.prepend"]], "remove() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.remove"]], "remove_orbital() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.remove_orbital"]], "repeat() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.repeat"]], "replace() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.replace"]], "reset() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.reset"]], "set_nsc() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.set_nsc"]], "shape (sisl.physics.sparseorbitalbz property)": [[71, "sisl.physics.SparseOrbitalBZ.shape"]], "spalign() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.spalign"]], "spsame() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.spsame"]], "sub() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.sub"]], "sub_orbital() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.sub_orbital"]], "swap() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.swap"]], "tile() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.tile"]], "tosparseatom() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.toSparseAtom"]], "tocsr() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.tocsr"]], "transpose() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.transpose"]], "unrepeat() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.unrepeat"]], "untile() (sisl.physics.sparseorbitalbz method)": [[71, "sisl.physics.SparseOrbitalBZ.untile"]], "rij() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.Rij"], [72, "sisl.physics.SparseOrbitalBZSpin.rij"]], "s (sisl.physics.sparseorbitalbzspin property)": [[72, "sisl.physics.SparseOrbitalBZSpin.S"]], "sk() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.Sk"]], "sparseorbitalbzspin (class in sisl.physics)": [[72, "sisl.physics.SparseOrbitalBZSpin"]], "__init__() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.__init__"]], "add() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.add"]], "append() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.append"]], "construct() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.construct"]], "copy() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.copy"]], "create_construct() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.create_construct"]], "dsk() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.dSk"]], "ddsk() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.ddSk"]], "dim (sisl.physics.sparseorbitalbzspin property)": [[72, "sisl.physics.SparseOrbitalBZSpin.dim"]], "dkind (sisl.physics.sparseorbitalbzspin property)": [[72, "sisl.physics.SparseOrbitalBZSpin.dkind"]], "dtype (sisl.physics.sparseorbitalbzspin property)": [[72, "sisl.physics.SparseOrbitalBZSpin.dtype"]], "edges() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.edges"]], "eig() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.eig"]], "eigh() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.eigh"]], "eigsh() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.eigsh"]], "eliminate_zeros() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.eliminate_zeros"]], "empty() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.empty"]], "finalize() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.finalize"]], "finalized (sisl.physics.sparseorbitalbzspin property)": [[72, "sisl.physics.SparseOrbitalBZSpin.finalized"]], "fromsp() (sisl.physics.sparseorbitalbzspin class method)": [[72, "sisl.physics.SparseOrbitalBZSpin.fromsp"]], "geometry (sisl.physics.sparseorbitalbzspin property)": [[72, "sisl.physics.SparseOrbitalBZSpin.geometry"]], "iter_nnz() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.iter_nnz"]], "iter_orbitals() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.iter_orbitals"]], "nnz (sisl.physics.sparseorbitalbzspin property)": [[72, "sisl.physics.SparseOrbitalBZSpin.nnz"]], "non_orthogonal (sisl.physics.sparseorbitalbzspin property)": [[72, "sisl.physics.SparseOrbitalBZSpin.non_orthogonal"]], "nonzero() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.nonzero"]], "orthogonal (sisl.physics.sparseorbitalbzspin property)": [[72, "sisl.physics.SparseOrbitalBZSpin.orthogonal"]], "prepend() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.prepend"]], "remove() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.remove"]], "remove_orbital() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.remove_orbital"]], "repeat() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.repeat"]], "replace() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.replace"]], "reset() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.reset"]], "set_nsc() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.set_nsc"]], "shape (sisl.physics.sparseorbitalbzspin property)": [[72, "sisl.physics.SparseOrbitalBZSpin.shape"]], "spalign() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.spalign"]], "spin (sisl.physics.sparseorbitalbzspin property)": [[72, "sisl.physics.SparseOrbitalBZSpin.spin"]], "spsame() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.spsame"]], "sub() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.sub"]], "sub_orbital() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.sub_orbital"]], "swap() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.swap"]], "tile() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.tile"]], "tosparseatom() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.toSparseAtom"]], "tocsr() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.tocsr"]], "transform() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.transform"]], "transpose() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.transpose"]], "trs() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.trs"]], "unrepeat() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.unrepeat"]], "untile() (sisl.physics.sparseorbitalbzspin method)": [[72, "sisl.physics.SparseOrbitalBZSpin.untile"]], "noncolinear (sisl.physics.spin attribute)": [[73, "sisl.physics.Spin.NONCOLINEAR"]], "polarized (sisl.physics.spin attribute)": [[73, "sisl.physics.Spin.POLARIZED"]], "spinorbit (sisl.physics.spin attribute)": [[73, "sisl.physics.Spin.SPINORBIT"]], "spin (class in sisl.physics)": [[73, "sisl.physics.Spin"]], "unpolarized (sisl.physics.spin attribute)": [[73, "sisl.physics.Spin.UNPOLARIZED"]], "x (sisl.physics.spin attribute)": [[73, "sisl.physics.Spin.X"]], "y (sisl.physics.spin attribute)": [[73, "sisl.physics.Spin.Y"]], "z (sisl.physics.spin attribute)": [[73, "sisl.physics.Spin.Z"]], "__init__() (sisl.physics.spin method)": [[73, "sisl.physics.Spin.__init__"]], "copy() (sisl.physics.spin method)": [[73, "sisl.physics.Spin.copy"]], "dkind (sisl.physics.spin property)": [[73, "sisl.physics.Spin.dkind"]], "dtype (sisl.physics.spin property)": [[73, "sisl.physics.Spin.dtype"]], "is_colinear (sisl.physics.spin property)": [[73, "sisl.physics.Spin.is_colinear"]], "is_diagonal (sisl.physics.spin property)": [[73, "sisl.physics.Spin.is_diagonal"]], "is_noncolinear (sisl.physics.spin property)": [[73, "sisl.physics.Spin.is_noncolinear"]], "is_polarized (sisl.physics.spin property)": [[73, "sisl.physics.Spin.is_polarized"]], "is_spinorbit (sisl.physics.spin property)": [[73, "sisl.physics.Spin.is_spinorbit"]], "is_unpolarized (sisl.physics.spin property)": [[73, "sisl.physics.Spin.is_unpolarized"]], "kind (sisl.physics.spin property)": [[73, "sisl.physics.Spin.kind"]], "size (sisl.physics.spin property)": [[73, "sisl.physics.Spin.size"]], "spinor (sisl.physics.spin property)": [[73, "sisl.physics.Spin.spinor"]], "state (class in sisl.physics)": [[74, "sisl.physics.State"]], "__init__() (sisl.physics.state method)": [[74, "sisl.physics.State.__init__"]], "align_norm() (sisl.physics.state method)": [[74, "sisl.physics.State.align_norm"]], "align_phase() (sisl.physics.state method)": [[74, "sisl.physics.State.align_phase"]], "change_gauge() (sisl.physics.state method)": [[74, "sisl.physics.State.change_gauge"]], "copy() (sisl.physics.state method)": [[74, "sisl.physics.State.copy"]], "dkind (sisl.physics.state property)": [[74, "sisl.physics.State.dkind"]], "dtype (sisl.physics.state property)": [[74, "sisl.physics.State.dtype"]], "info (sisl.physics.state attribute)": [[74, "sisl.physics.State.info"]], "inner() (sisl.physics.state method)": [[74, "sisl.physics.State.inner"]], "ipr() (sisl.physics.state method)": [[74, "sisl.physics.State.ipr"]], "iter() (sisl.physics.state method)": [[74, "sisl.physics.State.iter"]], "norm() (sisl.physics.state method)": [[74, "sisl.physics.State.norm"]], "norm2() (sisl.physics.state method)": [[74, "sisl.physics.State.norm2"]], "normalize() (sisl.physics.state method)": [[74, "sisl.physics.State.normalize"]], "outer() (sisl.physics.state method)": [[74, "sisl.physics.State.outer"]], "parent (sisl.physics.state attribute)": [[74, "sisl.physics.State.parent"]], "phase() (sisl.physics.state method)": [[74, "sisl.physics.State.phase"]], "remove() (sisl.physics.state method)": [[74, "sisl.physics.State.remove"]], "rotate() (sisl.physics.state method)": [[74, "sisl.physics.State.rotate"]], "shape (sisl.physics.state property)": [[74, "sisl.physics.State.shape"]], "state (sisl.physics.state attribute)": [[74, "sisl.physics.State.state"]], "sub() (sisl.physics.state method)": [[74, "sisl.physics.State.sub"]], "tile() (sisl.physics.state method)": [[74, "sisl.physics.State.tile"]], "translate() (sisl.physics.state method)": [[74, "sisl.physics.State.translate"]], "statec (class in sisl.physics)": [[75, "sisl.physics.StateC"]], "__init__() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.__init__"]], "align_norm() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.align_norm"]], "align_phase() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.align_phase"]], "ascoefficient() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.asCoefficient"]], "asstate() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.asState"]], "c (sisl.physics.statec attribute)": [[75, "sisl.physics.StateC.c"]], "change_gauge() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.change_gauge"]], "copy() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.copy"]], "degenerate() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.degenerate"]], "derivative() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.derivative"]], "dkind (sisl.physics.statec property)": [[75, "sisl.physics.StateC.dkind"]], "dtype (sisl.physics.statec property)": [[75, "sisl.physics.StateC.dtype"]], "info (sisl.physics.statec attribute)": [[75, "sisl.physics.StateC.info"]], "inner() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.inner"]], "ipr() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.ipr"]], "iter() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.iter"]], "norm() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.norm"]], "norm2() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.norm2"]], "normalize() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.normalize"]], "outer() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.outer"]], "parent (sisl.physics.statec attribute)": [[75, "sisl.physics.StateC.parent"]], "phase() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.phase"]], "remove() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.remove"]], "rotate() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.rotate"]], "shape (sisl.physics.statec property)": [[75, "sisl.physics.StateC.shape"]], "sort() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.sort"]], "state (sisl.physics.statec attribute)": [[75, "sisl.physics.StateC.state"]], "sub() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.sub"]], "tile() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.tile"]], "translate() (sisl.physics.statec method)": [[75, "sisl.physics.StateC.translate"]], "widebandse (class in sisl.physics)": [[76, "sisl.physics.WideBandSE"]], "__init__() (sisl.physics.widebandse method)": [[76, "sisl.physics.WideBandSE.__init__"]], "broadening_matrix() (sisl.physics.widebandse method)": [[76, "sisl.physics.WideBandSE.broadening_matrix"]], "se2broadening() (sisl.physics.widebandse static method)": [[76, "sisl.physics.WideBandSE.se2broadening"]], "self_energy() (sisl.physics.widebandse method)": [[76, "sisl.physics.WideBandSE.self_energy"]], "bose_einstein() (in module sisl.physics)": [[77, "sisl.physics.bose_einstein"]], "cold() (in module sisl.physics)": [[78, "sisl.physics.cold"]], "degenerate_decouple() (in module sisl.physics)": [[79, "sisl.physics.degenerate_decouple"]], "cop() (in module sisl.physics.electron)": [[80, "sisl.physics.electron.COP"]], "coefficientelectron (class in sisl.physics.electron)": [[81, "sisl.physics.electron.CoefficientElectron"]], "__init__() (sisl.physics.electron.coefficientelectron method)": [[81, "sisl.physics.electron.CoefficientElectron.__init__"]], "c (sisl.physics.electron.coefficientelectron attribute)": [[81, "sisl.physics.electron.CoefficientElectron.c"]], "copy() (sisl.physics.electron.coefficientelectron method)": [[81, "sisl.physics.electron.CoefficientElectron.copy"]], "degenerate() (sisl.physics.electron.coefficientelectron method)": [[81, "sisl.physics.electron.CoefficientElectron.degenerate"]], "dkind (sisl.physics.electron.coefficientelectron property)": [[81, "sisl.physics.electron.CoefficientElectron.dkind"]], "dtype (sisl.physics.electron.coefficientelectron property)": [[81, "sisl.physics.electron.CoefficientElectron.dtype"]], "info (sisl.physics.electron.coefficientelectron attribute)": [[81, "sisl.physics.electron.CoefficientElectron.info"]], "iter() (sisl.physics.electron.coefficientelectron method)": [[81, "sisl.physics.electron.CoefficientElectron.iter"]], "parent (sisl.physics.electron.coefficientelectron attribute)": [[81, "sisl.physics.electron.CoefficientElectron.parent"]], "remove() (sisl.physics.electron.coefficientelectron method)": [[81, "sisl.physics.electron.CoefficientElectron.remove"]], "shape (sisl.physics.electron.coefficientelectron property)": [[81, "sisl.physics.electron.CoefficientElectron.shape"]], "sub() (sisl.physics.electron.coefficientelectron method)": [[81, "sisl.physics.electron.CoefficientElectron.sub"]], "dos() (in module sisl.physics.electron)": [[82, "sisl.physics.electron.DOS"]], "cohp() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.COHP"]], "coop() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.COOP"]], "cop() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.COP"]], "dos() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.DOS"]], "eigenstateelectron (class in sisl.physics.electron)": [[83, "sisl.physics.electron.EigenstateElectron"]], "pdos() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.PDOS"]], "sk() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.Sk"]], "__init__() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.__init__"]], "align_norm() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.align_norm"]], "align_phase() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.align_phase"]], "ascoefficient() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.asCoefficient"]], "asstate() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.asState"]], "berry_curvature() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.berry_curvature"]], "c (sisl.physics.electron.eigenstateelectron attribute)": [[83, "sisl.physics.electron.EigenstateElectron.c"]], "change_gauge() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.change_gauge"]], "copy() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.copy"]], "degenerate() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.degenerate"]], "derivative() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.derivative"]], "dkind (sisl.physics.electron.eigenstateelectron property)": [[83, "sisl.physics.electron.EigenstateElectron.dkind"]], "dtype (sisl.physics.electron.eigenstateelectron property)": [[83, "sisl.physics.electron.EigenstateElectron.dtype"]], "effective_mass() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.effective_mass"]], "eig (sisl.physics.electron.eigenstateelectron property)": [[83, "sisl.physics.electron.EigenstateElectron.eig"]], "info (sisl.physics.electron.eigenstateelectron attribute)": [[83, "sisl.physics.electron.EigenstateElectron.info"]], "inner() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.inner"]], "ipr() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.ipr"]], "iter() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.iter"]], "norm() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.norm"]], "norm2() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.norm2"]], "normalize() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.normalize"]], "occupation() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.occupation"]], "outer() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.outer"]], "parent (sisl.physics.electron.eigenstateelectron attribute)": [[83, "sisl.physics.electron.EigenstateElectron.parent"]], "phase() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.phase"]], "plot (sisl.physics.electron.eigenstateelectron attribute)": [[83, "sisl.physics.electron.EigenstateElectron.plot"]], "remove() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.remove"]], "rotate() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.rotate"]], "shape (sisl.physics.electron.eigenstateelectron property)": [[83, "sisl.physics.electron.EigenstateElectron.shape"]], "sort() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.sort"]], "spin_moment() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.spin_moment"]], "state (sisl.physics.electron.eigenstateelectron attribute)": [[83, "sisl.physics.electron.EigenstateElectron.state"]], "sub() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.sub"]], "tile() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.tile"]], "translate() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.translate"]], "velocity() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.velocity"]], "wavefunction() (sisl.physics.electron.eigenstateelectron method)": [[83, "sisl.physics.electron.EigenstateElectron.wavefunction"]], "dos() (sisl.physics.electron.eigenvalueelectron method)": [[84, "sisl.physics.electron.EigenvalueElectron.DOS"]], "eigenvalueelectron (class in sisl.physics.electron)": [[84, "sisl.physics.electron.EigenvalueElectron"]], "__init__() (sisl.physics.electron.eigenvalueelectron method)": [[84, "sisl.physics.electron.EigenvalueElectron.__init__"]], "c (sisl.physics.electron.eigenvalueelectron attribute)": [[84, "sisl.physics.electron.EigenvalueElectron.c"]], "copy() (sisl.physics.electron.eigenvalueelectron method)": [[84, "sisl.physics.electron.EigenvalueElectron.copy"]], "degenerate() (sisl.physics.electron.eigenvalueelectron method)": [[84, "sisl.physics.electron.EigenvalueElectron.degenerate"]], "dkind (sisl.physics.electron.eigenvalueelectron property)": [[84, "sisl.physics.electron.EigenvalueElectron.dkind"]], "dtype (sisl.physics.electron.eigenvalueelectron property)": [[84, "sisl.physics.electron.EigenvalueElectron.dtype"]], "eig (sisl.physics.electron.eigenvalueelectron property)": [[84, "sisl.physics.electron.EigenvalueElectron.eig"]], "info (sisl.physics.electron.eigenvalueelectron attribute)": [[84, "sisl.physics.electron.EigenvalueElectron.info"]], "iter() (sisl.physics.electron.eigenvalueelectron method)": [[84, "sisl.physics.electron.EigenvalueElectron.iter"]], "occupation() (sisl.physics.electron.eigenvalueelectron method)": [[84, "sisl.physics.electron.EigenvalueElectron.occupation"]], "parent (sisl.physics.electron.eigenvalueelectron attribute)": [[84, "sisl.physics.electron.EigenvalueElectron.parent"]], "remove() (sisl.physics.electron.eigenvalueelectron method)": [[84, "sisl.physics.electron.EigenvalueElectron.remove"]], "shape (sisl.physics.electron.eigenvalueelectron property)": [[84, "sisl.physics.electron.EigenvalueElectron.shape"]], "sub() (sisl.physics.electron.eigenvalueelectron method)": [[84, "sisl.physics.electron.EigenvalueElectron.sub"]], "eigenvectorelectron (class in sisl.physics.electron)": [[85, "sisl.physics.electron.EigenvectorElectron"]], "sk() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.Sk"]], "__init__() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.__init__"]], "align_norm() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.align_norm"]], "align_phase() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.align_phase"]], "change_gauge() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.change_gauge"]], "copy() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.copy"]], "dkind (sisl.physics.electron.eigenvectorelectron property)": [[85, "sisl.physics.electron.EigenvectorElectron.dkind"]], "dtype (sisl.physics.electron.eigenvectorelectron property)": [[85, "sisl.physics.electron.EigenvectorElectron.dtype"]], "info (sisl.physics.electron.eigenvectorelectron attribute)": [[85, "sisl.physics.electron.EigenvectorElectron.info"]], "inner() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.inner"]], "ipr() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.ipr"]], "iter() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.iter"]], "norm() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.norm"]], "norm2() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.norm2"]], "normalize() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.normalize"]], "outer() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.outer"]], "parent (sisl.physics.electron.eigenvectorelectron attribute)": [[85, "sisl.physics.electron.EigenvectorElectron.parent"]], "phase() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.phase"]], "remove() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.remove"]], "rotate() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.rotate"]], "shape (sisl.physics.electron.eigenvectorelectron property)": [[85, "sisl.physics.electron.EigenvectorElectron.shape"]], "spin_moment() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.spin_moment"]], "state (sisl.physics.electron.eigenvectorelectron attribute)": [[85, "sisl.physics.electron.EigenvectorElectron.state"]], "sub() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.sub"]], "tile() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.tile"]], "translate() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.translate"]], "wavefunction() (sisl.physics.electron.eigenvectorelectron method)": [[85, "sisl.physics.electron.EigenvectorElectron.wavefunction"]], "pdos() (in module sisl.physics.electron)": [[86, "sisl.physics.electron.PDOS"]], "sk() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.Sk"]], "statecelectron (class in sisl.physics.electron)": [[87, "sisl.physics.electron.StateCElectron"]], "__init__() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.__init__"]], "align_norm() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.align_norm"]], "align_phase() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.align_phase"]], "ascoefficient() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.asCoefficient"]], "asstate() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.asState"]], "berry_curvature() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.berry_curvature"]], "c (sisl.physics.electron.statecelectron attribute)": [[87, "sisl.physics.electron.StateCElectron.c"]], "change_gauge() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.change_gauge"]], "copy() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.copy"]], "degenerate() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.degenerate"]], "derivative() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.derivative"]], "dkind (sisl.physics.electron.statecelectron property)": [[87, "sisl.physics.electron.StateCElectron.dkind"]], "dtype (sisl.physics.electron.statecelectron property)": [[87, "sisl.physics.electron.StateCElectron.dtype"]], "effective_mass() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.effective_mass"]], "info (sisl.physics.electron.statecelectron attribute)": [[87, "sisl.physics.electron.StateCElectron.info"]], "inner() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.inner"]], "ipr() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.ipr"]], "iter() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.iter"]], "norm() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.norm"]], "norm2() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.norm2"]], "normalize() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.normalize"]], "outer() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.outer"]], "parent (sisl.physics.electron.statecelectron attribute)": [[87, "sisl.physics.electron.StateCElectron.parent"]], "phase() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.phase"]], "remove() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.remove"]], "rotate() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.rotate"]], "shape (sisl.physics.electron.statecelectron property)": [[87, "sisl.physics.electron.StateCElectron.shape"]], "sort() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.sort"]], "spin_moment() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.spin_moment"]], "state (sisl.physics.electron.statecelectron attribute)": [[87, "sisl.physics.electron.StateCElectron.state"]], "sub() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.sub"]], "tile() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.tile"]], "translate() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.translate"]], "velocity() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.velocity"]], "wavefunction() (sisl.physics.electron.statecelectron method)": [[87, "sisl.physics.electron.StateCElectron.wavefunction"]], "sk() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.Sk"]], "stateelectron (class in sisl.physics.electron)": [[88, "sisl.physics.electron.StateElectron"]], "__init__() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.__init__"]], "align_norm() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.align_norm"]], "align_phase() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.align_phase"]], "change_gauge() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.change_gauge"]], "copy() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.copy"]], "dkind (sisl.physics.electron.stateelectron property)": [[88, "sisl.physics.electron.StateElectron.dkind"]], "dtype (sisl.physics.electron.stateelectron property)": [[88, "sisl.physics.electron.StateElectron.dtype"]], "info (sisl.physics.electron.stateelectron attribute)": [[88, "sisl.physics.electron.StateElectron.info"]], "inner() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.inner"]], "ipr() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.ipr"]], "iter() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.iter"]], "norm() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.norm"]], "norm2() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.norm2"]], "normalize() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.normalize"]], "outer() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.outer"]], "parent (sisl.physics.electron.stateelectron attribute)": [[88, "sisl.physics.electron.StateElectron.parent"]], "phase() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.phase"]], "remove() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.remove"]], "rotate() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.rotate"]], "shape (sisl.physics.electron.stateelectron property)": [[88, "sisl.physics.electron.StateElectron.shape"]], "spin_moment() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.spin_moment"]], "state (sisl.physics.electron.stateelectron attribute)": [[88, "sisl.physics.electron.StateElectron.state"]], "sub() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.sub"]], "tile() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.tile"]], "translate() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.translate"]], "wavefunction() (sisl.physics.electron.stateelectron method)": [[88, "sisl.physics.electron.StateElectron.wavefunction"]], "berry_curvature() (in module sisl.physics.electron)": [[89, "sisl.physics.electron.berry_curvature"]], "berry_phase() (in module sisl.physics.electron)": [[90, "sisl.physics.electron.berry_phase"]], "conductivity() (in module sisl.physics.electron)": [[91, "sisl.physics.electron.conductivity"]], "spin_moment() (in module sisl.physics.electron)": [[92, "sisl.physics.electron.spin_moment"]], "spin_squared() (in module sisl.physics.electron)": [[93, "sisl.physics.electron.spin_squared"]], "wavefunction() (in module sisl.physics.electron)": [[94, "sisl.physics.electron.wavefunction"]], "fermi_dirac() (in module sisl.physics)": [[95, "sisl.physics.fermi_dirac"]], "gaussian() (in module sisl.physics)": [[96, "sisl.physics.gaussian"]], "get_distribution() (in module sisl.physics)": [[97, "sisl.physics.get_distribution"]], "heaviside() (in module sisl.physics)": [[98, "sisl.physics.heaviside"]], "lorentzian() (in module sisl.physics)": [[99, "sisl.physics.lorentzian"]], "coefficientphonon (class in sisl.physics.phonon)": [[100, "sisl.physics.phonon.CoefficientPhonon"]], "__init__() (sisl.physics.phonon.coefficientphonon method)": [[100, "sisl.physics.phonon.CoefficientPhonon.__init__"]], "c (sisl.physics.phonon.coefficientphonon attribute)": [[100, "sisl.physics.phonon.CoefficientPhonon.c"]], "copy() (sisl.physics.phonon.coefficientphonon method)": [[100, "sisl.physics.phonon.CoefficientPhonon.copy"]], "degenerate() (sisl.physics.phonon.coefficientphonon method)": [[100, "sisl.physics.phonon.CoefficientPhonon.degenerate"]], "dkind (sisl.physics.phonon.coefficientphonon property)": [[100, "sisl.physics.phonon.CoefficientPhonon.dkind"]], "dtype (sisl.physics.phonon.coefficientphonon property)": [[100, "sisl.physics.phonon.CoefficientPhonon.dtype"]], "info (sisl.physics.phonon.coefficientphonon attribute)": [[100, "sisl.physics.phonon.CoefficientPhonon.info"]], "iter() (sisl.physics.phonon.coefficientphonon method)": [[100, "sisl.physics.phonon.CoefficientPhonon.iter"]], "parent (sisl.physics.phonon.coefficientphonon attribute)": [[100, "sisl.physics.phonon.CoefficientPhonon.parent"]], "remove() (sisl.physics.phonon.coefficientphonon method)": [[100, "sisl.physics.phonon.CoefficientPhonon.remove"]], "shape (sisl.physics.phonon.coefficientphonon property)": [[100, "sisl.physics.phonon.CoefficientPhonon.shape"]], "sub() (sisl.physics.phonon.coefficientphonon method)": [[100, "sisl.physics.phonon.CoefficientPhonon.sub"]], "dos() (in module sisl.physics.phonon)": [[101, "sisl.physics.phonon.DOS"]], "dos() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.DOS"]], "eigenmodephonon (class in sisl.physics.phonon)": [[102, "sisl.physics.phonon.EigenmodePhonon"]], "pdos() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.PDOS"]], "__init__() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.__init__"]], "align_norm() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.align_norm"]], "align_phase() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.align_phase"]], "ascoefficient() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.asCoefficient"]], "asstate() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.asState"]], "c (sisl.physics.phonon.eigenmodephonon attribute)": [[102, "sisl.physics.phonon.EigenmodePhonon.c"]], "change_gauge() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.change_gauge"]], "copy() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.copy"]], "degenerate() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.degenerate"]], "derivative() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.derivative"]], "displacement() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.displacement"]], "dkind (sisl.physics.phonon.eigenmodephonon property)": [[102, "sisl.physics.phonon.EigenmodePhonon.dkind"]], "dtype (sisl.physics.phonon.eigenmodephonon property)": [[102, "sisl.physics.phonon.EigenmodePhonon.dtype"]], "hw (sisl.physics.phonon.eigenmodephonon property)": [[102, "sisl.physics.phonon.EigenmodePhonon.hw"]], "info (sisl.physics.phonon.eigenmodephonon attribute)": [[102, "sisl.physics.phonon.EigenmodePhonon.info"]], "inner() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.inner"]], "ipr() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.ipr"]], "iter() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.iter"]], "mode (sisl.physics.phonon.eigenmodephonon property)": [[102, "sisl.physics.phonon.EigenmodePhonon.mode"]], "norm() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.norm"]], "norm2() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.norm2"]], "normalize() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.normalize"]], "occupation() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.occupation"]], "outer() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.outer"]], "parent (sisl.physics.phonon.eigenmodephonon attribute)": [[102, "sisl.physics.phonon.EigenmodePhonon.parent"]], "phase() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.phase"]], "remove() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.remove"]], "rotate() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.rotate"]], "shape (sisl.physics.phonon.eigenmodephonon property)": [[102, "sisl.physics.phonon.EigenmodePhonon.shape"]], "sort() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.sort"]], "state (sisl.physics.phonon.eigenmodephonon attribute)": [[102, "sisl.physics.phonon.EigenmodePhonon.state"]], "sub() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.sub"]], "tile() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.tile"]], "translate() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.translate"]], "velocity() (sisl.physics.phonon.eigenmodephonon method)": [[102, "sisl.physics.phonon.EigenmodePhonon.velocity"]], "dos() (sisl.physics.phonon.eigenvaluephonon method)": [[103, "sisl.physics.phonon.EigenvaluePhonon.DOS"]], "eigenvaluephonon (class in sisl.physics.phonon)": [[103, "sisl.physics.phonon.EigenvaluePhonon"]], "__init__() (sisl.physics.phonon.eigenvaluephonon method)": [[103, "sisl.physics.phonon.EigenvaluePhonon.__init__"]], "c (sisl.physics.phonon.eigenvaluephonon attribute)": [[103, "sisl.physics.phonon.EigenvaluePhonon.c"]], "copy() (sisl.physics.phonon.eigenvaluephonon method)": [[103, "sisl.physics.phonon.EigenvaluePhonon.copy"]], "degenerate() (sisl.physics.phonon.eigenvaluephonon method)": [[103, "sisl.physics.phonon.EigenvaluePhonon.degenerate"]], "dkind (sisl.physics.phonon.eigenvaluephonon property)": [[103, "sisl.physics.phonon.EigenvaluePhonon.dkind"]], "dtype (sisl.physics.phonon.eigenvaluephonon property)": [[103, "sisl.physics.phonon.EigenvaluePhonon.dtype"]], "hw (sisl.physics.phonon.eigenvaluephonon property)": [[103, "sisl.physics.phonon.EigenvaluePhonon.hw"]], "info (sisl.physics.phonon.eigenvaluephonon attribute)": [[103, "sisl.physics.phonon.EigenvaluePhonon.info"]], "iter() (sisl.physics.phonon.eigenvaluephonon method)": [[103, "sisl.physics.phonon.EigenvaluePhonon.iter"]], "occupation() (sisl.physics.phonon.eigenvaluephonon method)": [[103, "sisl.physics.phonon.EigenvaluePhonon.occupation"]], "parent (sisl.physics.phonon.eigenvaluephonon attribute)": [[103, "sisl.physics.phonon.EigenvaluePhonon.parent"]], "remove() (sisl.physics.phonon.eigenvaluephonon method)": [[103, "sisl.physics.phonon.EigenvaluePhonon.remove"]], "shape (sisl.physics.phonon.eigenvaluephonon property)": [[103, "sisl.physics.phonon.EigenvaluePhonon.shape"]], "sub() (sisl.physics.phonon.eigenvaluephonon method)": [[103, "sisl.physics.phonon.EigenvaluePhonon.sub"]], "eigenvectorphonon (class in sisl.physics.phonon)": [[104, "sisl.physics.phonon.EigenvectorPhonon"]], "__init__() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.__init__"]], "align_norm() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.align_norm"]], "align_phase() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.align_phase"]], "change_gauge() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.change_gauge"]], "copy() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.copy"]], "dkind (sisl.physics.phonon.eigenvectorphonon property)": [[104, "sisl.physics.phonon.EigenvectorPhonon.dkind"]], "dtype (sisl.physics.phonon.eigenvectorphonon property)": [[104, "sisl.physics.phonon.EigenvectorPhonon.dtype"]], "info (sisl.physics.phonon.eigenvectorphonon attribute)": [[104, "sisl.physics.phonon.EigenvectorPhonon.info"]], "inner() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.inner"]], "ipr() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.ipr"]], "iter() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.iter"]], "mode (sisl.physics.phonon.eigenvectorphonon property)": [[104, "sisl.physics.phonon.EigenvectorPhonon.mode"]], "norm() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.norm"]], "norm2() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.norm2"]], "normalize() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.normalize"]], "outer() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.outer"]], "parent (sisl.physics.phonon.eigenvectorphonon attribute)": [[104, "sisl.physics.phonon.EigenvectorPhonon.parent"]], "phase() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.phase"]], "remove() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.remove"]], "rotate() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.rotate"]], "shape (sisl.physics.phonon.eigenvectorphonon property)": [[104, "sisl.physics.phonon.EigenvectorPhonon.shape"]], "state (sisl.physics.phonon.eigenvectorphonon attribute)": [[104, "sisl.physics.phonon.EigenvectorPhonon.state"]], "sub() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.sub"]], "tile() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.tile"]], "translate() (sisl.physics.phonon.eigenvectorphonon method)": [[104, "sisl.physics.phonon.EigenvectorPhonon.translate"]], "modecphonon (class in sisl.physics.phonon)": [[105, "sisl.physics.phonon.ModeCPhonon"]], "__init__() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.__init__"]], "align_norm() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.align_norm"]], "align_phase() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.align_phase"]], "ascoefficient() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.asCoefficient"]], "asstate() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.asState"]], "c (sisl.physics.phonon.modecphonon attribute)": [[105, "sisl.physics.phonon.ModeCPhonon.c"]], "change_gauge() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.change_gauge"]], "copy() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.copy"]], "degenerate() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.degenerate"]], "derivative() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.derivative"]], "dkind (sisl.physics.phonon.modecphonon property)": [[105, "sisl.physics.phonon.ModeCPhonon.dkind"]], "dtype (sisl.physics.phonon.modecphonon property)": [[105, "sisl.physics.phonon.ModeCPhonon.dtype"]], "info (sisl.physics.phonon.modecphonon attribute)": [[105, "sisl.physics.phonon.ModeCPhonon.info"]], "inner() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.inner"]], "ipr() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.ipr"]], "iter() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.iter"]], "mode (sisl.physics.phonon.modecphonon property)": [[105, "sisl.physics.phonon.ModeCPhonon.mode"]], "norm() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.norm"]], "norm2() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.norm2"]], "normalize() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.normalize"]], "outer() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.outer"]], "parent (sisl.physics.phonon.modecphonon attribute)": [[105, "sisl.physics.phonon.ModeCPhonon.parent"]], "phase() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.phase"]], "remove() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.remove"]], "rotate() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.rotate"]], "shape (sisl.physics.phonon.modecphonon property)": [[105, "sisl.physics.phonon.ModeCPhonon.shape"]], "sort() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.sort"]], "state (sisl.physics.phonon.modecphonon attribute)": [[105, "sisl.physics.phonon.ModeCPhonon.state"]], "sub() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.sub"]], "tile() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.tile"]], "translate() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.translate"]], "velocity() (sisl.physics.phonon.modecphonon method)": [[105, "sisl.physics.phonon.ModeCPhonon.velocity"]], "modephonon (class in sisl.physics.phonon)": [[106, "sisl.physics.phonon.ModePhonon"]], "__init__() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.__init__"]], "align_norm() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.align_norm"]], "align_phase() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.align_phase"]], "change_gauge() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.change_gauge"]], "copy() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.copy"]], "dkind (sisl.physics.phonon.modephonon property)": [[106, "sisl.physics.phonon.ModePhonon.dkind"]], "dtype (sisl.physics.phonon.modephonon property)": [[106, "sisl.physics.phonon.ModePhonon.dtype"]], "info (sisl.physics.phonon.modephonon attribute)": [[106, "sisl.physics.phonon.ModePhonon.info"]], "inner() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.inner"]], "ipr() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.ipr"]], "iter() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.iter"]], "mode (sisl.physics.phonon.modephonon property)": [[106, "sisl.physics.phonon.ModePhonon.mode"]], "norm() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.norm"]], "norm2() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.norm2"]], "normalize() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.normalize"]], "outer() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.outer"]], "parent (sisl.physics.phonon.modephonon attribute)": [[106, "sisl.physics.phonon.ModePhonon.parent"]], "phase() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.phase"]], "remove() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.remove"]], "rotate() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.rotate"]], "shape (sisl.physics.phonon.modephonon property)": [[106, "sisl.physics.phonon.ModePhonon.shape"]], "state (sisl.physics.phonon.modephonon attribute)": [[106, "sisl.physics.phonon.ModePhonon.state"]], "sub() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.sub"]], "tile() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.tile"]], "translate() (sisl.physics.phonon.modephonon method)": [[106, "sisl.physics.phonon.ModePhonon.translate"]], "pdos() (in module sisl.physics.phonon)": [[107, "sisl.physics.phonon.PDOS"]], "step_function() (in module sisl.physics)": [[108, "sisl.physics.step_function"]], "cube (class in sisl.shape)": [[109, "sisl.shape.Cube"]], "__init__() (sisl.shape.cube method)": [[109, "sisl.shape.Cube.__init__"]], "center (sisl.shape.cube property)": [[109, "sisl.shape.Cube.center"]], "copy() (sisl.shape.cube method)": [[109, "sisl.shape.Cube.copy"]], "edge_length (sisl.shape.cube property)": [[109, "sisl.shape.Cube.edge_length"]], "expand() (sisl.shape.cube method)": [[109, "sisl.shape.Cube.expand"]], "origin (sisl.shape.cube property)": [[109, "sisl.shape.Cube.origin"]], "scale() (sisl.shape.cube method)": [[109, "sisl.shape.Cube.scale"]], "to (sisl.shape.cube attribute)": [[109, "sisl.shape.Cube.to"]], "tocuboid() (sisl.shape.cube method)": [[109, "sisl.shape.Cube.toCuboid"]], "toellipsoid() (sisl.shape.cube method)": [[109, "sisl.shape.Cube.toEllipsoid"]], "tosphere() (sisl.shape.cube method)": [[109, "sisl.shape.Cube.toSphere"]], "volume() (sisl.shape.cube method)": [[109, "sisl.shape.Cube.volume"]], "within() (sisl.shape.cube method)": [[109, "sisl.shape.Cube.within"]], "within_index() (sisl.shape.cube method)": [[109, "sisl.shape.Cube.within_index"]], "cuboid (class in sisl.shape)": [[110, "sisl.shape.Cuboid"]], "__init__() (sisl.shape.cuboid method)": [[110, "sisl.shape.Cuboid.__init__"]], "center (sisl.shape.cuboid property)": [[110, "sisl.shape.Cuboid.center"]], "copy() (sisl.shape.cuboid method)": [[110, "sisl.shape.Cuboid.copy"]], "edge_length (sisl.shape.cuboid property)": [[110, "sisl.shape.Cuboid.edge_length"]], "expand() (sisl.shape.cuboid method)": [[110, "sisl.shape.Cuboid.expand"]], "origin (sisl.shape.cuboid property)": [[110, "sisl.shape.Cuboid.origin"]], "scale() (sisl.shape.cuboid method)": [[110, "sisl.shape.Cuboid.scale"]], "to (sisl.shape.cuboid attribute)": [[110, "sisl.shape.Cuboid.to"]], "tocuboid() (sisl.shape.cuboid method)": [[110, "sisl.shape.Cuboid.toCuboid"]], "toellipsoid() (sisl.shape.cuboid method)": [[110, "sisl.shape.Cuboid.toEllipsoid"]], "tosphere() (sisl.shape.cuboid method)": [[110, "sisl.shape.Cuboid.toSphere"]], "volume() (sisl.shape.cuboid method)": [[110, "sisl.shape.Cuboid.volume"]], "within() (sisl.shape.cuboid method)": [[110, "sisl.shape.Cuboid.within"]], "within_index() (sisl.shape.cuboid method)": [[110, "sisl.shape.Cuboid.within_index"]], "ellipsoid (class in sisl.shape)": [[111, "sisl.shape.Ellipsoid"]], "__init__() (sisl.shape.ellipsoid method)": [[111, "sisl.shape.Ellipsoid.__init__"]], "center (sisl.shape.ellipsoid property)": [[111, "sisl.shape.Ellipsoid.center"]], "copy() (sisl.shape.ellipsoid method)": [[111, "sisl.shape.Ellipsoid.copy"]], "expand() (sisl.shape.ellipsoid method)": [[111, "sisl.shape.Ellipsoid.expand"]], "radius (sisl.shape.ellipsoid property)": [[111, "sisl.shape.Ellipsoid.radius"]], "scale() (sisl.shape.ellipsoid method)": [[111, "sisl.shape.Ellipsoid.scale"]], "to (sisl.shape.ellipsoid attribute)": [[111, "sisl.shape.Ellipsoid.to"]], "tocuboid() (sisl.shape.ellipsoid method)": [[111, "sisl.shape.Ellipsoid.toCuboid"]], "toellipsoid() (sisl.shape.ellipsoid method)": [[111, "sisl.shape.Ellipsoid.toEllipsoid"]], "tosphere() (sisl.shape.ellipsoid method)": [[111, "sisl.shape.Ellipsoid.toSphere"]], "volume() (sisl.shape.ellipsoid method)": [[111, "sisl.shape.Ellipsoid.volume"]], "within() (sisl.shape.ellipsoid method)": [[111, "sisl.shape.Ellipsoid.within"]], "within_index() (sisl.shape.ellipsoid method)": [[111, "sisl.shape.Ellipsoid.within_index"]], "nullshape (class in sisl.shape)": [[112, "sisl.shape.NullShape"]], "__init__() (sisl.shape.nullshape method)": [[112, "sisl.shape.NullShape.__init__"]], "center (sisl.shape.nullshape property)": [[112, "sisl.shape.NullShape.center"]], "expand() (sisl.shape.nullshape method)": [[112, "sisl.shape.NullShape.expand"]], "scale() (sisl.shape.nullshape method)": [[112, "sisl.shape.NullShape.scale"]], "to (sisl.shape.nullshape attribute)": [[112, "sisl.shape.NullShape.to"]], "tocuboid() (sisl.shape.nullshape method)": [[112, "sisl.shape.NullShape.toCuboid"]], "toellipsoid() (sisl.shape.nullshape method)": [[112, "sisl.shape.NullShape.toEllipsoid"]], "tosphere() (sisl.shape.nullshape method)": [[112, "sisl.shape.NullShape.toSphere"]], "volume() (sisl.shape.nullshape method)": [[112, "sisl.shape.NullShape.volume"]], "within() (sisl.shape.nullshape method)": [[112, "sisl.shape.NullShape.within"]], "within_index() (sisl.shape.nullshape method)": [[112, "sisl.shape.NullShape.within_index"]], "shape (class in sisl.shape)": [[113, "sisl.shape.Shape"]], "__init__() (sisl.shape.shape method)": [[113, "sisl.shape.Shape.__init__"]], "center (sisl.shape.shape property)": [[113, "sisl.shape.Shape.center"]], "scale() (sisl.shape.shape method)": [[113, "sisl.shape.Shape.scale"]], "to (sisl.shape.shape attribute)": [[113, "sisl.shape.Shape.to"]], "tocuboid() (sisl.shape.shape method)": [[113, "sisl.shape.Shape.toCuboid"]], "toellipsoid() (sisl.shape.shape method)": [[113, "sisl.shape.Shape.toEllipsoid"]], "tosphere() (sisl.shape.shape method)": [[113, "sisl.shape.Shape.toSphere"]], "within() (sisl.shape.shape method)": [[113, "sisl.shape.Shape.within"]], "within_index() (sisl.shape.shape method)": [[113, "sisl.shape.Shape.within_index"]], "sphere (class in sisl.shape)": [[114, "sisl.shape.Sphere"]], "__init__() (sisl.shape.sphere method)": [[114, "sisl.shape.Sphere.__init__"]], "center (sisl.shape.sphere property)": [[114, "sisl.shape.Sphere.center"]], "copy() (sisl.shape.sphere method)": [[114, "sisl.shape.Sphere.copy"]], "expand() (sisl.shape.sphere method)": [[114, "sisl.shape.Sphere.expand"]], "radius (sisl.shape.sphere property)": [[114, "sisl.shape.Sphere.radius"]], "scale() (sisl.shape.sphere method)": [[114, "sisl.shape.Sphere.scale"]], "to (sisl.shape.sphere attribute)": [[114, "sisl.shape.Sphere.to"]], "tocuboid() (sisl.shape.sphere method)": [[114, "sisl.shape.Sphere.toCuboid"]], "toellipsoid() (sisl.shape.sphere method)": [[114, "sisl.shape.Sphere.toEllipsoid"]], "tosphere() (sisl.shape.sphere method)": [[114, "sisl.shape.Sphere.toSphere"]], "volume() (sisl.shape.sphere method)": [[114, "sisl.shape.Sphere.volume"]], "within() (sisl.shape.sphere method)": [[114, "sisl.shape.Sphere.within"]], "within_index() (sisl.shape.sphere method)": [[114, "sisl.shape.Sphere.within_index"]], "unit_convert() (in module sisl.unit)": [[115, "sisl.unit.unit_convert"]], "unit_default() (in module sisl.unit)": [[116, "sisl.unit.unit_default"]], "unit_group() (in module sisl.unit)": [[117, "sisl.unit.unit_group"]], "units (in module sisl.unit)": [[118, "sisl.unit.units"]], "propertydict (class in sisl.utils)": [[119, "sisl.utils.PropertyDict"]], "__init__() (sisl.utils.propertydict method)": [[119, "sisl.utils.PropertyDict.__init__"]], "clear() (sisl.utils.propertydict method)": [[119, "sisl.utils.PropertyDict.clear"]], "copy() (sisl.utils.propertydict method)": [[119, "sisl.utils.PropertyDict.copy"]], "fromkeys() (sisl.utils.propertydict method)": [[119, "sisl.utils.PropertyDict.fromkeys"]], "get() (sisl.utils.propertydict method)": [[119, "sisl.utils.PropertyDict.get"]], "items() (sisl.utils.propertydict method)": [[119, "sisl.utils.PropertyDict.items"]], "keys() (sisl.utils.propertydict method)": [[119, "sisl.utils.PropertyDict.keys"]], "pop() (sisl.utils.propertydict method)": [[119, "sisl.utils.PropertyDict.pop"]], "popitem() (sisl.utils.propertydict method)": [[119, "sisl.utils.PropertyDict.popitem"]], "setdefault() (sisl.utils.propertydict method)": [[119, "sisl.utils.PropertyDict.setdefault"]], "update() (sisl.utils.propertydict method)": [[119, "sisl.utils.PropertyDict.update"]], "values() (sisl.utils.propertydict method)": [[119, "sisl.utils.PropertyDict.values"]], "angle() (in module sisl.utils)": [[120, "sisl.utils.angle"]], "direction() (in module sisl.utils)": [[121, "sisl.utils.direction"]], "erange() (in module sisl.utils)": [[122, "sisl.utils.erange"]], "fileindex() (in module sisl.utils)": [[123, "sisl.utils.fileindex"]], "iter_shape() (in module sisl.utils)": [[124, "sisl.utils.iter_shape"]], "list2str() (in module sisl.utils)": [[125, "sisl.utils.list2str"]], "lstranges() (in module sisl.utils)": [[126, "sisl.utils.lstranges"]], "math_eval() (in module sisl.utils)": [[127, "sisl.utils.math_eval"]], "str_spec() (in module sisl.utils)": [[128, "sisl.utils.str_spec"]], "strmap() (in module sisl.utils)": [[129, "sisl.utils.strmap"]], "strseq() (in module sisl.utils)": [[130, "sisl.utils.strseq"]], "sisl": [[131, "module-sisl"]], "sisl.io.bigdft": [[133, "module-sisl.io.bigdft"]], "sisl.io.fhiaims": [[134, "module-sisl.io.fhiaims"]], "basesile (class in sisl.io)": [[135, "sisl.io.BaseSile"]], "base_file (sisl.io.basesile property)": [[135, "sisl.io.BaseSile.base_file"]], "dir_file() (sisl.io.basesile method)": [[135, "sisl.io.BaseSile.dir_file"]], "file (sisl.io.basesile property)": [[135, "sisl.io.BaseSile.file"]], "read() (sisl.io.basesile method)": [[135, "sisl.io.BaseSile.read"]], "to_json() (sisl.io.basesile method)": [[135, "sisl.io.BaseSile.to_json"]], "write() (sisl.io.basesile method)": [[135, "sisl.io.BaseSile.write"]], "sile (class in sisl.io)": [[136, "sisl.io.Sile"]], "__init__() (sisl.io.sile method)": [[136, "sisl.io.Sile.__init__"]], "base_file (sisl.io.sile property)": [[136, "sisl.io.Sile.base_file"]], "close() (sisl.io.sile method)": [[136, "sisl.io.Sile.close"]], "dir_file() (sisl.io.sile method)": [[136, "sisl.io.Sile.dir_file"]], "file (sisl.io.sile property)": [[136, "sisl.io.Sile.file"]], "read() (sisl.io.sile method)": [[136, "sisl.io.Sile.read"]], "to_json() (sisl.io.sile method)": [[136, "sisl.io.Sile.to_json"]], "write() (sisl.io.sile method)": [[136, "sisl.io.Sile.write"]], "silebin (class in sisl.io)": [[137, "sisl.io.SileBin"]], "__init__() (sisl.io.silebin method)": [[137, "sisl.io.SileBin.__init__"]], "base_file (sisl.io.silebin property)": [[137, "sisl.io.SileBin.base_file"]], "dir_file() (sisl.io.silebin method)": [[137, "sisl.io.SileBin.dir_file"]], "file (sisl.io.silebin property)": [[137, "sisl.io.SileBin.file"]], "read() (sisl.io.silebin method)": [[137, "sisl.io.SileBin.read"]], "to_json() (sisl.io.silebin method)": [[137, "sisl.io.SileBin.to_json"]], "write() (sisl.io.silebin method)": [[137, "sisl.io.SileBin.write"]], "silecdf (class in sisl.io)": [[138, "sisl.io.SileCDF"]], "__init__() (sisl.io.silecdf method)": [[138, "sisl.io.SileCDF.__init__"]], "base_file (sisl.io.silecdf property)": [[138, "sisl.io.SileCDF.base_file"]], "close() (sisl.io.silecdf method)": [[138, "sisl.io.SileCDF.close"]], "dir_file() (sisl.io.silecdf method)": [[138, "sisl.io.SileCDF.dir_file"]], "file (sisl.io.silecdf property)": [[138, "sisl.io.SileCDF.file"]], "iter() (sisl.io.silecdf method)": [[138, "sisl.io.SileCDF.iter"]], "read() (sisl.io.silecdf method)": [[138, "sisl.io.SileCDF.read"]], "to_json() (sisl.io.silecdf method)": [[138, "sisl.io.SileCDF.to_json"]], "write() (sisl.io.silecdf method)": [[138, "sisl.io.SileCDF.write"]], "sileerror": [[139, "sisl.io.SileError"]], "__init__() (sisl.io.sileerror method)": [[139, "sisl.io.SileError.__init__"]], "args (sisl.io.sileerror attribute)": [[139, "sisl.io.SileError.args"]], "characters_written (sisl.io.sileerror attribute)": [[139, "sisl.io.SileError.characters_written"]], "errno (sisl.io.sileerror attribute)": [[139, "sisl.io.SileError.errno"]], "filename (sisl.io.sileerror attribute)": [[139, "sisl.io.SileError.filename"]], "filename2 (sisl.io.sileerror attribute)": [[139, "sisl.io.SileError.filename2"]], "strerror (sisl.io.sileerror attribute)": [[139, "sisl.io.SileError.strerror"]], "with_traceback() (sisl.io.sileerror method)": [[139, "sisl.io.SileError.with_traceback"]], "sileinfo": [[140, "sisl.io.SileInfo"]], "__init__() (sisl.io.sileinfo method)": [[140, "sisl.io.SileInfo.__init__"]], "args (sisl.io.sileinfo attribute)": [[140, "sisl.io.SileInfo.args"]], "with_traceback() (sisl.io.sileinfo method)": [[140, "sisl.io.SileInfo.with_traceback"]], "silewarning": [[141, "sisl.io.SileWarning"]], "__init__() (sisl.io.silewarning method)": [[141, "sisl.io.SileWarning.__init__"]], "args (sisl.io.silewarning attribute)": [[141, "sisl.io.SileWarning.args"]], "with_traceback() (sisl.io.silewarning method)": [[141, "sisl.io.SileWarning.with_traceback"]], "add_sile() (in module sisl.io)": [[142, "sisl.io.add_sile"]], "__init__() (sisl.io.axsfsile method)": [[143, "sisl.io.axsfSile.__init__"]], "axsfsile (class in sisl.io)": [[143, "sisl.io.axsfSile"]], "base_file (sisl.io.axsfsile property)": [[143, "sisl.io.axsfSile.base_file"]], "close() (sisl.io.axsfsile method)": [[143, "sisl.io.axsfSile.close"]], "dir_file() (sisl.io.axsfsile method)": [[143, "sisl.io.axsfSile.dir_file"]], "file (sisl.io.axsfsile property)": [[143, "sisl.io.axsfSile.file"]], "plot (sisl.io.axsfsile attribute)": [[143, "sisl.io.axsfSile.plot"]], "read() (sisl.io.axsfsile method)": [[143, "sisl.io.axsfSile.read"]], "read_geometry() (sisl.io.axsfsile method)": [[143, "sisl.io.axsfSile.read_geometry"]], "to_json() (sisl.io.axsfsile method)": [[143, "sisl.io.axsfSile.to_json"]], "write() (sisl.io.axsfsile method)": [[143, "sisl.io.axsfSile.write"]], "write_geometry() (sisl.io.axsfsile method)": [[143, "sisl.io.axsfSile.write_geometry"]], "write_grid (sisl.io.axsfsile attribute)": [[143, "sisl.io.axsfSile.write_grid"]], "write_supercell() (sisl.io.axsfsile method)": [[143, "sisl.io.axsfSile.write_supercell"]], "silebigdft (class in sisl.io.bigdft)": [[144, "sisl.io.bigdft.SileBigDFT"]], "__init__() (sisl.io.bigdft.silebigdft method)": [[144, "sisl.io.bigdft.SileBigDFT.__init__"]], "base_file (sisl.io.bigdft.silebigdft property)": [[144, "sisl.io.bigdft.SileBigDFT.base_file"]], "close() (sisl.io.bigdft.silebigdft method)": [[144, "sisl.io.bigdft.SileBigDFT.close"]], "dir_file() (sisl.io.bigdft.silebigdft method)": [[144, "sisl.io.bigdft.SileBigDFT.dir_file"]], "file (sisl.io.bigdft.silebigdft property)": [[144, "sisl.io.bigdft.SileBigDFT.file"]], "read() (sisl.io.bigdft.silebigdft method)": [[144, "sisl.io.bigdft.SileBigDFT.read"]], "to_json() (sisl.io.bigdft.silebigdft method)": [[144, "sisl.io.bigdft.SileBigDFT.to_json"]], "write() (sisl.io.bigdft.silebigdft method)": [[144, "sisl.io.bigdft.SileBigDFT.write"]], "silebinbigdft (class in sisl.io.bigdft)": [[145, "sisl.io.bigdft.SileBinBigDFT"]], "__init__() (sisl.io.bigdft.silebinbigdft method)": [[145, "sisl.io.bigdft.SileBinBigDFT.__init__"]], "base_file (sisl.io.bigdft.silebinbigdft property)": [[145, "sisl.io.bigdft.SileBinBigDFT.base_file"]], "dir_file() (sisl.io.bigdft.silebinbigdft method)": [[145, "sisl.io.bigdft.SileBinBigDFT.dir_file"]], "file (sisl.io.bigdft.silebinbigdft property)": [[145, "sisl.io.bigdft.SileBinBigDFT.file"]], "read() (sisl.io.bigdft.silebinbigdft method)": [[145, "sisl.io.bigdft.SileBinBigDFT.read"]], "to_json() (sisl.io.bigdft.silebinbigdft method)": [[145, "sisl.io.bigdft.SileBinBigDFT.to_json"]], "write() (sisl.io.bigdft.silebinbigdft method)": [[145, "sisl.io.bigdft.SileBinBigDFT.write"]], "__init__() (sisl.io.bigdft.asciisilebigdft method)": [[146, "sisl.io.bigdft.asciiSileBigDFT.__init__"]], "asciisilebigdft (class in sisl.io.bigdft)": [[146, "sisl.io.bigdft.asciiSileBigDFT"]], "base_file (sisl.io.bigdft.asciisilebigdft property)": [[146, "sisl.io.bigdft.asciiSileBigDFT.base_file"]], "close() (sisl.io.bigdft.asciisilebigdft method)": [[146, "sisl.io.bigdft.asciiSileBigDFT.close"]], "dir_file() (sisl.io.bigdft.asciisilebigdft method)": [[146, "sisl.io.bigdft.asciiSileBigDFT.dir_file"]], "file (sisl.io.bigdft.asciisilebigdft property)": [[146, "sisl.io.bigdft.asciiSileBigDFT.file"]], "plot (sisl.io.bigdft.asciisilebigdft attribute)": [[146, "sisl.io.bigdft.asciiSileBigDFT.plot"]], "read() (sisl.io.bigdft.asciisilebigdft method)": [[146, "sisl.io.bigdft.asciiSileBigDFT.read"]], "read_geometry() (sisl.io.bigdft.asciisilebigdft method)": [[146, "sisl.io.bigdft.asciiSileBigDFT.read_geometry"]], "to_json() (sisl.io.bigdft.asciisilebigdft method)": [[146, "sisl.io.bigdft.asciiSileBigDFT.to_json"]], "write() (sisl.io.bigdft.asciisilebigdft method)": [[146, "sisl.io.bigdft.asciiSileBigDFT.write"]], "write_geometry() (sisl.io.bigdft.asciisilebigdft method)": [[146, "sisl.io.bigdft.asciiSileBigDFT.write_geometry"]], "__init__() (sisl.io.cubesile method)": [[147, "sisl.io.cubeSile.__init__"]], "base_file (sisl.io.cubesile property)": [[147, "sisl.io.cubeSile.base_file"]], "close() (sisl.io.cubesile method)": [[147, "sisl.io.cubeSile.close"]], "cubesile (class in sisl.io)": [[147, "sisl.io.cubeSile"]], "dir_file() (sisl.io.cubesile method)": [[147, "sisl.io.cubeSile.dir_file"]], "file (sisl.io.cubesile property)": [[147, "sisl.io.cubeSile.file"]], "plot (sisl.io.cubesile attribute)": [[147, "sisl.io.cubeSile.plot"]], "read() (sisl.io.cubesile method)": [[147, "sisl.io.cubeSile.read"]], "read_geometry() (sisl.io.cubesile method)": [[147, "sisl.io.cubeSile.read_geometry"]], "read_grid() (sisl.io.cubesile method)": [[147, "sisl.io.cubeSile.read_grid"]], "read_supercell() (sisl.io.cubesile method)": [[147, "sisl.io.cubeSile.read_supercell"]], "to_json() (sisl.io.cubesile method)": [[147, "sisl.io.cubeSile.to_json"]], "write() (sisl.io.cubesile method)": [[147, "sisl.io.cubeSile.write"]], "write_geometry() (sisl.io.cubesile method)": [[147, "sisl.io.cubeSile.write_geometry"]], "write_grid() (sisl.io.cubesile method)": [[147, "sisl.io.cubeSile.write_grid"]], "write_supercell() (sisl.io.cubesile method)": [[147, "sisl.io.cubeSile.write_supercell"]], "silebinfhiaims (class in sisl.io.fhiaims)": [[148, "sisl.io.fhiaims.SileBinFHIaims"]], "__init__() (sisl.io.fhiaims.silebinfhiaims method)": [[148, "sisl.io.fhiaims.SileBinFHIaims.__init__"]], "base_file (sisl.io.fhiaims.silebinfhiaims property)": [[148, "sisl.io.fhiaims.SileBinFHIaims.base_file"]], "dir_file() (sisl.io.fhiaims.silebinfhiaims method)": [[148, "sisl.io.fhiaims.SileBinFHIaims.dir_file"]], "file (sisl.io.fhiaims.silebinfhiaims property)": [[148, "sisl.io.fhiaims.SileBinFHIaims.file"]], "read() (sisl.io.fhiaims.silebinfhiaims method)": [[148, "sisl.io.fhiaims.SileBinFHIaims.read"]], "to_json() (sisl.io.fhiaims.silebinfhiaims method)": [[148, "sisl.io.fhiaims.SileBinFHIaims.to_json"]], "write() (sisl.io.fhiaims.silebinfhiaims method)": [[148, "sisl.io.fhiaims.SileBinFHIaims.write"]], "silefhiaims (class in sisl.io.fhiaims)": [[149, "sisl.io.fhiaims.SileFHIaims"]], "__init__() (sisl.io.fhiaims.silefhiaims method)": [[149, "sisl.io.fhiaims.SileFHIaims.__init__"]], "base_file (sisl.io.fhiaims.silefhiaims property)": [[149, "sisl.io.fhiaims.SileFHIaims.base_file"]], "close() (sisl.io.fhiaims.silefhiaims method)": [[149, "sisl.io.fhiaims.SileFHIaims.close"]], "dir_file() (sisl.io.fhiaims.silefhiaims method)": [[149, "sisl.io.fhiaims.SileFHIaims.dir_file"]], "file (sisl.io.fhiaims.silefhiaims property)": [[149, "sisl.io.fhiaims.SileFHIaims.file"]], "read() (sisl.io.fhiaims.silefhiaims method)": [[149, "sisl.io.fhiaims.SileFHIaims.read"]], "to_json() (sisl.io.fhiaims.silefhiaims method)": [[149, "sisl.io.fhiaims.SileFHIaims.to_json"]], "write() (sisl.io.fhiaims.silefhiaims method)": [[149, "sisl.io.fhiaims.SileFHIaims.write"]], "__init__() (sisl.io.fhiaims.insilefhiaims method)": [[150, "sisl.io.fhiaims.inSileFHIaims.__init__"]], "base_file (sisl.io.fhiaims.insilefhiaims property)": [[150, "sisl.io.fhiaims.inSileFHIaims.base_file"]], "close() (sisl.io.fhiaims.insilefhiaims method)": [[150, "sisl.io.fhiaims.inSileFHIaims.close"]], "dir_file() (sisl.io.fhiaims.insilefhiaims method)": [[150, "sisl.io.fhiaims.inSileFHIaims.dir_file"]], "file (sisl.io.fhiaims.insilefhiaims property)": [[150, "sisl.io.fhiaims.inSileFHIaims.file"]], "insilefhiaims (class in sisl.io.fhiaims)": [[150, "sisl.io.fhiaims.inSileFHIaims"]], "plot (sisl.io.fhiaims.insilefhiaims attribute)": [[150, "sisl.io.fhiaims.inSileFHIaims.plot"]], "read() (sisl.io.fhiaims.insilefhiaims method)": [[150, "sisl.io.fhiaims.inSileFHIaims.read"]], "read_geometry() (sisl.io.fhiaims.insilefhiaims method)": [[150, "sisl.io.fhiaims.inSileFHIaims.read_geometry"]], "read_moment() (sisl.io.fhiaims.insilefhiaims method)": [[150, "sisl.io.fhiaims.inSileFHIaims.read_moment"]], "read_supercell() (sisl.io.fhiaims.insilefhiaims method)": [[150, "sisl.io.fhiaims.inSileFHIaims.read_supercell"]], "read_velocity() (sisl.io.fhiaims.insilefhiaims method)": [[150, "sisl.io.fhiaims.inSileFHIaims.read_velocity"]], "to_json() (sisl.io.fhiaims.insilefhiaims method)": [[150, "sisl.io.fhiaims.inSileFHIaims.to_json"]], "write() (sisl.io.fhiaims.insilefhiaims method)": [[150, "sisl.io.fhiaims.inSileFHIaims.write"]], "write_geometry() (sisl.io.fhiaims.insilefhiaims method)": [[150, "sisl.io.fhiaims.inSileFHIaims.write_geometry"]], "write_supercell() (sisl.io.fhiaims.insilefhiaims method)": [[150, "sisl.io.fhiaims.inSileFHIaims.write_supercell"]], "get_sile() (in module sisl.io)": [[151, "sisl.io.get_sile"]], "get_sile_class() (in module sisl.io)": [[152, "sisl.io.get_sile_class"]], "get_siles() (in module sisl.io)": [[153, "sisl.io.get_siles"]], "silebingulp (class in sisl.io.gulp)": [[154, "sisl.io.gulp.SileBinGULP"]], "__init__() (sisl.io.gulp.silebingulp method)": [[154, "sisl.io.gulp.SileBinGULP.__init__"]], "base_file (sisl.io.gulp.silebingulp property)": [[154, "sisl.io.gulp.SileBinGULP.base_file"]], "dir_file() (sisl.io.gulp.silebingulp method)": [[154, "sisl.io.gulp.SileBinGULP.dir_file"]], "file (sisl.io.gulp.silebingulp property)": [[154, "sisl.io.gulp.SileBinGULP.file"]], "read() (sisl.io.gulp.silebingulp method)": [[154, "sisl.io.gulp.SileBinGULP.read"]], "to_json() (sisl.io.gulp.silebingulp method)": [[154, "sisl.io.gulp.SileBinGULP.to_json"]], "write() (sisl.io.gulp.silebingulp method)": [[154, "sisl.io.gulp.SileBinGULP.write"]], "silegulp (class in sisl.io.gulp)": [[155, "sisl.io.gulp.SileGULP"]], "__init__() (sisl.io.gulp.silegulp method)": [[155, "sisl.io.gulp.SileGULP.__init__"]], "base_file (sisl.io.gulp.silegulp property)": [[155, "sisl.io.gulp.SileGULP.base_file"]], "close() (sisl.io.gulp.silegulp method)": [[155, "sisl.io.gulp.SileGULP.close"]], "dir_file() (sisl.io.gulp.silegulp method)": [[155, "sisl.io.gulp.SileGULP.dir_file"]], "file (sisl.io.gulp.silegulp property)": [[155, "sisl.io.gulp.SileGULP.file"]], "read() (sisl.io.gulp.silegulp method)": [[155, "sisl.io.gulp.SileGULP.read"]], "to_json() (sisl.io.gulp.silegulp method)": [[155, "sisl.io.gulp.SileGULP.to_json"]], "write() (sisl.io.gulp.silegulp method)": [[155, "sisl.io.gulp.SileGULP.write"]], "__init__() (sisl.io.gulp.fcsilegulp method)": [[156, "sisl.io.gulp.fcSileGULP.__init__"]], "base_file (sisl.io.gulp.fcsilegulp property)": [[156, "sisl.io.gulp.fcSileGULP.base_file"]], "close() (sisl.io.gulp.fcsilegulp method)": [[156, "sisl.io.gulp.fcSileGULP.close"]], "dir_file() (sisl.io.gulp.fcsilegulp method)": [[156, "sisl.io.gulp.fcSileGULP.dir_file"]], "fcsilegulp (class in sisl.io.gulp)": [[156, "sisl.io.gulp.fcSileGULP"]], "file (sisl.io.gulp.fcsilegulp property)": [[156, "sisl.io.gulp.fcSileGULP.file"]], "read() (sisl.io.gulp.fcsilegulp method)": [[156, "sisl.io.gulp.fcSileGULP.read"]], "read_force_constant() (sisl.io.gulp.fcsilegulp method)": [[156, "sisl.io.gulp.fcSileGULP.read_force_constant"]], "to_json() (sisl.io.gulp.fcsilegulp method)": [[156, "sisl.io.gulp.fcSileGULP.to_json"]], "write() (sisl.io.gulp.fcsilegulp method)": [[156, "sisl.io.gulp.fcSileGULP.write"]], "__init__() (sisl.io.gulp.gotsilegulp method)": [[157, "sisl.io.gulp.gotSileGULP.__init__"]], "base_file (sisl.io.gulp.gotsilegulp property)": [[157, "sisl.io.gulp.gotSileGULP.base_file"]], "close() (sisl.io.gulp.gotsilegulp method)": [[157, "sisl.io.gulp.gotSileGULP.close"]], "dir_file() (sisl.io.gulp.gotsilegulp method)": [[157, "sisl.io.gulp.gotSileGULP.dir_file"]], "file (sisl.io.gulp.gotsilegulp property)": [[157, "sisl.io.gulp.gotSileGULP.file"]], "gotsilegulp (class in sisl.io.gulp)": [[157, "sisl.io.gulp.gotSileGULP"]], "plot (sisl.io.gulp.gotsilegulp attribute)": [[157, "sisl.io.gulp.gotSileGULP.plot"]], "read() (sisl.io.gulp.gotsilegulp method)": [[157, "sisl.io.gulp.gotSileGULP.read"]], "read_dynamical_matrix() (sisl.io.gulp.gotsilegulp method)": [[157, "sisl.io.gulp.gotSileGULP.read_dynamical_matrix"]], "read_geometry() (sisl.io.gulp.gotsilegulp method)": [[157, "sisl.io.gulp.gotSileGULP.read_geometry"]], "read_super() (sisl.io.gulp.gotsilegulp method)": [[157, "sisl.io.gulp.gotSileGULP.read_super"]], "read_supercell() (sisl.io.gulp.gotsilegulp method)": [[157, "sisl.io.gulp.gotSileGULP.read_supercell"]], "set_dyn_key() (sisl.io.gulp.gotsilegulp method)": [[157, "sisl.io.gulp.gotSileGULP.set_dyn_key"]], "set_dynamical_matrix_key() (sisl.io.gulp.gotsilegulp method)": [[157, "sisl.io.gulp.gotSileGULP.set_dynamical_matrix_key"]], "set_geometry_key() (sisl.io.gulp.gotsilegulp method)": [[157, "sisl.io.gulp.gotSileGULP.set_geometry_key"]], "set_key() (sisl.io.gulp.gotsilegulp method)": [[157, "sisl.io.gulp.gotSileGULP.set_key"]], "set_supercell_key() (sisl.io.gulp.gotsilegulp method)": [[157, "sisl.io.gulp.gotSileGULP.set_supercell_key"]], "to_json() (sisl.io.gulp.gotsilegulp method)": [[157, "sisl.io.gulp.gotSileGULP.to_json"]], "write() (sisl.io.gulp.gotsilegulp method)": [[157, "sisl.io.gulp.gotSileGULP.write"]], "__init__() (sisl.io.moldensile method)": [[158, "sisl.io.moldenSile.__init__"]], "base_file (sisl.io.moldensile property)": [[158, "sisl.io.moldenSile.base_file"]], "close() (sisl.io.moldensile method)": [[158, "sisl.io.moldenSile.close"]], "dir_file() (sisl.io.moldensile method)": [[158, "sisl.io.moldenSile.dir_file"]], "file (sisl.io.moldensile property)": [[158, "sisl.io.moldenSile.file"]], "moldensile (class in sisl.io)": [[158, "sisl.io.moldenSile"]], "read() (sisl.io.moldensile method)": [[158, "sisl.io.moldenSile.read"]], "to_json() (sisl.io.moldensile method)": [[158, "sisl.io.moldenSile.to_json"]], "write() (sisl.io.moldensile method)": [[158, "sisl.io.moldenSile.write"]], "write_geometry() (sisl.io.moldensile method)": [[158, "sisl.io.moldenSile.write_geometry"]], "write_supercell() (sisl.io.moldensile method)": [[158, "sisl.io.moldenSile.write_supercell"]], "silebinopenmx (class in sisl.io.openmx)": [[159, "sisl.io.openmx.SileBinOpenMX"]], "__init__() (sisl.io.openmx.silebinopenmx method)": [[159, "sisl.io.openmx.SileBinOpenMX.__init__"]], "base_file (sisl.io.openmx.silebinopenmx property)": [[159, "sisl.io.openmx.SileBinOpenMX.base_file"]], "dir_file() (sisl.io.openmx.silebinopenmx method)": [[159, "sisl.io.openmx.SileBinOpenMX.dir_file"]], "file (sisl.io.openmx.silebinopenmx property)": [[159, "sisl.io.openmx.SileBinOpenMX.file"]], "read() (sisl.io.openmx.silebinopenmx method)": [[159, "sisl.io.openmx.SileBinOpenMX.read"]], "to_json() (sisl.io.openmx.silebinopenmx method)": [[159, "sisl.io.openmx.SileBinOpenMX.to_json"]], "write() (sisl.io.openmx.silebinopenmx method)": [[159, "sisl.io.openmx.SileBinOpenMX.write"]], "silecdfopenmx (class in sisl.io.openmx)": [[160, "sisl.io.openmx.SileCDFOpenMX"]], "__init__() (sisl.io.openmx.silecdfopenmx method)": [[160, "sisl.io.openmx.SileCDFOpenMX.__init__"]], "base_file (sisl.io.openmx.silecdfopenmx property)": [[160, "sisl.io.openmx.SileCDFOpenMX.base_file"]], "close() (sisl.io.openmx.silecdfopenmx method)": [[160, "sisl.io.openmx.SileCDFOpenMX.close"]], "dir_file() (sisl.io.openmx.silecdfopenmx method)": [[160, "sisl.io.openmx.SileCDFOpenMX.dir_file"]], "file (sisl.io.openmx.silecdfopenmx property)": [[160, "sisl.io.openmx.SileCDFOpenMX.file"]], "iter() (sisl.io.openmx.silecdfopenmx method)": [[160, "sisl.io.openmx.SileCDFOpenMX.iter"]], "read() (sisl.io.openmx.silecdfopenmx method)": [[160, "sisl.io.openmx.SileCDFOpenMX.read"]], "to_json() (sisl.io.openmx.silecdfopenmx method)": [[160, "sisl.io.openmx.SileCDFOpenMX.to_json"]], "write() (sisl.io.openmx.silecdfopenmx method)": [[160, "sisl.io.openmx.SileCDFOpenMX.write"]], "sileopenmx (class in sisl.io.openmx)": [[161, "sisl.io.openmx.SileOpenMX"]], "__init__() (sisl.io.openmx.sileopenmx method)": [[161, "sisl.io.openmx.SileOpenMX.__init__"]], "base_file (sisl.io.openmx.sileopenmx property)": [[161, "sisl.io.openmx.SileOpenMX.base_file"]], "close() (sisl.io.openmx.sileopenmx method)": [[161, "sisl.io.openmx.SileOpenMX.close"]], "dir_file() (sisl.io.openmx.sileopenmx method)": [[161, "sisl.io.openmx.SileOpenMX.dir_file"]], "file (sisl.io.openmx.sileopenmx property)": [[161, "sisl.io.openmx.SileOpenMX.file"]], "read() (sisl.io.openmx.sileopenmx method)": [[161, "sisl.io.openmx.SileOpenMX.read"]], "to_json() (sisl.io.openmx.sileopenmx method)": [[161, "sisl.io.openmx.SileOpenMX.to_json"]], "write() (sisl.io.openmx.sileopenmx method)": [[161, "sisl.io.openmx.SileOpenMX.write"]], "__init__() (sisl.io.openmx.omxsileopenmx method)": [[162, "sisl.io.openmx.omxSileOpenMX.__init__"]], "base_file (sisl.io.openmx.omxsileopenmx property)": [[162, "sisl.io.openmx.omxSileOpenMX.base_file"]], "close() (sisl.io.openmx.omxsileopenmx method)": [[162, "sisl.io.openmx.omxSileOpenMX.close"]], "dir_file() (sisl.io.openmx.omxsileopenmx method)": [[162, "sisl.io.openmx.omxSileOpenMX.dir_file"]], "file (sisl.io.openmx.omxsileopenmx property)": [[162, "sisl.io.openmx.omxSileOpenMX.file"]], "get() (sisl.io.openmx.omxsileopenmx method)": [[162, "sisl.io.openmx.omxSileOpenMX.get"]], "omxsileopenmx (class in sisl.io.openmx)": [[162, "sisl.io.openmx.omxSileOpenMX"]], "plot (sisl.io.openmx.omxsileopenmx attribute)": [[162, "sisl.io.openmx.omxSileOpenMX.plot"]], "read() (sisl.io.openmx.omxsileopenmx method)": [[162, "sisl.io.openmx.omxSileOpenMX.read"]], "read_basis() (sisl.io.openmx.omxsileopenmx method)": [[162, "sisl.io.openmx.omxSileOpenMX.read_basis"]], "read_geometry() (sisl.io.openmx.omxsileopenmx method)": [[162, "sisl.io.openmx.omxSileOpenMX.read_geometry"]], "read_supercell() (sisl.io.openmx.omxsileopenmx method)": [[162, "sisl.io.openmx.omxSileOpenMX.read_supercell"]], "to_json() (sisl.io.openmx.omxsileopenmx method)": [[162, "sisl.io.openmx.omxSileOpenMX.to_json"]], "type() (sisl.io.openmx.omxsileopenmx method)": [[162, "sisl.io.openmx.omxSileOpenMX.type"]], "write() (sisl.io.openmx.omxsileopenmx method)": [[162, "sisl.io.openmx.omxSileOpenMX.write"]], "silebinorca (class in sisl.io.orca)": [[163, "sisl.io.orca.SileBinORCA"]], "__init__() (sisl.io.orca.silebinorca method)": [[163, "sisl.io.orca.SileBinORCA.__init__"]], "base_file (sisl.io.orca.silebinorca property)": [[163, "sisl.io.orca.SileBinORCA.base_file"]], "dir_file() (sisl.io.orca.silebinorca method)": [[163, "sisl.io.orca.SileBinORCA.dir_file"]], "file (sisl.io.orca.silebinorca property)": [[163, "sisl.io.orca.SileBinORCA.file"]], "read() (sisl.io.orca.silebinorca method)": [[163, "sisl.io.orca.SileBinORCA.read"]], "to_json() (sisl.io.orca.silebinorca method)": [[163, "sisl.io.orca.SileBinORCA.to_json"]], "write() (sisl.io.orca.silebinorca method)": [[163, "sisl.io.orca.SileBinORCA.write"]], "sileorca (class in sisl.io.orca)": [[164, "sisl.io.orca.SileORCA"]], "__init__() (sisl.io.orca.sileorca method)": [[164, "sisl.io.orca.SileORCA.__init__"]], "base_file (sisl.io.orca.sileorca property)": [[164, "sisl.io.orca.SileORCA.base_file"]], "close() (sisl.io.orca.sileorca method)": [[164, "sisl.io.orca.SileORCA.close"]], "dir_file() (sisl.io.orca.sileorca method)": [[164, "sisl.io.orca.SileORCA.dir_file"]], "file (sisl.io.orca.sileorca property)": [[164, "sisl.io.orca.SileORCA.file"]], "read() (sisl.io.orca.sileorca method)": [[164, "sisl.io.orca.SileORCA.read"]], "to_json() (sisl.io.orca.sileorca method)": [[164, "sisl.io.orca.SileORCA.to_json"]], "write() (sisl.io.orca.sileorca method)": [[164, "sisl.io.orca.SileORCA.write"]], "__init__() (sisl.io.orca.outputsileorca method)": [[165, "sisl.io.orca.outputSileORCA.__init__"]], "base_file (sisl.io.orca.outputsileorca property)": [[165, "sisl.io.orca.outputSileORCA.base_file"]], "close() (sisl.io.orca.outputsileorca method)": [[165, "sisl.io.orca.outputSileORCA.close"]], "completed() (sisl.io.orca.outputsileorca method)": [[165, "sisl.io.orca.outputSileORCA.completed"]], "dir_file() (sisl.io.orca.outputsileorca method)": [[165, "sisl.io.orca.outputSileORCA.dir_file"]], "file (sisl.io.orca.outputsileorca property)": [[165, "sisl.io.orca.outputSileORCA.file"]], "na (sisl.io.orca.outputsileorca property)": [[165, "sisl.io.orca.outputSileORCA.na"]], "no (sisl.io.orca.outputsileorca property)": [[165, "sisl.io.orca.outputSileORCA.no"]], "outputsileorca (class in sisl.io.orca)": [[165, "sisl.io.orca.outputSileORCA"]], "read() (sisl.io.orca.outputsileorca method)": [[165, "sisl.io.orca.outputSileORCA.read"]], "read_charge() (sisl.io.orca.outputsileorca method)": [[165, "sisl.io.orca.outputSileORCA.read_charge"]], "read_electrons() (sisl.io.orca.outputsileorca method)": [[165, "sisl.io.orca.outputSileORCA.read_electrons"]], "read_energy() (sisl.io.orca.outputsileorca method)": [[165, "sisl.io.orca.outputSileORCA.read_energy"]], "read_orbital_energies() (sisl.io.orca.outputsileorca method)": [[165, "sisl.io.orca.outputSileORCA.read_orbital_energies"]], "to_json() (sisl.io.orca.outputsileorca method)": [[165, "sisl.io.orca.outputSileORCA.to_json"]], "write() (sisl.io.orca.outputsileorca method)": [[165, "sisl.io.orca.outputSileORCA.write"]], "__init__() (sisl.io.orca.txtsileorca method)": [[166, "sisl.io.orca.txtSileORCA.__init__"]], "base_file (sisl.io.orca.txtsileorca property)": [[166, "sisl.io.orca.txtSileORCA.base_file"]], "close() (sisl.io.orca.txtsileorca method)": [[166, "sisl.io.orca.txtSileORCA.close"]], "dir_file() (sisl.io.orca.txtsileorca method)": [[166, "sisl.io.orca.txtSileORCA.dir_file"]], "file (sisl.io.orca.txtsileorca property)": [[166, "sisl.io.orca.txtSileORCA.file"]], "na (sisl.io.orca.txtsileorca property)": [[166, "sisl.io.orca.txtSileORCA.na"]], "no (sisl.io.orca.txtsileorca property)": [[166, "sisl.io.orca.txtSileORCA.no"]], "plot (sisl.io.orca.txtsileorca attribute)": [[166, "sisl.io.orca.txtSileORCA.plot"]], "read() (sisl.io.orca.txtsileorca method)": [[166, "sisl.io.orca.txtSileORCA.read"]], "read_electrons() (sisl.io.orca.txtsileorca method)": [[166, "sisl.io.orca.txtSileORCA.read_electrons"]], "read_energy() (sisl.io.orca.txtsileorca method)": [[166, "sisl.io.orca.txtSileORCA.read_energy"]], "read_geometry() (sisl.io.orca.txtsileorca method)": [[166, "sisl.io.orca.txtSileORCA.read_geometry"]], "to_json() (sisl.io.orca.txtsileorca method)": [[166, "sisl.io.orca.txtSileORCA.to_json"]], "txtsileorca (class in sisl.io.orca)": [[166, "sisl.io.orca.txtSileORCA"]], "write() (sisl.io.orca.txtsileorca method)": [[166, "sisl.io.orca.txtSileORCA.write"]], "__init__() (sisl.io.pdbsile method)": [[167, "sisl.io.pdbSile.__init__"]], "base_file (sisl.io.pdbsile property)": [[167, "sisl.io.pdbSile.base_file"]], "close() (sisl.io.pdbsile method)": [[167, "sisl.io.pdbSile.close"]], "dir_file() (sisl.io.pdbsile method)": [[167, "sisl.io.pdbSile.dir_file"]], "file (sisl.io.pdbsile property)": [[167, "sisl.io.pdbSile.file"]], "pdbsile (class in sisl.io)": [[167, "sisl.io.pdbSile"]], "plot (sisl.io.pdbsile attribute)": [[167, "sisl.io.pdbSile.plot"]], "read() (sisl.io.pdbsile method)": [[167, "sisl.io.pdbSile.read"]], "read_geometry() (sisl.io.pdbsile method)": [[167, "sisl.io.pdbSile.read_geometry"]], "read_supercell() (sisl.io.pdbsile method)": [[167, "sisl.io.pdbSile.read_supercell"]], "to_json() (sisl.io.pdbsile method)": [[167, "sisl.io.pdbSile.to_json"]], "write() (sisl.io.pdbsile method)": [[167, "sisl.io.pdbSile.write"]], "write_geometry() (sisl.io.pdbsile method)": [[167, "sisl.io.pdbSile.write_geometry"]], "write_supercell() (sisl.io.pdbsile method)": [[167, "sisl.io.pdbSile.write_supercell"]], "silebinscaleup (class in sisl.io.scaleup)": [[168, "sisl.io.scaleup.SileBinScaleUp"]], "__init__() (sisl.io.scaleup.silebinscaleup method)": [[168, "sisl.io.scaleup.SileBinScaleUp.__init__"]], "base_file (sisl.io.scaleup.silebinscaleup property)": [[168, "sisl.io.scaleup.SileBinScaleUp.base_file"]], "dir_file() (sisl.io.scaleup.silebinscaleup method)": [[168, "sisl.io.scaleup.SileBinScaleUp.dir_file"]], "file (sisl.io.scaleup.silebinscaleup property)": [[168, "sisl.io.scaleup.SileBinScaleUp.file"]], "read() (sisl.io.scaleup.silebinscaleup method)": [[168, "sisl.io.scaleup.SileBinScaleUp.read"]], "to_json() (sisl.io.scaleup.silebinscaleup method)": [[168, "sisl.io.scaleup.SileBinScaleUp.to_json"]], "write() (sisl.io.scaleup.silebinscaleup method)": [[168, "sisl.io.scaleup.SileBinScaleUp.write"]], "silescaleup (class in sisl.io.scaleup)": [[169, "sisl.io.scaleup.SileScaleUp"]], "__init__() (sisl.io.scaleup.silescaleup method)": [[169, "sisl.io.scaleup.SileScaleUp.__init__"]], "base_file (sisl.io.scaleup.silescaleup property)": [[169, "sisl.io.scaleup.SileScaleUp.base_file"]], "close() (sisl.io.scaleup.silescaleup method)": [[169, "sisl.io.scaleup.SileScaleUp.close"]], "dir_file() (sisl.io.scaleup.silescaleup method)": [[169, "sisl.io.scaleup.SileScaleUp.dir_file"]], "file (sisl.io.scaleup.silescaleup property)": [[169, "sisl.io.scaleup.SileScaleUp.file"]], "read() (sisl.io.scaleup.silescaleup method)": [[169, "sisl.io.scaleup.SileScaleUp.read"]], "to_json() (sisl.io.scaleup.silescaleup method)": [[169, "sisl.io.scaleup.SileScaleUp.to_json"]], "write() (sisl.io.scaleup.silescaleup method)": [[169, "sisl.io.scaleup.SileScaleUp.write"]], "__init__() (sisl.io.scaleup.orboccsilescaleup method)": [[170, "sisl.io.scaleup.orboccSileScaleUp.__init__"]], "base_file (sisl.io.scaleup.orboccsilescaleup property)": [[170, "sisl.io.scaleup.orboccSileScaleUp.base_file"]], "close() (sisl.io.scaleup.orboccsilescaleup method)": [[170, "sisl.io.scaleup.orboccSileScaleUp.close"]], "dir_file() (sisl.io.scaleup.orboccsilescaleup method)": [[170, "sisl.io.scaleup.orboccSileScaleUp.dir_file"]], "file (sisl.io.scaleup.orboccsilescaleup property)": [[170, "sisl.io.scaleup.orboccSileScaleUp.file"]], "orboccsilescaleup (class in sisl.io.scaleup)": [[170, "sisl.io.scaleup.orboccSileScaleUp"]], "read() (sisl.io.scaleup.orboccsilescaleup method)": [[170, "sisl.io.scaleup.orboccSileScaleUp.read"]], "read_atom() (sisl.io.scaleup.orboccsilescaleup method)": [[170, "sisl.io.scaleup.orboccSileScaleUp.read_atom"]], "to_json() (sisl.io.scaleup.orboccsilescaleup method)": [[170, "sisl.io.scaleup.orboccSileScaleUp.to_json"]], "write() (sisl.io.scaleup.orboccsilescaleup method)": [[170, "sisl.io.scaleup.orboccSileScaleUp.write"]], "__init__() (sisl.io.scaleup.refsilescaleup method)": [[171, "sisl.io.scaleup.refSileScaleUp.__init__"]], "base_file (sisl.io.scaleup.refsilescaleup property)": [[171, "sisl.io.scaleup.refSileScaleUp.base_file"]], "close() (sisl.io.scaleup.refsilescaleup method)": [[171, "sisl.io.scaleup.refSileScaleUp.close"]], "dir_file() (sisl.io.scaleup.refsilescaleup method)": [[171, "sisl.io.scaleup.refSileScaleUp.dir_file"]], "file (sisl.io.scaleup.refsilescaleup property)": [[171, "sisl.io.scaleup.refSileScaleUp.file"]], "plot (sisl.io.scaleup.refsilescaleup attribute)": [[171, "sisl.io.scaleup.refSileScaleUp.plot"]], "read() (sisl.io.scaleup.refsilescaleup method)": [[171, "sisl.io.scaleup.refSileScaleUp.read"]], "read_geometry() (sisl.io.scaleup.refsilescaleup method)": [[171, "sisl.io.scaleup.refSileScaleUp.read_geometry"]], "read_supercell() (sisl.io.scaleup.refsilescaleup method)": [[171, "sisl.io.scaleup.refSileScaleUp.read_supercell"]], "refsilescaleup (class in sisl.io.scaleup)": [[171, "sisl.io.scaleup.refSileScaleUp"]], "to_json() (sisl.io.scaleup.refsilescaleup method)": [[171, "sisl.io.scaleup.refSileScaleUp.to_json"]], "write() (sisl.io.scaleup.refsilescaleup method)": [[171, "sisl.io.scaleup.refSileScaleUp.write"]], "write_geometry() (sisl.io.scaleup.refsilescaleup method)": [[171, "sisl.io.scaleup.refSileScaleUp.write_geometry"]], "__init__() (sisl.io.scaleup.rhamsilescaleup method)": [[172, "sisl.io.scaleup.rhamSileScaleUp.__init__"]], "base_file (sisl.io.scaleup.rhamsilescaleup property)": [[172, "sisl.io.scaleup.rhamSileScaleUp.base_file"]], "close() (sisl.io.scaleup.rhamsilescaleup method)": [[172, "sisl.io.scaleup.rhamSileScaleUp.close"]], "dir_file() (sisl.io.scaleup.rhamsilescaleup method)": [[172, "sisl.io.scaleup.rhamSileScaleUp.dir_file"]], "file (sisl.io.scaleup.rhamsilescaleup property)": [[172, "sisl.io.scaleup.rhamSileScaleUp.file"]], "plot (sisl.io.scaleup.rhamsilescaleup attribute)": [[172, "sisl.io.scaleup.rhamSileScaleUp.plot"]], "read() (sisl.io.scaleup.rhamsilescaleup method)": [[172, "sisl.io.scaleup.rhamSileScaleUp.read"]], "read_hamiltonian() (sisl.io.scaleup.rhamsilescaleup method)": [[172, "sisl.io.scaleup.rhamSileScaleUp.read_hamiltonian"]], "rhamsilescaleup (class in sisl.io.scaleup)": [[172, "sisl.io.scaleup.rhamSileScaleUp"]], "to_json() (sisl.io.scaleup.rhamsilescaleup method)": [[172, "sisl.io.scaleup.rhamSileScaleUp.to_json"]], "write() (sisl.io.scaleup.rhamsilescaleup method)": [[172, "sisl.io.scaleup.rhamSileScaleUp.write"]], "silebinsiesta (class in sisl.io.siesta)": [[173, "sisl.io.siesta.SileBinSiesta"]], "__init__() (sisl.io.siesta.silebinsiesta method)": [[173, "sisl.io.siesta.SileBinSiesta.__init__"]], "base_file (sisl.io.siesta.silebinsiesta property)": [[173, "sisl.io.siesta.SileBinSiesta.base_file"]], "dir_file() (sisl.io.siesta.silebinsiesta method)": [[173, "sisl.io.siesta.SileBinSiesta.dir_file"]], "file (sisl.io.siesta.silebinsiesta property)": [[173, "sisl.io.siesta.SileBinSiesta.file"]], "read() (sisl.io.siesta.silebinsiesta method)": [[173, "sisl.io.siesta.SileBinSiesta.read"]], "to_json() (sisl.io.siesta.silebinsiesta method)": [[173, "sisl.io.siesta.SileBinSiesta.to_json"]], "write() (sisl.io.siesta.silebinsiesta method)": [[173, "sisl.io.siesta.SileBinSiesta.write"]], "silecdfsiesta (class in sisl.io.siesta)": [[174, "sisl.io.siesta.SileCDFSiesta"]], "__init__() (sisl.io.siesta.silecdfsiesta method)": [[174, "sisl.io.siesta.SileCDFSiesta.__init__"]], "base_file (sisl.io.siesta.silecdfsiesta property)": [[174, "sisl.io.siesta.SileCDFSiesta.base_file"]], "close() (sisl.io.siesta.silecdfsiesta method)": [[174, "sisl.io.siesta.SileCDFSiesta.close"]], "dir_file() (sisl.io.siesta.silecdfsiesta method)": [[174, "sisl.io.siesta.SileCDFSiesta.dir_file"]], "file (sisl.io.siesta.silecdfsiesta property)": [[174, "sisl.io.siesta.SileCDFSiesta.file"]], "iter() (sisl.io.siesta.silecdfsiesta method)": [[174, "sisl.io.siesta.SileCDFSiesta.iter"]], "read() (sisl.io.siesta.silecdfsiesta method)": [[174, "sisl.io.siesta.SileCDFSiesta.read"]], "to_json() (sisl.io.siesta.silecdfsiesta method)": [[174, "sisl.io.siesta.SileCDFSiesta.to_json"]], "write() (sisl.io.siesta.silecdfsiesta method)": [[174, "sisl.io.siesta.SileCDFSiesta.write"]], "silesiesta (class in sisl.io.siesta)": [[175, "sisl.io.siesta.SileSiesta"]], "__init__() (sisl.io.siesta.silesiesta method)": [[175, "sisl.io.siesta.SileSiesta.__init__"]], "base_file (sisl.io.siesta.silesiesta property)": [[175, "sisl.io.siesta.SileSiesta.base_file"]], "close() (sisl.io.siesta.silesiesta method)": [[175, "sisl.io.siesta.SileSiesta.close"]], "dir_file() (sisl.io.siesta.silesiesta method)": [[175, "sisl.io.siesta.SileSiesta.dir_file"]], "file (sisl.io.siesta.silesiesta property)": [[175, "sisl.io.siesta.SileSiesta.file"]], "read() (sisl.io.siesta.silesiesta method)": [[175, "sisl.io.siesta.SileSiesta.read"]], "to_json() (sisl.io.siesta.silesiesta method)": [[175, "sisl.io.siesta.SileSiesta.to_json"]], "write() (sisl.io.siesta.silesiesta method)": [[175, "sisl.io.siesta.SileSiesta.write"]], "__init__() (sisl.io.siesta.bandssilesiesta method)": [[176, "sisl.io.siesta.bandsSileSiesta.__init__"]], "bandssilesiesta (class in sisl.io.siesta)": [[176, "sisl.io.siesta.bandsSileSiesta"]], "base_file (sisl.io.siesta.bandssilesiesta property)": [[176, "sisl.io.siesta.bandsSileSiesta.base_file"]], "close() (sisl.io.siesta.bandssilesiesta method)": [[176, "sisl.io.siesta.bandsSileSiesta.close"]], "dir_file() (sisl.io.siesta.bandssilesiesta method)": [[176, "sisl.io.siesta.bandsSileSiesta.dir_file"]], "file (sisl.io.siesta.bandssilesiesta property)": [[176, "sisl.io.siesta.bandsSileSiesta.file"]], "plot (sisl.io.siesta.bandssilesiesta attribute)": [[176, "sisl.io.siesta.bandsSileSiesta.plot"]], "read() (sisl.io.siesta.bandssilesiesta method)": [[176, "sisl.io.siesta.bandsSileSiesta.read"]], "read_data() (sisl.io.siesta.bandssilesiesta method)": [[176, "sisl.io.siesta.bandsSileSiesta.read_data"]], "read_fermi_level() (sisl.io.siesta.bandssilesiesta method)": [[176, "sisl.io.siesta.bandsSileSiesta.read_fermi_level"]], "to_json() (sisl.io.siesta.bandssilesiesta method)": [[176, "sisl.io.siesta.bandsSileSiesta.to_json"]], "write() (sisl.io.siesta.bandssilesiesta method)": [[176, "sisl.io.siesta.bandsSileSiesta.write"]], "__init__() (sisl.io.siesta.dmsilesiesta method)": [[177, "sisl.io.siesta.dmSileSiesta.__init__"]], "base_file (sisl.io.siesta.dmsilesiesta property)": [[177, "sisl.io.siesta.dmSileSiesta.base_file"]], "dir_file() (sisl.io.siesta.dmsilesiesta method)": [[177, "sisl.io.siesta.dmSileSiesta.dir_file"]], "dmsilesiesta (class in sisl.io.siesta)": [[177, "sisl.io.siesta.dmSileSiesta"]], "file (sisl.io.siesta.dmsilesiesta property)": [[177, "sisl.io.siesta.dmSileSiesta.file"]], "read() (sisl.io.siesta.dmsilesiesta method)": [[177, "sisl.io.siesta.dmSileSiesta.read"]], "read_density_matrix() (sisl.io.siesta.dmsilesiesta method)": [[177, "sisl.io.siesta.dmSileSiesta.read_density_matrix"]], "to_json() (sisl.io.siesta.dmsilesiesta method)": [[177, "sisl.io.siesta.dmSileSiesta.to_json"]], "write() (sisl.io.siesta.dmsilesiesta method)": [[177, "sisl.io.siesta.dmSileSiesta.write"]], "write_density_matrix() (sisl.io.siesta.dmsilesiesta method)": [[177, "sisl.io.siesta.dmSileSiesta.write_density_matrix"]], "__init__() (sisl.io.siesta.eigsilesiesta method)": [[178, "sisl.io.siesta.eigSileSiesta.__init__"]], "base_file (sisl.io.siesta.eigsilesiesta property)": [[178, "sisl.io.siesta.eigSileSiesta.base_file"]], "close() (sisl.io.siesta.eigsilesiesta method)": [[178, "sisl.io.siesta.eigSileSiesta.close"]], "dir_file() (sisl.io.siesta.eigsilesiesta method)": [[178, "sisl.io.siesta.eigSileSiesta.dir_file"]], "eigsilesiesta (class in sisl.io.siesta)": [[178, "sisl.io.siesta.eigSileSiesta"]], "file (sisl.io.siesta.eigsilesiesta property)": [[178, "sisl.io.siesta.eigSileSiesta.file"]], "read() (sisl.io.siesta.eigsilesiesta method)": [[178, "sisl.io.siesta.eigSileSiesta.read"]], "read_data() (sisl.io.siesta.eigsilesiesta method)": [[178, "sisl.io.siesta.eigSileSiesta.read_data"]], "read_fermi_level() (sisl.io.siesta.eigsilesiesta method)": [[178, "sisl.io.siesta.eigSileSiesta.read_fermi_level"]], "to_json() (sisl.io.siesta.eigsilesiesta method)": [[178, "sisl.io.siesta.eigSileSiesta.to_json"]], "write() (sisl.io.siesta.eigsilesiesta method)": [[178, "sisl.io.siesta.eigSileSiesta.write"]], "__init__() (sisl.io.siesta.fasilesiesta method)": [[179, "sisl.io.siesta.faSileSiesta.__init__"]], "base_file (sisl.io.siesta.fasilesiesta property)": [[179, "sisl.io.siesta.faSileSiesta.base_file"]], "close() (sisl.io.siesta.fasilesiesta method)": [[179, "sisl.io.siesta.faSileSiesta.close"]], "dir_file() (sisl.io.siesta.fasilesiesta method)": [[179, "sisl.io.siesta.faSileSiesta.dir_file"]], "fasilesiesta (class in sisl.io.siesta)": [[179, "sisl.io.siesta.faSileSiesta"]], "file (sisl.io.siesta.fasilesiesta property)": [[179, "sisl.io.siesta.faSileSiesta.file"]], "read() (sisl.io.siesta.fasilesiesta method)": [[179, "sisl.io.siesta.faSileSiesta.read"]], "read_data() (sisl.io.siesta.fasilesiesta method)": [[179, "sisl.io.siesta.faSileSiesta.read_data"]], "read_force() (sisl.io.siesta.fasilesiesta method)": [[179, "sisl.io.siesta.faSileSiesta.read_force"]], "to_json() (sisl.io.siesta.fasilesiesta method)": [[179, "sisl.io.siesta.faSileSiesta.to_json"]], "write() (sisl.io.siesta.fasilesiesta method)": [[179, "sisl.io.siesta.faSileSiesta.write"]], "write_data() (sisl.io.siesta.fasilesiesta method)": [[179, "sisl.io.siesta.faSileSiesta.write_data"]], "write_force() (sisl.io.siesta.fasilesiesta method)": [[179, "sisl.io.siesta.faSileSiesta.write_force"]], "__init__() (sisl.io.siesta.fcsilesiesta method)": [[180, "sisl.io.siesta.fcSileSiesta.__init__"]], "base_file (sisl.io.siesta.fcsilesiesta property)": [[180, "sisl.io.siesta.fcSileSiesta.base_file"]], "close() (sisl.io.siesta.fcsilesiesta method)": [[180, "sisl.io.siesta.fcSileSiesta.close"]], "dir_file() (sisl.io.siesta.fcsilesiesta method)": [[180, "sisl.io.siesta.fcSileSiesta.dir_file"]], "fcsilesiesta (class in sisl.io.siesta)": [[180, "sisl.io.siesta.fcSileSiesta"]], "file (sisl.io.siesta.fcsilesiesta property)": [[180, "sisl.io.siesta.fcSileSiesta.file"]], "read() (sisl.io.siesta.fcsilesiesta method)": [[180, "sisl.io.siesta.fcSileSiesta.read"]], "read_force() (sisl.io.siesta.fcsilesiesta method)": [[180, "sisl.io.siesta.fcSileSiesta.read_force"]], "read_force_constant() (sisl.io.siesta.fcsilesiesta method)": [[180, "sisl.io.siesta.fcSileSiesta.read_force_constant"]], "to_json() (sisl.io.siesta.fcsilesiesta method)": [[180, "sisl.io.siesta.fcSileSiesta.to_json"]], "write() (sisl.io.siesta.fcsilesiesta method)": [[180, "sisl.io.siesta.fcSileSiesta.write"]], "__init__() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.__init__"]], "base_file (sisl.io.siesta.fdfsilesiesta property)": [[181, "sisl.io.siesta.fdfSileSiesta.base_file"]], "close() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.close"]], "dir_file() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.dir_file"]], "fdfsilesiesta (class in sisl.io.siesta)": [[181, "sisl.io.siesta.fdfSileSiesta"]], "file (sisl.io.siesta.fdfsilesiesta property)": [[181, "sisl.io.siesta.fdfSileSiesta.file"]], "get() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.get"]], "includes() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.includes"]], "plot (sisl.io.siesta.fdfsilesiesta attribute)": [[181, "sisl.io.siesta.fdfSileSiesta.plot"]], "print() (sisl.io.siesta.fdfsilesiesta static method)": [[181, "sisl.io.siesta.fdfSileSiesta.print"]], "read() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.read"]], "read_basis() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.read_basis"]], "read_density_matrix() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.read_density_matrix"]], "read_dynamical_matrix() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.read_dynamical_matrix"]], "read_energy_density_matrix() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.read_energy_density_matrix"]], "read_fermi_level() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.read_fermi_level"]], "read_force() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.read_force"]], "read_force_constant() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.read_force_constant"]], "read_geometry() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.read_geometry"]], "read_grid() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.read_grid"]], "read_hamiltonian() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.read_hamiltonian"]], "read_overlap() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.read_overlap"]], "read_supercell() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.read_supercell"]], "read_supercell_nsc() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.read_supercell_nsc"]], "set() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.set"]], "to_json() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.to_json"]], "type() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.type"]], "write() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.write"]], "write_geometry() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.write_geometry"]], "write_supercell() (sisl.io.siesta.fdfsilesiesta method)": [[181, "sisl.io.siesta.fdfSileSiesta.write_supercell"]], "__init__() (sisl.io.siesta.gridsilesiesta method)": [[182, "sisl.io.siesta.gridSileSiesta.__init__"]], "base_file (sisl.io.siesta.gridsilesiesta property)": [[182, "sisl.io.siesta.gridSileSiesta.base_file"]], "dir_file() (sisl.io.siesta.gridsilesiesta method)": [[182, "sisl.io.siesta.gridSileSiesta.dir_file"]], "file (sisl.io.siesta.gridsilesiesta property)": [[182, "sisl.io.siesta.gridSileSiesta.file"]], "gridsilesiesta (class in sisl.io.siesta)": [[182, "sisl.io.siesta.gridSileSiesta"]], "grid_unit (sisl.io.siesta.gridsilesiesta attribute)": [[182, "sisl.io.siesta.gridSileSiesta.grid_unit"]], "read() (sisl.io.siesta.gridsilesiesta method)": [[182, "sisl.io.siesta.gridSileSiesta.read"]], "read_grid() (sisl.io.siesta.gridsilesiesta method)": [[182, "sisl.io.siesta.gridSileSiesta.read_grid"]], "read_grid_size() (sisl.io.siesta.gridsilesiesta method)": [[182, "sisl.io.siesta.gridSileSiesta.read_grid_size"]], "read_supercell() (sisl.io.siesta.gridsilesiesta method)": [[182, "sisl.io.siesta.gridSileSiesta.read_supercell"]], "to_json() (sisl.io.siesta.gridsilesiesta method)": [[182, "sisl.io.siesta.gridSileSiesta.to_json"]], "write() (sisl.io.siesta.gridsilesiesta method)": [[182, "sisl.io.siesta.gridSileSiesta.write"]], "__init__() (sisl.io.siesta.gridncsilesiesta method)": [[183, "sisl.io.siesta.gridncSileSiesta.__init__"]], "base_file (sisl.io.siesta.gridncsilesiesta property)": [[183, "sisl.io.siesta.gridncSileSiesta.base_file"]], "close() (sisl.io.siesta.gridncsilesiesta method)": [[183, "sisl.io.siesta.gridncSileSiesta.close"]], "dir_file() (sisl.io.siesta.gridncsilesiesta method)": [[183, "sisl.io.siesta.gridncSileSiesta.dir_file"]], "file (sisl.io.siesta.gridncsilesiesta property)": [[183, "sisl.io.siesta.gridncSileSiesta.file"]], "gridncsilesiesta (class in sisl.io.siesta)": [[183, "sisl.io.siesta.gridncSileSiesta"]], "iter() (sisl.io.siesta.gridncsilesiesta method)": [[183, "sisl.io.siesta.gridncSileSiesta.iter"]], "plot (sisl.io.siesta.gridncsilesiesta attribute)": [[183, "sisl.io.siesta.gridncSileSiesta.plot"]], "read() (sisl.io.siesta.gridncsilesiesta method)": [[183, "sisl.io.siesta.gridncSileSiesta.read"]], "read_grid() (sisl.io.siesta.gridncsilesiesta method)": [[183, "sisl.io.siesta.gridncSileSiesta.read_grid"]], "read_supercell() (sisl.io.siesta.gridncsilesiesta method)": [[183, "sisl.io.siesta.gridncSileSiesta.read_supercell"]], "to_json() (sisl.io.siesta.gridncsilesiesta method)": [[183, "sisl.io.siesta.gridncSileSiesta.to_json"]], "write() (sisl.io.siesta.gridncsilesiesta method)": [[183, "sisl.io.siesta.gridncSileSiesta.write"]], "write_grid() (sisl.io.siesta.gridncsilesiesta method)": [[183, "sisl.io.siesta.gridncSileSiesta.write_grid"]], "write_supercell() (sisl.io.siesta.gridncsilesiesta method)": [[183, "sisl.io.siesta.gridncSileSiesta.write_supercell"]], "__init__() (sisl.io.siesta.hsxsilesiesta method)": [[184, "sisl.io.siesta.hsxSileSiesta.__init__"]], "base_file (sisl.io.siesta.hsxsilesiesta property)": [[184, "sisl.io.siesta.hsxSileSiesta.base_file"]], "dir_file() (sisl.io.siesta.hsxsilesiesta method)": [[184, "sisl.io.siesta.hsxSileSiesta.dir_file"]], "file (sisl.io.siesta.hsxsilesiesta property)": [[184, "sisl.io.siesta.hsxSileSiesta.file"]], "hsxsilesiesta (class in sisl.io.siesta)": [[184, "sisl.io.siesta.hsxSileSiesta"]], "plot (sisl.io.siesta.hsxsilesiesta attribute)": [[184, "sisl.io.siesta.hsxSileSiesta.plot"]], "read() (sisl.io.siesta.hsxsilesiesta method)": [[184, "sisl.io.siesta.hsxSileSiesta.read"]], "read_fermi_level() (sisl.io.siesta.hsxsilesiesta method)": [[184, "sisl.io.siesta.hsxSileSiesta.read_fermi_level"]], "read_geometry() (sisl.io.siesta.hsxsilesiesta method)": [[184, "sisl.io.siesta.hsxSileSiesta.read_geometry"]], "read_hamiltonian() (sisl.io.siesta.hsxsilesiesta method)": [[184, "sisl.io.siesta.hsxSileSiesta.read_hamiltonian"]], "read_overlap() (sisl.io.siesta.hsxsilesiesta method)": [[184, "sisl.io.siesta.hsxSileSiesta.read_overlap"]], "to_json() (sisl.io.siesta.hsxsilesiesta method)": [[184, "sisl.io.siesta.hsxSileSiesta.to_json"]], "version (sisl.io.siesta.hsxsilesiesta property)": [[184, "sisl.io.siesta.hsxSileSiesta.version"]], "write() (sisl.io.siesta.hsxsilesiesta method)": [[184, "sisl.io.siesta.hsxSileSiesta.write"]], "__init__() (sisl.io.siesta.ionncsilesiesta method)": [[185, "sisl.io.siesta.ionncSileSiesta.__init__"]], "base_file (sisl.io.siesta.ionncsilesiesta property)": [[185, "sisl.io.siesta.ionncSileSiesta.base_file"]], "close() (sisl.io.siesta.ionncsilesiesta method)": [[185, "sisl.io.siesta.ionncSileSiesta.close"]], "dir_file() (sisl.io.siesta.ionncsilesiesta method)": [[185, "sisl.io.siesta.ionncSileSiesta.dir_file"]], "file (sisl.io.siesta.ionncsilesiesta property)": [[185, "sisl.io.siesta.ionncSileSiesta.file"]], "ionncsilesiesta (class in sisl.io.siesta)": [[185, "sisl.io.siesta.ionncSileSiesta"]], "iter() (sisl.io.siesta.ionncsilesiesta method)": [[185, "sisl.io.siesta.ionncSileSiesta.iter"]], "read() (sisl.io.siesta.ionncsilesiesta method)": [[185, "sisl.io.siesta.ionncSileSiesta.read"]], "read_basis() (sisl.io.siesta.ionncsilesiesta method)": [[185, "sisl.io.siesta.ionncSileSiesta.read_basis"]], "to_json() (sisl.io.siesta.ionncsilesiesta method)": [[185, "sisl.io.siesta.ionncSileSiesta.to_json"]], "write() (sisl.io.siesta.ionncsilesiesta method)": [[185, "sisl.io.siesta.ionncSileSiesta.write"]], "__init__() (sisl.io.siesta.ionxmlsilesiesta method)": [[186, "sisl.io.siesta.ionxmlSileSiesta.__init__"]], "base_file (sisl.io.siesta.ionxmlsilesiesta property)": [[186, "sisl.io.siesta.ionxmlSileSiesta.base_file"]], "close() (sisl.io.siesta.ionxmlsilesiesta method)": [[186, "sisl.io.siesta.ionxmlSileSiesta.close"]], "dir_file() (sisl.io.siesta.ionxmlsilesiesta method)": [[186, "sisl.io.siesta.ionxmlSileSiesta.dir_file"]], "file (sisl.io.siesta.ionxmlsilesiesta property)": [[186, "sisl.io.siesta.ionxmlSileSiesta.file"]], "ionxmlsilesiesta (class in sisl.io.siesta)": [[186, "sisl.io.siesta.ionxmlSileSiesta"]], "read() (sisl.io.siesta.ionxmlsilesiesta method)": [[186, "sisl.io.siesta.ionxmlSileSiesta.read"]], "read_basis() (sisl.io.siesta.ionxmlsilesiesta method)": [[186, "sisl.io.siesta.ionxmlSileSiesta.read_basis"]], "to_json() (sisl.io.siesta.ionxmlsilesiesta method)": [[186, "sisl.io.siesta.ionxmlSileSiesta.to_json"]], "write() (sisl.io.siesta.ionxmlsilesiesta method)": [[186, "sisl.io.siesta.ionxmlSileSiesta.write"]], "__init__() (sisl.io.siesta.kpsilesiesta method)": [[187, "sisl.io.siesta.kpSileSiesta.__init__"]], "base_file (sisl.io.siesta.kpsilesiesta property)": [[187, "sisl.io.siesta.kpSileSiesta.base_file"]], "close() (sisl.io.siesta.kpsilesiesta method)": [[187, "sisl.io.siesta.kpSileSiesta.close"]], "dir_file() (sisl.io.siesta.kpsilesiesta method)": [[187, "sisl.io.siesta.kpSileSiesta.dir_file"]], "file (sisl.io.siesta.kpsilesiesta property)": [[187, "sisl.io.siesta.kpSileSiesta.file"]], "kpsilesiesta (class in sisl.io.siesta)": [[187, "sisl.io.siesta.kpSileSiesta"]], "read() (sisl.io.siesta.kpsilesiesta method)": [[187, "sisl.io.siesta.kpSileSiesta.read"]], "read_brillouinzone() (sisl.io.siesta.kpsilesiesta method)": [[187, "sisl.io.siesta.kpSileSiesta.read_brillouinzone"]], "read_data() (sisl.io.siesta.kpsilesiesta method)": [[187, "sisl.io.siesta.kpSileSiesta.read_data"]], "to_json() (sisl.io.siesta.kpsilesiesta method)": [[187, "sisl.io.siesta.kpSileSiesta.to_json"]], "write() (sisl.io.siesta.kpsilesiesta method)": [[187, "sisl.io.siesta.kpSileSiesta.write"]], "write_brillouinzone() (sisl.io.siesta.kpsilesiesta method)": [[187, "sisl.io.siesta.kpSileSiesta.write_brillouinzone"]], "write_data() (sisl.io.siesta.kpsilesiesta method)": [[187, "sisl.io.siesta.kpSileSiesta.write_data"]], "__init__() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.__init__"]], "base_file (sisl.io.siesta.ncsilesiesta property)": [[188, "sisl.io.siesta.ncSileSiesta.base_file"]], "close() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.close"]], "dir_file() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.dir_file"]], "file (sisl.io.siesta.ncsilesiesta property)": [[188, "sisl.io.siesta.ncSileSiesta.file"]], "grids (sisl.io.siesta.ncsilesiesta property)": [[188, "sisl.io.siesta.ncSileSiesta.grids"]], "iter() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.iter"]], "ncsilesiesta (class in sisl.io.siesta)": [[188, "sisl.io.siesta.ncSileSiesta"]], "plot (sisl.io.siesta.ncsilesiesta attribute)": [[188, "sisl.io.siesta.ncSileSiesta.plot"]], "read() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.read"]], "read_basis() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.read_basis"]], "read_density_matrix() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.read_density_matrix"]], "read_dynamical_matrix() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.read_dynamical_matrix"]], "read_energy_density_matrix() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.read_energy_density_matrix"]], "read_fermi_level() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.read_fermi_level"]], "read_force() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.read_force"]], "read_force_constant() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.read_force_constant"]], "read_geometry() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.read_geometry"]], "read_grid() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.read_grid"]], "read_hamiltonian() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.read_hamiltonian"]], "read_overlap() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.read_overlap"]], "read_supercell() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.read_supercell"]], "read_supercell_nsc() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.read_supercell_nsc"]], "to_json() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.to_json"]], "write() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.write"]], "write_basis() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.write_basis"]], "write_density_matrix() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.write_density_matrix"]], "write_dynamical_matrix() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.write_dynamical_matrix"]], "write_energy_density_matrix() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.write_energy_density_matrix"]], "write_geometry() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.write_geometry"]], "write_hamiltonian() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.write_hamiltonian"]], "write_overlap() (sisl.io.siesta.ncsilesiesta method)": [[188, "sisl.io.siesta.ncSileSiesta.write_overlap"]], "__init__() (sisl.io.siesta.onlyssilesiesta method)": [[189, "sisl.io.siesta.onlysSileSiesta.__init__"]], "base_file (sisl.io.siesta.onlyssilesiesta property)": [[189, "sisl.io.siesta.onlysSileSiesta.base_file"]], "dir_file() (sisl.io.siesta.onlyssilesiesta method)": [[189, "sisl.io.siesta.onlysSileSiesta.dir_file"]], "file (sisl.io.siesta.onlyssilesiesta property)": [[189, "sisl.io.siesta.onlysSileSiesta.file"]], "onlyssilesiesta (class in sisl.io.siesta)": [[189, "sisl.io.siesta.onlysSileSiesta"]], "plot (sisl.io.siesta.onlyssilesiesta attribute)": [[189, "sisl.io.siesta.onlysSileSiesta.plot"]], "read() (sisl.io.siesta.onlyssilesiesta method)": [[189, "sisl.io.siesta.onlysSileSiesta.read"]], "read_fermi_level() (sisl.io.siesta.onlyssilesiesta method)": [[189, "sisl.io.siesta.onlysSileSiesta.read_fermi_level"]], "read_geometry() (sisl.io.siesta.onlyssilesiesta method)": [[189, "sisl.io.siesta.onlysSileSiesta.read_geometry"]], "read_overlap() (sisl.io.siesta.onlyssilesiesta method)": [[189, "sisl.io.siesta.onlysSileSiesta.read_overlap"]], "read_supercell() (sisl.io.siesta.onlyssilesiesta method)": [[189, "sisl.io.siesta.onlysSileSiesta.read_supercell"]], "to_json() (sisl.io.siesta.onlyssilesiesta method)": [[189, "sisl.io.siesta.onlysSileSiesta.to_json"]], "version (sisl.io.siesta.onlyssilesiesta property)": [[189, "sisl.io.siesta.onlysSileSiesta.version"]], "write() (sisl.io.siesta.onlyssilesiesta method)": [[189, "sisl.io.siesta.onlysSileSiesta.write"]], "__init__() (sisl.io.siesta.orbindxsilesiesta method)": [[190, "sisl.io.siesta.orbindxSileSiesta.__init__"]], "base_file (sisl.io.siesta.orbindxsilesiesta property)": [[190, "sisl.io.siesta.orbindxSileSiesta.base_file"]], "close() (sisl.io.siesta.orbindxsilesiesta method)": [[190, "sisl.io.siesta.orbindxSileSiesta.close"]], "dir_file() (sisl.io.siesta.orbindxsilesiesta method)": [[190, "sisl.io.siesta.orbindxSileSiesta.dir_file"]], "file (sisl.io.siesta.orbindxsilesiesta property)": [[190, "sisl.io.siesta.orbindxSileSiesta.file"]], "orbindxsilesiesta (class in sisl.io.siesta)": [[190, "sisl.io.siesta.orbindxSileSiesta"]], "read() (sisl.io.siesta.orbindxsilesiesta method)": [[190, "sisl.io.siesta.orbindxSileSiesta.read"]], "read_basis() (sisl.io.siesta.orbindxsilesiesta method)": [[190, "sisl.io.siesta.orbindxSileSiesta.read_basis"]], "read_supercell_nsc() (sisl.io.siesta.orbindxsilesiesta method)": [[190, "sisl.io.siesta.orbindxSileSiesta.read_supercell_nsc"]], "to_json() (sisl.io.siesta.orbindxsilesiesta method)": [[190, "sisl.io.siesta.orbindxSileSiesta.to_json"]], "write() (sisl.io.siesta.orbindxsilesiesta method)": [[190, "sisl.io.siesta.orbindxSileSiesta.write"]], "__init__() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.__init__"]], "base_file (sisl.io.siesta.outsilesiesta property)": [[191, "sisl.io.siesta.outSileSiesta.base_file"]], "close() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.close"]], "completed() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.completed"]], "dir_file() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.dir_file"]], "file (sisl.io.siesta.outsilesiesta property)": [[191, "sisl.io.siesta.outSileSiesta.file"]], "outsilesiesta (class in sisl.io.siesta)": [[191, "sisl.io.siesta.outSileSiesta"]], "plot (sisl.io.siesta.outsilesiesta attribute)": [[191, "sisl.io.siesta.outSileSiesta.plot"]], "read() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.read"]], "read_basis() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.read_basis"]], "read_charge() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.read_charge"]], "read_data() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.read_data"]], "read_energy() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.read_energy"]], "read_force() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.read_force"]], "read_geometry() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.read_geometry"]], "read_moment() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.read_moment"]], "read_scf() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.read_scf"]], "read_stress() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.read_stress"]], "to_json() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.to_json"]], "write() (sisl.io.siesta.outsilesiesta method)": [[191, "sisl.io.siesta.outSileSiesta.write"]], "__init__() (sisl.io.siesta.pdossilesiesta method)": [[192, "sisl.io.siesta.pdosSileSiesta.__init__"]], "base_file (sisl.io.siesta.pdossilesiesta property)": [[192, "sisl.io.siesta.pdosSileSiesta.base_file"]], "close() (sisl.io.siesta.pdossilesiesta method)": [[192, "sisl.io.siesta.pdosSileSiesta.close"]], "dir_file() (sisl.io.siesta.pdossilesiesta method)": [[192, "sisl.io.siesta.pdosSileSiesta.dir_file"]], "file (sisl.io.siesta.pdossilesiesta property)": [[192, "sisl.io.siesta.pdosSileSiesta.file"]], "pdossilesiesta (class in sisl.io.siesta)": [[192, "sisl.io.siesta.pdosSileSiesta"]], "plot (sisl.io.siesta.pdossilesiesta attribute)": [[192, "sisl.io.siesta.pdosSileSiesta.plot"]], "read() (sisl.io.siesta.pdossilesiesta method)": [[192, "sisl.io.siesta.pdosSileSiesta.read"]], "read_data() (sisl.io.siesta.pdossilesiesta method)": [[192, "sisl.io.siesta.pdosSileSiesta.read_data"]], "read_fermi_level() (sisl.io.siesta.pdossilesiesta method)": [[192, "sisl.io.siesta.pdosSileSiesta.read_fermi_level"]], "read_geometry() (sisl.io.siesta.pdossilesiesta method)": [[192, "sisl.io.siesta.pdosSileSiesta.read_geometry"]], "to_json() (sisl.io.siesta.pdossilesiesta method)": [[192, "sisl.io.siesta.pdosSileSiesta.to_json"]], "write() (sisl.io.siesta.pdossilesiesta method)": [[192, "sisl.io.siesta.pdosSileSiesta.write"]], "__init__() (sisl.io.siesta.rkpsilesiesta method)": [[193, "sisl.io.siesta.rkpSileSiesta.__init__"]], "base_file (sisl.io.siesta.rkpsilesiesta property)": [[193, "sisl.io.siesta.rkpSileSiesta.base_file"]], "close() (sisl.io.siesta.rkpsilesiesta method)": [[193, "sisl.io.siesta.rkpSileSiesta.close"]], "dir_file() (sisl.io.siesta.rkpsilesiesta method)": [[193, "sisl.io.siesta.rkpSileSiesta.dir_file"]], "file (sisl.io.siesta.rkpsilesiesta property)": [[193, "sisl.io.siesta.rkpSileSiesta.file"]], "read() (sisl.io.siesta.rkpsilesiesta method)": [[193, "sisl.io.siesta.rkpSileSiesta.read"]], "read_brillouinzone() (sisl.io.siesta.rkpsilesiesta method)": [[193, "sisl.io.siesta.rkpSileSiesta.read_brillouinzone"]], "read_data() (sisl.io.siesta.rkpsilesiesta method)": [[193, "sisl.io.siesta.rkpSileSiesta.read_data"]], "rkpsilesiesta (class in sisl.io.siesta)": [[193, "sisl.io.siesta.rkpSileSiesta"]], "to_json() (sisl.io.siesta.rkpsilesiesta method)": [[193, "sisl.io.siesta.rkpSileSiesta.to_json"]], "write() (sisl.io.siesta.rkpsilesiesta method)": [[193, "sisl.io.siesta.rkpSileSiesta.write"]], "write_brillouinzone() (sisl.io.siesta.rkpsilesiesta method)": [[193, "sisl.io.siesta.rkpSileSiesta.write_brillouinzone"]], "write_data() (sisl.io.siesta.rkpsilesiesta method)": [[193, "sisl.io.siesta.rkpSileSiesta.write_data"]], "__init__() (sisl.io.siesta.structsilesiesta method)": [[194, "sisl.io.siesta.structSileSiesta.__init__"]], "base_file (sisl.io.siesta.structsilesiesta property)": [[194, "sisl.io.siesta.structSileSiesta.base_file"]], "close() (sisl.io.siesta.structsilesiesta method)": [[194, "sisl.io.siesta.structSileSiesta.close"]], "dir_file() (sisl.io.siesta.structsilesiesta method)": [[194, "sisl.io.siesta.structSileSiesta.dir_file"]], "file (sisl.io.siesta.structsilesiesta property)": [[194, "sisl.io.siesta.structSileSiesta.file"]], "plot (sisl.io.siesta.structsilesiesta attribute)": [[194, "sisl.io.siesta.structSileSiesta.plot"]], "read() (sisl.io.siesta.structsilesiesta method)": [[194, "sisl.io.siesta.structSileSiesta.read"]], "read_geometry() (sisl.io.siesta.structsilesiesta method)": [[194, "sisl.io.siesta.structSileSiesta.read_geometry"]], "read_supercell() (sisl.io.siesta.structsilesiesta method)": [[194, "sisl.io.siesta.structSileSiesta.read_supercell"]], "structsilesiesta (class in sisl.io.siesta)": [[194, "sisl.io.siesta.structSileSiesta"]], "to_json() (sisl.io.siesta.structsilesiesta method)": [[194, "sisl.io.siesta.structSileSiesta.to_json"]], "write() (sisl.io.siesta.structsilesiesta method)": [[194, "sisl.io.siesta.structSileSiesta.write"]], "write_geometry() (sisl.io.siesta.structsilesiesta method)": [[194, "sisl.io.siesta.structSileSiesta.write_geometry"]], "__init__() (sisl.io.siesta.tsdesilesiesta method)": [[195, "sisl.io.siesta.tsdeSileSiesta.__init__"]], "base_file (sisl.io.siesta.tsdesilesiesta property)": [[195, "sisl.io.siesta.tsdeSileSiesta.base_file"]], "dir_file() (sisl.io.siesta.tsdesilesiesta method)": [[195, "sisl.io.siesta.tsdeSileSiesta.dir_file"]], "file (sisl.io.siesta.tsdesilesiesta property)": [[195, "sisl.io.siesta.tsdeSileSiesta.file"]], "read() (sisl.io.siesta.tsdesilesiesta method)": [[195, "sisl.io.siesta.tsdeSileSiesta.read"]], "read_density_matrix() (sisl.io.siesta.tsdesilesiesta method)": [[195, "sisl.io.siesta.tsdeSileSiesta.read_density_matrix"]], "read_energy_density_matrix() (sisl.io.siesta.tsdesilesiesta method)": [[195, "sisl.io.siesta.tsdeSileSiesta.read_energy_density_matrix"]], "read_fermi_level() (sisl.io.siesta.tsdesilesiesta method)": [[195, "sisl.io.siesta.tsdeSileSiesta.read_fermi_level"]], "to_json() (sisl.io.siesta.tsdesilesiesta method)": [[195, "sisl.io.siesta.tsdeSileSiesta.to_json"]], "tsdesilesiesta (class in sisl.io.siesta)": [[195, "sisl.io.siesta.tsdeSileSiesta"]], "write() (sisl.io.siesta.tsdesilesiesta method)": [[195, "sisl.io.siesta.tsdeSileSiesta.write"]], "write_density_matrices() (sisl.io.siesta.tsdesilesiesta method)": [[195, "sisl.io.siesta.tsdeSileSiesta.write_density_matrices"]], "write_density_matrix() (sisl.io.siesta.tsdesilesiesta method)": [[195, "sisl.io.siesta.tsdeSileSiesta.write_density_matrix"]], "eindex() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.Eindex"]], "hksk() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.HkSk"]], "__init__() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.__init__"]], "base_file (sisl.io.siesta.tsgfsilesiesta property)": [[196, "sisl.io.siesta.tsgfSileSiesta.base_file"]], "dir_file() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.dir_file"]], "disk_usage() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.disk_usage"]], "file (sisl.io.siesta.tsgfsilesiesta property)": [[196, "sisl.io.siesta.tsgfSileSiesta.file"]], "kindex() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.kindex"]], "plot (sisl.io.siesta.tsgfsilesiesta attribute)": [[196, "sisl.io.siesta.tsgfSileSiesta.plot"]], "read() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.read"]], "read_hamiltonian() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.read_hamiltonian"]], "read_header() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.read_header"]], "read_self_energy() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.read_self_energy"]], "self_energy() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.self_energy"]], "to_json() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.to_json"]], "tsgfsilesiesta (class in sisl.io.siesta)": [[196, "sisl.io.siesta.tsgfSileSiesta"]], "write() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.write"]], "write_hamiltonian() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.write_hamiltonian"]], "write_header() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.write_header"]], "write_self_energy() (sisl.io.siesta.tsgfsilesiesta method)": [[196, "sisl.io.siesta.tsgfSileSiesta.write_self_energy"]], "__init__() (sisl.io.siesta.tshssilesiesta method)": [[197, "sisl.io.siesta.tshsSileSiesta.__init__"]], "base_file (sisl.io.siesta.tshssilesiesta property)": [[197, "sisl.io.siesta.tshsSileSiesta.base_file"]], "dir_file() (sisl.io.siesta.tshssilesiesta method)": [[197, "sisl.io.siesta.tshsSileSiesta.dir_file"]], "file (sisl.io.siesta.tshssilesiesta property)": [[197, "sisl.io.siesta.tshsSileSiesta.file"]], "plot (sisl.io.siesta.tshssilesiesta attribute)": [[197, "sisl.io.siesta.tshsSileSiesta.plot"]], "read() (sisl.io.siesta.tshssilesiesta method)": [[197, "sisl.io.siesta.tshsSileSiesta.read"]], "read_fermi_level() (sisl.io.siesta.tshssilesiesta method)": [[197, "sisl.io.siesta.tshsSileSiesta.read_fermi_level"]], "read_geometry() (sisl.io.siesta.tshssilesiesta method)": [[197, "sisl.io.siesta.tshsSileSiesta.read_geometry"]], "read_hamiltonian() (sisl.io.siesta.tshssilesiesta method)": [[197, "sisl.io.siesta.tshsSileSiesta.read_hamiltonian"]], "read_overlap() (sisl.io.siesta.tshssilesiesta method)": [[197, "sisl.io.siesta.tshsSileSiesta.read_overlap"]], "read_supercell() (sisl.io.siesta.tshssilesiesta method)": [[197, "sisl.io.siesta.tshsSileSiesta.read_supercell"]], "to_json() (sisl.io.siesta.tshssilesiesta method)": [[197, "sisl.io.siesta.tshsSileSiesta.to_json"]], "tshssilesiesta (class in sisl.io.siesta)": [[197, "sisl.io.siesta.tshsSileSiesta"]], "version (sisl.io.siesta.tshssilesiesta property)": [[197, "sisl.io.siesta.tshsSileSiesta.version"]], "write() (sisl.io.siesta.tshssilesiesta method)": [[197, "sisl.io.siesta.tshsSileSiesta.write"]], "write_hamiltonian() (sisl.io.siesta.tshssilesiesta method)": [[197, "sisl.io.siesta.tshsSileSiesta.write_hamiltonian"]], "__init__() (sisl.io.siesta.tsvncsilesiesta method)": [[198, "sisl.io.siesta.tsvncSileSiesta.__init__"]], "base_file (sisl.io.siesta.tsvncsilesiesta property)": [[198, "sisl.io.siesta.tsvncSileSiesta.base_file"]], "close() (sisl.io.siesta.tsvncsilesiesta method)": [[198, "sisl.io.siesta.tsvncSileSiesta.close"]], "dir_file() (sisl.io.siesta.tsvncsilesiesta method)": [[198, "sisl.io.siesta.tsvncSileSiesta.dir_file"]], "file (sisl.io.siesta.tsvncsilesiesta property)": [[198, "sisl.io.siesta.tsvncSileSiesta.file"]], "iter() (sisl.io.siesta.tsvncsilesiesta method)": [[198, "sisl.io.siesta.tsvncSileSiesta.iter"]], "plot (sisl.io.siesta.tsvncsilesiesta attribute)": [[198, "sisl.io.siesta.tsvncSileSiesta.plot"]], "read() (sisl.io.siesta.tsvncsilesiesta method)": [[198, "sisl.io.siesta.tsvncSileSiesta.read"]], "read_grid() (sisl.io.siesta.tsvncsilesiesta method)": [[198, "sisl.io.siesta.tsvncSileSiesta.read_grid"]], "read_supercell() (sisl.io.siesta.tsvncsilesiesta method)": [[198, "sisl.io.siesta.tsvncSileSiesta.read_supercell"]], "to_json() (sisl.io.siesta.tsvncsilesiesta method)": [[198, "sisl.io.siesta.tsvncSileSiesta.to_json"]], "tsvncsilesiesta (class in sisl.io.siesta)": [[198, "sisl.io.siesta.tsvncSileSiesta"]], "write() (sisl.io.siesta.tsvncsilesiesta method)": [[198, "sisl.io.siesta.tsvncSileSiesta.write"]], "write_grid() (sisl.io.siesta.tsvncsilesiesta method)": [[198, "sisl.io.siesta.tsvncSileSiesta.write_grid"]], "write_supercell() (sisl.io.siesta.tsvncsilesiesta method)": [[198, "sisl.io.siesta.tsvncSileSiesta.write_supercell"]], "__init__() (sisl.io.siesta.wfsxsilesiesta method)": [[199, "sisl.io.siesta.wfsxSileSiesta.__init__"]], "base_file (sisl.io.siesta.wfsxsilesiesta property)": [[199, "sisl.io.siesta.wfsxSileSiesta.base_file"]], "dir_file() (sisl.io.siesta.wfsxsilesiesta method)": [[199, "sisl.io.siesta.wfsxSileSiesta.dir_file"]], "file (sisl.io.siesta.wfsxsilesiesta property)": [[199, "sisl.io.siesta.wfsxSileSiesta.file"]], "read() (sisl.io.siesta.wfsxsilesiesta method)": [[199, "sisl.io.siesta.wfsxSileSiesta.read"]], "read_basis() (sisl.io.siesta.wfsxsilesiesta method)": [[199, "sisl.io.siesta.wfsxSileSiesta.read_basis"]], "read_brillouinzone() (sisl.io.siesta.wfsxsilesiesta method)": [[199, "sisl.io.siesta.wfsxSileSiesta.read_brillouinzone"]], "read_eigenstate() (sisl.io.siesta.wfsxsilesiesta method)": [[199, "sisl.io.siesta.wfsxSileSiesta.read_eigenstate"]], "read_info() (sisl.io.siesta.wfsxsilesiesta method)": [[199, "sisl.io.siesta.wfsxSileSiesta.read_info"]], "read_sizes() (sisl.io.siesta.wfsxsilesiesta method)": [[199, "sisl.io.siesta.wfsxSileSiesta.read_sizes"]], "to_json() (sisl.io.siesta.wfsxsilesiesta method)": [[199, "sisl.io.siesta.wfsxSileSiesta.to_json"]], "wfsxsilesiesta (class in sisl.io.siesta)": [[199, "sisl.io.siesta.wfsxSileSiesta"]], "write() (sisl.io.siesta.wfsxsilesiesta method)": [[199, "sisl.io.siesta.wfsxSileSiesta.write"]], "yield_eigenstate() (sisl.io.siesta.wfsxsilesiesta method)": [[199, "sisl.io.siesta.wfsxSileSiesta.yield_eigenstate"]], "__init__() (sisl.io.siesta.xvsilesiesta method)": [[200, "sisl.io.siesta.xvSileSiesta.__init__"]], "base_file (sisl.io.siesta.xvsilesiesta property)": [[200, "sisl.io.siesta.xvSileSiesta.base_file"]], "close() (sisl.io.siesta.xvsilesiesta method)": [[200, "sisl.io.siesta.xvSileSiesta.close"]], "dir_file() (sisl.io.siesta.xvsilesiesta method)": [[200, "sisl.io.siesta.xvSileSiesta.dir_file"]], "file (sisl.io.siesta.xvsilesiesta property)": [[200, "sisl.io.siesta.xvSileSiesta.file"]], "plot (sisl.io.siesta.xvsilesiesta attribute)": [[200, "sisl.io.siesta.xvSileSiesta.plot"]], "read() (sisl.io.siesta.xvsilesiesta method)": [[200, "sisl.io.siesta.xvSileSiesta.read"]], "read_data() (sisl.io.siesta.xvsilesiesta method)": [[200, "sisl.io.siesta.xvSileSiesta.read_data"]], "read_geometry() (sisl.io.siesta.xvsilesiesta method)": [[200, "sisl.io.siesta.xvSileSiesta.read_geometry"]], "read_supercell() (sisl.io.siesta.xvsilesiesta method)": [[200, "sisl.io.siesta.xvSileSiesta.read_supercell"]], "read_velocity() (sisl.io.siesta.xvsilesiesta method)": [[200, "sisl.io.siesta.xvSileSiesta.read_velocity"]], "to_json() (sisl.io.siesta.xvsilesiesta method)": [[200, "sisl.io.siesta.xvSileSiesta.to_json"]], "write() (sisl.io.siesta.xvsilesiesta method)": [[200, "sisl.io.siesta.xvSileSiesta.write"]], "write_geometry() (sisl.io.siesta.xvsilesiesta method)": [[200, "sisl.io.siesta.xvSileSiesta.write_geometry"]], "xvsilesiesta (class in sisl.io.siesta)": [[200, "sisl.io.siesta.xvSileSiesta"]], "__init__() (sisl.io.tablesile method)": [[201, "sisl.io.tableSile.__init__"]], "base_file (sisl.io.tablesile property)": [[201, "sisl.io.tableSile.base_file"]], "close() (sisl.io.tablesile method)": [[201, "sisl.io.tableSile.close"]], "dir_file() (sisl.io.tablesile method)": [[201, "sisl.io.tableSile.dir_file"]], "file (sisl.io.tablesile property)": [[201, "sisl.io.tableSile.file"]], "read() (sisl.io.tablesile method)": [[201, "sisl.io.tableSile.read"]], "read_data() (sisl.io.tablesile method)": [[201, "sisl.io.tableSile.read_data"]], "tablesile (class in sisl.io)": [[201, "sisl.io.tableSile"]], "to_json() (sisl.io.tablesile method)": [[201, "sisl.io.tableSile.to_json"]], "write() (sisl.io.tablesile method)": [[201, "sisl.io.tableSile.write"]], "write_data() (sisl.io.tablesile method)": [[201, "sisl.io.tableSile.write_data"]], "silebintbtrans (class in sisl.io.tbtrans)": [[202, "sisl.io.tbtrans.SileBinTBtrans"]], "__init__() (sisl.io.tbtrans.silebintbtrans method)": [[202, "sisl.io.tbtrans.SileBinTBtrans.__init__"]], "base_file (sisl.io.tbtrans.silebintbtrans property)": [[202, "sisl.io.tbtrans.SileBinTBtrans.base_file"]], "dir_file() (sisl.io.tbtrans.silebintbtrans method)": [[202, "sisl.io.tbtrans.SileBinTBtrans.dir_file"]], "file (sisl.io.tbtrans.silebintbtrans property)": [[202, "sisl.io.tbtrans.SileBinTBtrans.file"]], "read() (sisl.io.tbtrans.silebintbtrans method)": [[202, "sisl.io.tbtrans.SileBinTBtrans.read"]], "to_json() (sisl.io.tbtrans.silebintbtrans method)": [[202, "sisl.io.tbtrans.SileBinTBtrans.to_json"]], "write() (sisl.io.tbtrans.silebintbtrans method)": [[202, "sisl.io.tbtrans.SileBinTBtrans.write"]], "silecdftbtrans (class in sisl.io.tbtrans)": [[203, "sisl.io.tbtrans.SileCDFTBtrans"]], "__init__() (sisl.io.tbtrans.silecdftbtrans method)": [[203, "sisl.io.tbtrans.SileCDFTBtrans.__init__"]], "base_file (sisl.io.tbtrans.silecdftbtrans property)": [[203, "sisl.io.tbtrans.SileCDFTBtrans.base_file"]], "close() (sisl.io.tbtrans.silecdftbtrans method)": [[203, "sisl.io.tbtrans.SileCDFTBtrans.close"]], "dir_file() (sisl.io.tbtrans.silecdftbtrans method)": [[203, "sisl.io.tbtrans.SileCDFTBtrans.dir_file"]], "file (sisl.io.tbtrans.silecdftbtrans property)": [[203, "sisl.io.tbtrans.SileCDFTBtrans.file"]], "iter() (sisl.io.tbtrans.silecdftbtrans method)": [[203, "sisl.io.tbtrans.SileCDFTBtrans.iter"]], "read() (sisl.io.tbtrans.silecdftbtrans method)": [[203, "sisl.io.tbtrans.SileCDFTBtrans.read"]], "to_json() (sisl.io.tbtrans.silecdftbtrans method)": [[203, "sisl.io.tbtrans.SileCDFTBtrans.to_json"]], "write() (sisl.io.tbtrans.silecdftbtrans method)": [[203, "sisl.io.tbtrans.SileCDFTBtrans.write"]], "siletbtrans (class in sisl.io.tbtrans)": [[204, "sisl.io.tbtrans.SileTBtrans"]], "__init__() (sisl.io.tbtrans.siletbtrans method)": [[204, "sisl.io.tbtrans.SileTBtrans.__init__"]], "base_file (sisl.io.tbtrans.siletbtrans property)": [[204, "sisl.io.tbtrans.SileTBtrans.base_file"]], "close() (sisl.io.tbtrans.siletbtrans method)": [[204, "sisl.io.tbtrans.SileTBtrans.close"]], "dir_file() (sisl.io.tbtrans.siletbtrans method)": [[204, "sisl.io.tbtrans.SileTBtrans.dir_file"]], "file (sisl.io.tbtrans.siletbtrans property)": [[204, "sisl.io.tbtrans.SileTBtrans.file"]], "read() (sisl.io.tbtrans.siletbtrans method)": [[204, "sisl.io.tbtrans.SileTBtrans.read"]], "to_json() (sisl.io.tbtrans.siletbtrans method)": [[204, "sisl.io.tbtrans.SileTBtrans.to_json"]], "write() (sisl.io.tbtrans.siletbtrans method)": [[204, "sisl.io.tbtrans.SileTBtrans.write"]], "__init__() (sisl.io.tbtrans.deltancsiletbtrans method)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.__init__"]], "base_file (sisl.io.tbtrans.deltancsiletbtrans property)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.base_file"]], "close() (sisl.io.tbtrans.deltancsiletbtrans method)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.close"]], "deltancsiletbtrans (class in sisl.io.tbtrans)": [[205, "sisl.io.tbtrans.deltancSileTBtrans"]], "dir_file() (sisl.io.tbtrans.deltancsiletbtrans method)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.dir_file"]], "file (sisl.io.tbtrans.deltancsiletbtrans property)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.file"]], "has_level() (sisl.io.tbtrans.deltancsiletbtrans method)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.has_level"]], "iter() (sisl.io.tbtrans.deltancsiletbtrans method)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.iter"]], "merge() (sisl.io.tbtrans.deltancsiletbtrans class method)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.merge"]], "plot (sisl.io.tbtrans.deltancsiletbtrans attribute)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.plot"]], "read() (sisl.io.tbtrans.deltancsiletbtrans method)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.read"]], "read_delta() (sisl.io.tbtrans.deltancsiletbtrans method)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.read_delta"]], "read_geometry() (sisl.io.tbtrans.deltancsiletbtrans method)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.read_geometry"]], "read_supercell() (sisl.io.tbtrans.deltancsiletbtrans method)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.read_supercell"]], "to_json() (sisl.io.tbtrans.deltancsiletbtrans method)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.to_json"]], "write() (sisl.io.tbtrans.deltancsiletbtrans method)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.write"]], "write_delta() (sisl.io.tbtrans.deltancsiletbtrans method)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.write_delta"]], "write_geometry() (sisl.io.tbtrans.deltancsiletbtrans method)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.write_geometry"]], "write_supercell() (sisl.io.tbtrans.deltancsiletbtrans method)": [[205, "sisl.io.tbtrans.deltancSileTBtrans.write_supercell"]], "ados() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.ADOS"]], "adensity_matrix() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.Adensity_matrix"]], "bdos() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.BDOS"]], "dos() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.DOS"]], "e (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.E"]], "eindex() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.Eindex"]], "__init__() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.__init__"]], "a2p() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.a2p"]], "a_buf (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.a_buf"]], "a_dev (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.a_dev"]], "a_down() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.a_down"]], "a_elec() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.a_elec"]], "atom_acohp() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.atom_ACOHP"]], "atom_acoop() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.atom_ACOOP"]], "atom_cohp() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.atom_COHP"]], "atom_coop() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.atom_COOP"]], "atom_current() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.atom_current"]], "atom_transmission() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.atom_transmission"]], "base_file (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.base_file"]], "bloch() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.bloch"]], "bond_current() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.bond_current"]], "bond_transmission() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.bond_transmission"]], "btd() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.btd"]], "cell (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.cell"]], "chemical_potential (sisl.io.tbtrans.phtavncsilephtrans attribute)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.chemical_potential"]], "close() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.close"]], "current (sisl.io.tbtrans.phtavncsilephtrans attribute)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.current"]], "current_parameter (sisl.io.tbtrans.phtavncsilephtrans attribute)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.current_parameter"]], "density_matrix() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.density_matrix"]], "dir_file() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.dir_file"]], "elecs (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.elecs"]], "electron_temperature (sisl.io.tbtrans.phtavncsilephtrans attribute)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.electron_temperature"]], "eta() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.eta"]], "fano (sisl.io.tbtrans.phtavncsilephtrans attribute)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.fano"]], "file (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.file"]], "geom (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.geom"]], "geometry (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.geometry"]], "info() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.info"]], "iter() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.iter"]], "k (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.k"]], "kt (sisl.io.tbtrans.phtavncsilephtrans attribute)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.kT"]], "kindex() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.kindex"]], "kpt (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.kpt"]], "lasto (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.lasto"]], "mu() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.mu"]], "ne (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.nE"], [206, "sisl.io.tbtrans.phtavncSilePHtrans.ne"]], "n_btd() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.n_btd"]], "na (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.na"]], "na_b (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.na_b"]], "na_buffer (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.na_buffer"]], "na_d (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.na_d"]], "na_dev (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.na_dev"]], "na_down() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.na_down"]], "na_u (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.na_u"]], "nk (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.nk"]], "nkpt (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.nkpt"]], "no (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.no"]], "no_d (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.no_d"]], "no_down() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.no_down"]], "no_e() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.no_e"]], "no_u (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.no_u"]], "noise_power (sisl.io.tbtrans.phtavncsilephtrans attribute)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.noise_power"]], "norm() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.norm"]], "o2p() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.o2p"]], "o_dev (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.o_dev"]], "orbital_acohp() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.orbital_ACOHP"]], "orbital_acoop() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.orbital_ACOOP"]], "orbital_cohp() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.orbital_COHP"]], "orbital_coop() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.orbital_COOP"]], "orbital_current() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.orbital_current"]], "orbital_transmission() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.orbital_transmission"]], "phonon_temperature() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.phonon_temperature"]], "phtavncsilephtrans (class in sisl.io.tbtrans)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans"]], "pivot() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.pivot"]], "pivot_down() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.pivot_down"]], "plot (sisl.io.tbtrans.phtavncsilephtrans attribute)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.plot"]], "read() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.read"]], "read_data() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.read_data"]], "read_geometry() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.read_geometry"]], "read_supercell() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.read_supercell"]], "reflection() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.reflection"]], "shot_noise (sisl.io.tbtrans.phtavncsilephtrans attribute)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.shot_noise"]], "sparse_atom_to_vector() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.sparse_atom_to_vector"]], "sparse_orbital_to_atom() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.sparse_orbital_to_atom"]], "sparse_orbital_to_scalar() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.sparse_orbital_to_scalar"]], "sparse_orbital_to_vector() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.sparse_orbital_to_vector"]], "to_json() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.to_json"]], "transmission() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.transmission"]], "transmission_bulk() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.transmission_bulk"]], "transmission_eig() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.transmission_eig"]], "vector_current() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.vector_current"]], "vector_transmission() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.vector_transmission"]], "wk (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.wk"]], "wkpt (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.wkpt"]], "write() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.write"]], "write_tbtav() (sisl.io.tbtrans.phtavncsilephtrans method)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.write_tbtav"]], "xa (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.xa"]], "xyz (sisl.io.tbtrans.phtavncsilephtrans property)": [[206, "sisl.io.tbtrans.phtavncSilePHtrans.xyz"]], "ados() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.ADOS"]], "adensity_matrix() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.Adensity_matrix"]], "bdos() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.BDOS"]], "dos() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.DOS"]], "e (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.E"]], "eindex() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.Eindex"]], "__init__() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.__init__"]], "a2p() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.a2p"]], "a_buf (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.a_buf"]], "a_dev (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.a_dev"]], "a_down() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.a_down"]], "a_elec() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.a_elec"]], "atom_acohp() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.atom_ACOHP"]], "atom_acoop() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.atom_ACOOP"]], "atom_cohp() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.atom_COHP"]], "atom_coop() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.atom_COOP"]], "atom_current() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.atom_current"]], "atom_transmission() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.atom_transmission"]], "base_file (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.base_file"]], "bloch() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.bloch"]], "bond_current() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.bond_current"]], "bond_transmission() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.bond_transmission"]], "btd() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.btd"]], "cell (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.cell"]], "chemical_potential (sisl.io.tbtrans.phtncsilephtrans attribute)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.chemical_potential"]], "close() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.close"]], "current (sisl.io.tbtrans.phtncsilephtrans attribute)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.current"]], "current_parameter (sisl.io.tbtrans.phtncsilephtrans attribute)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.current_parameter"]], "density_matrix() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.density_matrix"]], "dir_file() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.dir_file"]], "elecs (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.elecs"]], "electron_temperature (sisl.io.tbtrans.phtncsilephtrans attribute)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.electron_temperature"]], "eta() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.eta"]], "fano() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.fano"]], "file (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.file"]], "geom (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.geom"]], "geometry (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.geometry"]], "info() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.info"]], "iter() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.iter"]], "k (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.k"]], "kt (sisl.io.tbtrans.phtncsilephtrans attribute)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.kT"]], "kindex() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.kindex"]], "kpt (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.kpt"]], "lasto (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.lasto"]], "mu() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.mu"]], "ne (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.nE"], [207, "sisl.io.tbtrans.phtncSilePHtrans.ne"]], "n_btd() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.n_btd"]], "na (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.na"]], "na_b (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.na_b"]], "na_buffer (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.na_buffer"]], "na_d (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.na_d"]], "na_dev (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.na_dev"]], "na_down() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.na_down"]], "na_u (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.na_u"]], "nk (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.nk"]], "nkpt (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.nkpt"]], "no (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.no"]], "no_d (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.no_d"]], "no_down() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.no_down"]], "no_e() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.no_e"]], "no_u (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.no_u"]], "noise_power (sisl.io.tbtrans.phtncsilephtrans attribute)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.noise_power"]], "norm() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.norm"]], "o2p() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.o2p"]], "o_dev (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.o_dev"]], "orbital_acohp() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.orbital_ACOHP"]], "orbital_acoop() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.orbital_ACOOP"]], "orbital_cohp() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.orbital_COHP"]], "orbital_coop() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.orbital_COOP"]], "orbital_current() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.orbital_current"]], "orbital_transmission() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.orbital_transmission"]], "phonon_temperature() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.phonon_temperature"]], "phtncsilephtrans (class in sisl.io.tbtrans)": [[207, "sisl.io.tbtrans.phtncSilePHtrans"]], "pivot() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.pivot"]], "pivot_down() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.pivot_down"]], "plot (sisl.io.tbtrans.phtncsilephtrans attribute)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.plot"]], "read() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.read"]], "read_data() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.read_data"]], "read_geometry() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.read_geometry"]], "read_supercell() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.read_supercell"]], "reflection() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.reflection"]], "shot_noise (sisl.io.tbtrans.phtncsilephtrans attribute)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.shot_noise"]], "sparse_atom_to_vector() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.sparse_atom_to_vector"]], "sparse_orbital_to_atom() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.sparse_orbital_to_atom"]], "sparse_orbital_to_scalar() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.sparse_orbital_to_scalar"]], "sparse_orbital_to_vector() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.sparse_orbital_to_vector"]], "to_json() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.to_json"]], "transmission() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.transmission"]], "transmission_bulk() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.transmission_bulk"]], "transmission_eig() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.transmission_eig"]], "vector_current() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.vector_current"]], "vector_transmission() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.vector_transmission"]], "wk (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.wk"]], "wkpt (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.wkpt"]], "write() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.write"]], "write_tbtav() (sisl.io.tbtrans.phtncsilephtrans method)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.write_tbtav"]], "xa (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.xa"]], "xyz (sisl.io.tbtrans.phtncsilephtrans property)": [[207, "sisl.io.tbtrans.phtncSilePHtrans.xyz"]], "ados() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.ADOS"]], "adensity_matrix() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.Adensity_matrix"]], "bdos() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.BDOS"]], "dos() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.DOS"]], "e (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.E"]], "eindex() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.Eindex"]], "__init__() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.__init__"]], "a2p() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.a2p"]], "a_buf (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.a_buf"]], "a_dev (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.a_dev"]], "a_down() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.a_down"]], "a_elec() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.a_elec"]], "atom_acohp() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.atom_ACOHP"]], "atom_acoop() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.atom_ACOOP"]], "atom_cohp (sisl.io.tbtrans.phtprojncsilephtrans attribute)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.atom_COHP"]], "atom_coop (sisl.io.tbtrans.phtprojncsilephtrans attribute)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.atom_COOP"]], "atom_current() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.atom_current"]], "atom_transmission() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.atom_transmission"]], "base_file (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.base_file"]], "bloch() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.bloch"]], "bond_current() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.bond_current"]], "bond_transmission() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.bond_transmission"]], "btd() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.btd"]], "cell (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.cell"]], "chemical_potential() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.chemical_potential"]], "close() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.close"]], "current (sisl.io.tbtrans.phtprojncsilephtrans attribute)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.current"]], "current_parameter (sisl.io.tbtrans.phtprojncsilephtrans attribute)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.current_parameter"]], "density_matrix (sisl.io.tbtrans.phtprojncsilephtrans attribute)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.density_matrix"]], "dir_file() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.dir_file"]], "eigenstate() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.eigenstate"]], "elecs (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.elecs"]], "electron_temperature() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.electron_temperature"]], "eta() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.eta"]], "fano (sisl.io.tbtrans.phtprojncsilephtrans attribute)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.fano"]], "file (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.file"]], "geom (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.geom"]], "geometry (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.geometry"]], "info() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.info"]], "iter() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.iter"]], "k (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.k"]], "kt() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.kT"]], "kindex() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.kindex"]], "kpt (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.kpt"]], "lasto (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.lasto"]], "molecules (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.molecules"]], "mu() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.mu"]], "ne (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.nE"], [208, "sisl.io.tbtrans.phtprojncSilePHtrans.ne"]], "n_btd() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.n_btd"]], "na (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.na"]], "na_b (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.na_b"]], "na_buffer (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.na_buffer"]], "na_d (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.na_d"]], "na_dev (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.na_dev"]], "na_down() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.na_down"]], "na_u (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.na_u"]], "nk (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.nk"]], "nkpt (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.nkpt"]], "no (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.no"]], "no_d (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.no_d"]], "no_down() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.no_down"]], "no_e() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.no_e"]], "no_u (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.no_u"]], "noise_power (sisl.io.tbtrans.phtprojncsilephtrans attribute)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.noise_power"]], "norm() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.norm"]], "o2p() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.o2p"]], "o_dev (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.o_dev"]], "orbital_acohp() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.orbital_ACOHP"]], "orbital_acoop() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.orbital_ACOOP"]], "orbital_cohp (sisl.io.tbtrans.phtprojncsilephtrans attribute)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.orbital_COHP"]], "orbital_coop (sisl.io.tbtrans.phtprojncsilephtrans attribute)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.orbital_COOP"]], "orbital_current() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.orbital_current"]], "orbital_transmission() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.orbital_transmission"]], "phtprojncsilephtrans (class in sisl.io.tbtrans)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans"]], "pivot() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.pivot"]], "pivot_down() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.pivot_down"]], "plot (sisl.io.tbtrans.phtprojncsilephtrans attribute)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.plot"]], "projections() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.projections"]], "read() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.read"]], "read_data() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.read_data"]], "read_geometry() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.read_geometry"]], "read_supercell() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.read_supercell"]], "reflection() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.reflection"]], "shot_noise (sisl.io.tbtrans.phtprojncsilephtrans attribute)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.shot_noise"]], "sparse_atom_to_vector() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.sparse_atom_to_vector"]], "sparse_orbital_to_atom() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.sparse_orbital_to_atom"]], "sparse_orbital_to_scalar() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.sparse_orbital_to_scalar"]], "sparse_orbital_to_vector() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.sparse_orbital_to_vector"]], "to_json() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.to_json"]], "transmission() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.transmission"]], "transmission_bulk() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.transmission_bulk"]], "transmission_eig() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.transmission_eig"]], "vector_current() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.vector_current"]], "vector_transmission() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.vector_transmission"]], "wk (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.wk"]], "wkpt (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.wkpt"]], "write() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.write"]], "write_tbtav() (sisl.io.tbtrans.phtprojncsilephtrans method)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.write_tbtav"]], "xa (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.xa"]], "xyz (sisl.io.tbtrans.phtprojncsilephtrans property)": [[208, "sisl.io.tbtrans.phtprojncSilePHtrans.xyz"]], "e (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.E"]], "eindex() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.Eindex"]], "__init__() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.__init__"]], "a2p() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.a2p"]], "a_buf (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.a_buf"]], "a_dev (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.a_dev"]], "a_down() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.a_down"]], "a_elec() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.a_elec"]], "base_file (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.base_file"]], "bloch() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.bloch"]], "broadening_matrix() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.broadening_matrix"]], "btd() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.btd"]], "cell (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.cell"]], "chemical_potential() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.chemical_potential"]], "close() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.close"]], "dir_file() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.dir_file"]], "elecs (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.elecs"]], "electron_temperature() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.electron_temperature"]], "eta() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.eta"]], "file (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.file"]], "geom (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.geom"]], "geometry (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.geometry"]], "info() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.info"]], "iter() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.iter"]], "k (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.k"]], "kt() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.kT"]], "kindex() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.kindex"]], "kpt (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.kpt"]], "lasto (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.lasto"]], "mu() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.mu"]], "ne (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.nE"], [209, "sisl.io.tbtrans.phtsencSilePHtrans.ne"]], "n_btd() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.n_btd"]], "na (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.na"]], "na_b (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.na_b"]], "na_buffer (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.na_buffer"]], "na_d (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.na_d"]], "na_dev (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.na_dev"]], "na_down() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.na_down"]], "na_u (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.na_u"]], "nk (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.nk"]], "nkpt (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.nkpt"]], "no (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.no"]], "no_d (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.no_d"]], "no_down() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.no_down"]], "no_e() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.no_e"]], "no_u (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.no_u"]], "o2p() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.o2p"]], "o_dev (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.o_dev"]], "phtsencsilephtrans (class in sisl.io.tbtrans)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans"]], "pivot() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.pivot"]], "pivot_down() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.pivot_down"]], "plot (sisl.io.tbtrans.phtsencsilephtrans attribute)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.plot"]], "read() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.read"]], "read_geometry() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.read_geometry"]], "read_supercell() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.read_supercell"]], "self_energy() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.self_energy"]], "self_energy_average() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.self_energy_average"]], "to_json() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.to_json"]], "wk (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.wk"]], "wkpt (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.wkpt"]], "write() (sisl.io.tbtrans.phtsencsilephtrans method)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.write"]], "xa (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.xa"]], "xyz (sisl.io.tbtrans.phtsencsilephtrans property)": [[209, "sisl.io.tbtrans.phtsencSilePHtrans.xyz"]], "ados() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.ADOS"]], "adensity_matrix() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.Adensity_matrix"]], "bdos() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.BDOS"]], "dos() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.DOS"]], "e (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.E"]], "eindex() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.Eindex"]], "__init__() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.__init__"]], "a2p() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.a2p"]], "a_buf (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.a_buf"]], "a_dev (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.a_dev"]], "a_down() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.a_down"]], "a_elec() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.a_elec"]], "atom_acohp() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.atom_ACOHP"]], "atom_acoop() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.atom_ACOOP"]], "atom_cohp() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.atom_COHP"]], "atom_coop() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.atom_COOP"]], "atom_current() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.atom_current"]], "atom_transmission() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.atom_transmission"]], "base_file (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.base_file"]], "bloch() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.bloch"]], "bond_current() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.bond_current"]], "bond_transmission() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.bond_transmission"]], "btd() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.btd"]], "cell (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.cell"]], "chemical_potential() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.chemical_potential"]], "close() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.close"]], "current() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.current"]], "current_parameter() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.current_parameter"]], "density_matrix() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.density_matrix"]], "dir_file() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.dir_file"]], "elecs (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.elecs"]], "electron_temperature() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.electron_temperature"]], "eta() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.eta"]], "fano (sisl.io.tbtrans.tbtavncsiletbtrans attribute)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.fano"]], "file (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.file"]], "geom (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.geom"]], "geometry (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.geometry"]], "info() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.info"]], "iter() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.iter"]], "k (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.k"]], "kt() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.kT"]], "kindex() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.kindex"]], "kpt (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.kpt"]], "lasto (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.lasto"]], "mu() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.mu"]], "ne (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.nE"], [210, "sisl.io.tbtrans.tbtavncSileTBtrans.ne"]], "n_btd() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.n_btd"]], "na (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.na"]], "na_b (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.na_b"]], "na_buffer (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.na_buffer"]], "na_d (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.na_d"]], "na_dev (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.na_dev"]], "na_down() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.na_down"]], "na_u (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.na_u"]], "nk (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.nk"]], "nkpt (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.nkpt"]], "no (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.no"]], "no_d (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.no_d"]], "no_down() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.no_down"]], "no_e() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.no_e"]], "no_u (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.no_u"]], "noise_power (sisl.io.tbtrans.tbtavncsiletbtrans attribute)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.noise_power"]], "norm() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.norm"]], "o2p() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.o2p"]], "o_dev (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.o_dev"]], "orbital_acohp() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.orbital_ACOHP"]], "orbital_acoop() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.orbital_ACOOP"]], "orbital_cohp() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.orbital_COHP"]], "orbital_coop() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.orbital_COOP"]], "orbital_current() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.orbital_current"]], "orbital_transmission() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.orbital_transmission"]], "pivot() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.pivot"]], "pivot_down() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.pivot_down"]], "plot (sisl.io.tbtrans.tbtavncsiletbtrans attribute)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.plot"]], "read() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.read"]], "read_data() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.read_data"]], "read_geometry() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.read_geometry"]], "read_supercell() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.read_supercell"]], "reflection() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.reflection"]], "shot_noise (sisl.io.tbtrans.tbtavncsiletbtrans attribute)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.shot_noise"]], "sparse_atom_to_vector() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.sparse_atom_to_vector"]], "sparse_orbital_to_atom() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.sparse_orbital_to_atom"]], "sparse_orbital_to_scalar() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.sparse_orbital_to_scalar"]], "sparse_orbital_to_vector() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.sparse_orbital_to_vector"]], "tbtavncsiletbtrans (class in sisl.io.tbtrans)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans"]], "to_json() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.to_json"]], "transmission() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.transmission"]], "transmission_bulk() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.transmission_bulk"]], "transmission_eig() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.transmission_eig"]], "vector_current() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.vector_current"]], "vector_transmission() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.vector_transmission"]], "wk (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.wk"]], "wkpt (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.wkpt"]], "write() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.write"]], "write_tbtav() (sisl.io.tbtrans.tbtavncsiletbtrans method)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.write_tbtav"]], "xa (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.xa"]], "xyz (sisl.io.tbtrans.tbtavncsiletbtrans property)": [[210, "sisl.io.tbtrans.tbtavncSileTBtrans.xyz"]], "eindex() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.Eindex"]], "hksk() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.HkSk"]], "__init__() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.__init__"]], "base_file (sisl.io.tbtrans.tbtgfsiletbtrans property)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.base_file"]], "dir_file() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.dir_file"]], "disk_usage() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.disk_usage"]], "file (sisl.io.tbtrans.tbtgfsiletbtrans property)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.file"]], "kindex() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.kindex"]], "plot (sisl.io.tbtrans.tbtgfsiletbtrans attribute)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.plot"]], "read() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.read"]], "read_hamiltonian() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.read_hamiltonian"]], "read_header() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.read_header"]], "read_self_energy() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.read_self_energy"]], "self_energy() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.self_energy"]], "tbtgfsiletbtrans (class in sisl.io.tbtrans)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans"]], "to_json() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.to_json"]], "write() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.write"]], "write_hamiltonian() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.write_hamiltonian"]], "write_header() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.write_header"]], "write_self_energy() (sisl.io.tbtrans.tbtgfsiletbtrans method)": [[211, "sisl.io.tbtrans.tbtgfSileTBtrans.write_self_energy"]], "ados() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.ADOS"]], "adensity_matrix() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.Adensity_matrix"]], "bdos() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.BDOS"]], "dos() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.DOS"]], "e (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.E"]], "eindex() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.Eindex"]], "__init__() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.__init__"]], "a2p() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.a2p"]], "a_buf (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.a_buf"]], "a_dev (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.a_dev"]], "a_down() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.a_down"]], "a_elec() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.a_elec"]], "atom_acohp() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.atom_ACOHP"]], "atom_acoop() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.atom_ACOOP"]], "atom_cohp() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.atom_COHP"]], "atom_coop() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.atom_COOP"]], "atom_current() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.atom_current"]], "atom_transmission() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.atom_transmission"]], "base_file (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.base_file"]], "bloch() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.bloch"]], "bond_current() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.bond_current"]], "bond_transmission() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.bond_transmission"]], "btd() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.btd"]], "cell (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.cell"]], "chemical_potential() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.chemical_potential"]], "close() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.close"]], "current() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.current"]], "current_parameter() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.current_parameter"]], "density_matrix() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.density_matrix"]], "dir_file() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.dir_file"]], "elecs (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.elecs"]], "electron_temperature() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.electron_temperature"]], "eta() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.eta"]], "fano() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.fano"]], "file (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.file"]], "geom (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.geom"]], "geometry (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.geometry"]], "info() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.info"]], "iter() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.iter"]], "k (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.k"]], "kt() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.kT"]], "kindex() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.kindex"]], "kpt (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.kpt"]], "lasto (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.lasto"]], "mu() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.mu"]], "ne (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.nE"], [212, "sisl.io.tbtrans.tbtncSileTBtrans.ne"]], "n_btd() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.n_btd"]], "na (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.na"]], "na_b (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.na_b"]], "na_buffer (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.na_buffer"]], "na_d (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.na_d"]], "na_dev (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.na_dev"]], "na_down() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.na_down"]], "na_u (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.na_u"]], "nk (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.nk"]], "nkpt (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.nkpt"]], "no (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.no"]], "no_d (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.no_d"]], "no_down() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.no_down"]], "no_e() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.no_e"]], "no_u (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.no_u"]], "noise_power() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.noise_power"]], "norm() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.norm"]], "o2p() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.o2p"]], "o_dev (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.o_dev"]], "orbital_acohp() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.orbital_ACOHP"]], "orbital_acoop() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.orbital_ACOOP"]], "orbital_cohp() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.orbital_COHP"]], "orbital_coop() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.orbital_COOP"]], "orbital_current() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.orbital_current"]], "orbital_transmission() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.orbital_transmission"]], "pivot() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.pivot"]], "pivot_down() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.pivot_down"]], "plot (sisl.io.tbtrans.tbtncsiletbtrans attribute)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.plot"]], "read() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.read"]], "read_data() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.read_data"]], "read_geometry() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.read_geometry"]], "read_supercell() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.read_supercell"]], "reflection() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.reflection"]], "shot_noise() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.shot_noise"]], "sparse_atom_to_vector() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.sparse_atom_to_vector"]], "sparse_orbital_to_atom() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.sparse_orbital_to_atom"]], "sparse_orbital_to_scalar() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.sparse_orbital_to_scalar"]], "sparse_orbital_to_vector() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.sparse_orbital_to_vector"]], "tbtncsiletbtrans (class in sisl.io.tbtrans)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans"]], "to_json() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.to_json"]], "transmission() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.transmission"]], "transmission_bulk() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.transmission_bulk"]], "transmission_eig() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.transmission_eig"]], "vector_current() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.vector_current"]], "vector_transmission() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.vector_transmission"]], "wk (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.wk"]], "wkpt (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.wkpt"]], "write() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.write"]], "write_tbtav() (sisl.io.tbtrans.tbtncsiletbtrans method)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.write_tbtav"]], "xa (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.xa"]], "xyz (sisl.io.tbtrans.tbtncsiletbtrans property)": [[212, "sisl.io.tbtrans.tbtncSileTBtrans.xyz"]], "ados() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.ADOS"]], "adensity_matrix() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.Adensity_matrix"]], "bdos() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.BDOS"]], "dos() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.DOS"]], "e (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.E"]], "eindex() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.Eindex"]], "__init__() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.__init__"]], "a2p() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.a2p"]], "a_buf (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.a_buf"]], "a_dev (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.a_dev"]], "a_down() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.a_down"]], "a_elec() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.a_elec"]], "atom_acohp() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.atom_ACOHP"]], "atom_acoop() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.atom_ACOOP"]], "atom_cohp (sisl.io.tbtrans.tbtprojncsiletbtrans attribute)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.atom_COHP"]], "atom_coop (sisl.io.tbtrans.tbtprojncsiletbtrans attribute)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.atom_COOP"]], "atom_current() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.atom_current"]], "atom_transmission() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.atom_transmission"]], "base_file (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.base_file"]], "bloch() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.bloch"]], "bond_current() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.bond_current"]], "bond_transmission() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.bond_transmission"]], "btd() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.btd"]], "cell (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.cell"]], "chemical_potential() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.chemical_potential"]], "close() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.close"]], "current (sisl.io.tbtrans.tbtprojncsiletbtrans attribute)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.current"]], "current_parameter (sisl.io.tbtrans.tbtprojncsiletbtrans attribute)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.current_parameter"]], "density_matrix (sisl.io.tbtrans.tbtprojncsiletbtrans attribute)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.density_matrix"]], "dir_file() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.dir_file"]], "eigenstate() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.eigenstate"]], "elecs (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.elecs"]], "electron_temperature() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.electron_temperature"]], "eta() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.eta"]], "fano (sisl.io.tbtrans.tbtprojncsiletbtrans attribute)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.fano"]], "file (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.file"]], "geom (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.geom"]], "geometry (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.geometry"]], "info() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.info"]], "iter() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.iter"]], "k (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.k"]], "kt() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.kT"]], "kindex() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.kindex"]], "kpt (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.kpt"]], "lasto (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.lasto"]], "molecules (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.molecules"]], "mu() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.mu"]], "ne (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.nE"], [213, "sisl.io.tbtrans.tbtprojncSileTBtrans.ne"]], "n_btd() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.n_btd"]], "na (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.na"]], "na_b (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.na_b"]], "na_buffer (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.na_buffer"]], "na_d (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.na_d"]], "na_dev (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.na_dev"]], "na_down() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.na_down"]], "na_u (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.na_u"]], "nk (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.nk"]], "nkpt (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.nkpt"]], "no (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.no"]], "no_d (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.no_d"]], "no_down() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.no_down"]], "no_e() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.no_e"]], "no_u (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.no_u"]], "noise_power (sisl.io.tbtrans.tbtprojncsiletbtrans attribute)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.noise_power"]], "norm() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.norm"]], "o2p() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.o2p"]], "o_dev (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.o_dev"]], "orbital_acohp() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.orbital_ACOHP"]], "orbital_acoop() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.orbital_ACOOP"]], "orbital_cohp (sisl.io.tbtrans.tbtprojncsiletbtrans attribute)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.orbital_COHP"]], "orbital_coop (sisl.io.tbtrans.tbtprojncsiletbtrans attribute)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.orbital_COOP"]], "orbital_current() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.orbital_current"]], "orbital_transmission() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.orbital_transmission"]], "pivot() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.pivot"]], "pivot_down() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.pivot_down"]], "plot (sisl.io.tbtrans.tbtprojncsiletbtrans attribute)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.plot"]], "projections() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.projections"]], "read() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.read"]], "read_data() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.read_data"]], "read_geometry() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.read_geometry"]], "read_supercell() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.read_supercell"]], "reflection() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.reflection"]], "shot_noise (sisl.io.tbtrans.tbtprojncsiletbtrans attribute)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.shot_noise"]], "sparse_atom_to_vector() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.sparse_atom_to_vector"]], "sparse_orbital_to_atom() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.sparse_orbital_to_atom"]], "sparse_orbital_to_scalar() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.sparse_orbital_to_scalar"]], "sparse_orbital_to_vector() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.sparse_orbital_to_vector"]], "tbtprojncsiletbtrans (class in sisl.io.tbtrans)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans"]], "to_json() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.to_json"]], "transmission() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.transmission"]], "transmission_bulk() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.transmission_bulk"]], "transmission_eig() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.transmission_eig"]], "vector_current() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.vector_current"]], "vector_transmission() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.vector_transmission"]], "wk (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.wk"]], "wkpt (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.wkpt"]], "write() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.write"]], "write_tbtav() (sisl.io.tbtrans.tbtprojncsiletbtrans method)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.write_tbtav"]], "xa (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.xa"]], "xyz (sisl.io.tbtrans.tbtprojncsiletbtrans property)": [[213, "sisl.io.tbtrans.tbtprojncSileTBtrans.xyz"]], "e (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.E"]], "eindex() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.Eindex"]], "__init__() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.__init__"]], "a2p() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.a2p"]], "a_buf (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.a_buf"]], "a_dev (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.a_dev"]], "a_down() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.a_down"]], "a_elec() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.a_elec"]], "base_file (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.base_file"]], "bloch() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.bloch"]], "broadening_matrix() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.broadening_matrix"]], "btd() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.btd"]], "cell (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.cell"]], "chemical_potential() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.chemical_potential"]], "close() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.close"]], "dir_file() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.dir_file"]], "elecs (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.elecs"]], "electron_temperature() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.electron_temperature"]], "eta() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.eta"]], "file (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.file"]], "geom (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.geom"]], "geometry (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.geometry"]], "info() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.info"]], "iter() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.iter"]], "k (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.k"]], "kt() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.kT"]], "kindex() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.kindex"]], "kpt (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.kpt"]], "lasto (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.lasto"]], "mu() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.mu"]], "ne (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.nE"], [214, "sisl.io.tbtrans.tbtsencSileTBtrans.ne"]], "n_btd() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.n_btd"]], "na (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.na"]], "na_b (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.na_b"]], "na_buffer (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.na_buffer"]], "na_d (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.na_d"]], "na_dev (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.na_dev"]], "na_down() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.na_down"]], "na_u (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.na_u"]], "nk (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.nk"]], "nkpt (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.nkpt"]], "no (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.no"]], "no_d (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.no_d"]], "no_down() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.no_down"]], "no_e() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.no_e"]], "no_u (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.no_u"]], "o2p() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.o2p"]], "o_dev (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.o_dev"]], "pivot() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.pivot"]], "pivot_down() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.pivot_down"]], "plot (sisl.io.tbtrans.tbtsencsiletbtrans attribute)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.plot"]], "read() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.read"]], "read_geometry() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.read_geometry"]], "read_supercell() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.read_supercell"]], "self_energy() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.self_energy"]], "self_energy_average() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.self_energy_average"]], "tbtsencsiletbtrans (class in sisl.io.tbtrans)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans"]], "to_json() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.to_json"]], "wk (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.wk"]], "wkpt (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.wkpt"]], "write() (sisl.io.tbtrans.tbtsencsiletbtrans method)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.write"]], "xa (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.xa"]], "xyz (sisl.io.tbtrans.tbtsencsiletbtrans property)": [[214, "sisl.io.tbtrans.tbtsencSileTBtrans.xyz"]], "silebinvasp (class in sisl.io.vasp)": [[215, "sisl.io.vasp.SileBinVASP"]], "__init__() (sisl.io.vasp.silebinvasp method)": [[215, "sisl.io.vasp.SileBinVASP.__init__"]], "base_file (sisl.io.vasp.silebinvasp property)": [[215, "sisl.io.vasp.SileBinVASP.base_file"]], "dir_file() (sisl.io.vasp.silebinvasp method)": [[215, "sisl.io.vasp.SileBinVASP.dir_file"]], "file (sisl.io.vasp.silebinvasp property)": [[215, "sisl.io.vasp.SileBinVASP.file"]], "geometry_group() (sisl.io.vasp.silebinvasp static method)": [[215, "sisl.io.vasp.SileBinVASP.geometry_group"]], "read() (sisl.io.vasp.silebinvasp method)": [[215, "sisl.io.vasp.SileBinVASP.read"]], "to_json() (sisl.io.vasp.silebinvasp method)": [[215, "sisl.io.vasp.SileBinVASP.to_json"]], "write() (sisl.io.vasp.silebinvasp method)": [[215, "sisl.io.vasp.SileBinVASP.write"]], "silevasp (class in sisl.io.vasp)": [[216, "sisl.io.vasp.SileVASP"]], "__init__() (sisl.io.vasp.silevasp method)": [[216, "sisl.io.vasp.SileVASP.__init__"]], "base_file (sisl.io.vasp.silevasp property)": [[216, "sisl.io.vasp.SileVASP.base_file"]], "close() (sisl.io.vasp.silevasp method)": [[216, "sisl.io.vasp.SileVASP.close"]], "dir_file() (sisl.io.vasp.silevasp method)": [[216, "sisl.io.vasp.SileVASP.dir_file"]], "file (sisl.io.vasp.silevasp property)": [[216, "sisl.io.vasp.SileVASP.file"]], "geometry_group() (sisl.io.vasp.silevasp static method)": [[216, "sisl.io.vasp.SileVASP.geometry_group"]], "read() (sisl.io.vasp.silevasp method)": [[216, "sisl.io.vasp.SileVASP.read"]], "to_json() (sisl.io.vasp.silevasp method)": [[216, "sisl.io.vasp.SileVASP.to_json"]], "write() (sisl.io.vasp.silevasp method)": [[216, "sisl.io.vasp.SileVASP.write"]], "__init__() (sisl.io.vasp.carsilevasp method)": [[217, "sisl.io.vasp.carSileVASP.__init__"]], "base_file (sisl.io.vasp.carsilevasp property)": [[217, "sisl.io.vasp.carSileVASP.base_file"]], "carsilevasp (class in sisl.io.vasp)": [[217, "sisl.io.vasp.carSileVASP"]], "close() (sisl.io.vasp.carsilevasp method)": [[217, "sisl.io.vasp.carSileVASP.close"]], "dir_file() (sisl.io.vasp.carsilevasp method)": [[217, "sisl.io.vasp.carSileVASP.dir_file"]], "file (sisl.io.vasp.carsilevasp property)": [[217, "sisl.io.vasp.carSileVASP.file"]], "geometry_group() (sisl.io.vasp.carsilevasp static method)": [[217, "sisl.io.vasp.carSileVASP.geometry_group"]], "plot (sisl.io.vasp.carsilevasp attribute)": [[217, "sisl.io.vasp.carSileVASP.plot"]], "read() (sisl.io.vasp.carsilevasp method)": [[217, "sisl.io.vasp.carSileVASP.read"]], "read_geometry() (sisl.io.vasp.carsilevasp method)": [[217, "sisl.io.vasp.carSileVASP.read_geometry"]], "read_supercell() (sisl.io.vasp.carsilevasp method)": [[217, "sisl.io.vasp.carSileVASP.read_supercell"]], "to_json() (sisl.io.vasp.carsilevasp method)": [[217, "sisl.io.vasp.carSileVASP.to_json"]], "write() (sisl.io.vasp.carsilevasp method)": [[217, "sisl.io.vasp.carSileVASP.write"]], "write_geometry() (sisl.io.vasp.carsilevasp method)": [[217, "sisl.io.vasp.carSileVASP.write_geometry"]], "__init__() (sisl.io.vasp.chgsilevasp method)": [[218, "sisl.io.vasp.chgSileVASP.__init__"]], "base_file (sisl.io.vasp.chgsilevasp property)": [[218, "sisl.io.vasp.chgSileVASP.base_file"]], "chgsilevasp (class in sisl.io.vasp)": [[218, "sisl.io.vasp.chgSileVASP"]], "close() (sisl.io.vasp.chgsilevasp method)": [[218, "sisl.io.vasp.chgSileVASP.close"]], "dir_file() (sisl.io.vasp.chgsilevasp method)": [[218, "sisl.io.vasp.chgSileVASP.dir_file"]], "file (sisl.io.vasp.chgsilevasp property)": [[218, "sisl.io.vasp.chgSileVASP.file"]], "geometry_group() (sisl.io.vasp.chgsilevasp static method)": [[218, "sisl.io.vasp.chgSileVASP.geometry_group"]], "plot (sisl.io.vasp.chgsilevasp attribute)": [[218, "sisl.io.vasp.chgSileVASP.plot"]], "read() (sisl.io.vasp.chgsilevasp method)": [[218, "sisl.io.vasp.chgSileVASP.read"]], "read_geometry() (sisl.io.vasp.chgsilevasp method)": [[218, "sisl.io.vasp.chgSileVASP.read_geometry"]], "read_grid() (sisl.io.vasp.chgsilevasp method)": [[218, "sisl.io.vasp.chgSileVASP.read_grid"]], "read_supercell() (sisl.io.vasp.chgsilevasp method)": [[218, "sisl.io.vasp.chgSileVASP.read_supercell"]], "to_json() (sisl.io.vasp.chgsilevasp method)": [[218, "sisl.io.vasp.chgSileVASP.to_json"]], "write() (sisl.io.vasp.chgsilevasp method)": [[218, "sisl.io.vasp.chgSileVASP.write"]], "write_geometry() (sisl.io.vasp.chgsilevasp method)": [[218, "sisl.io.vasp.chgSileVASP.write_geometry"]], "__init__() (sisl.io.vasp.doscarsilevasp method)": [[219, "sisl.io.vasp.doscarSileVASP.__init__"]], "base_file (sisl.io.vasp.doscarsilevasp property)": [[219, "sisl.io.vasp.doscarSileVASP.base_file"]], "close() (sisl.io.vasp.doscarsilevasp method)": [[219, "sisl.io.vasp.doscarSileVASP.close"]], "dir_file() (sisl.io.vasp.doscarsilevasp method)": [[219, "sisl.io.vasp.doscarSileVASP.dir_file"]], "doscarsilevasp (class in sisl.io.vasp)": [[219, "sisl.io.vasp.doscarSileVASP"]], "file (sisl.io.vasp.doscarsilevasp property)": [[219, "sisl.io.vasp.doscarSileVASP.file"]], "geometry_group() (sisl.io.vasp.doscarsilevasp static method)": [[219, "sisl.io.vasp.doscarSileVASP.geometry_group"]], "read() (sisl.io.vasp.doscarsilevasp method)": [[219, "sisl.io.vasp.doscarSileVASP.read"]], "read_data() (sisl.io.vasp.doscarsilevasp method)": [[219, "sisl.io.vasp.doscarSileVASP.read_data"]], "read_fermi_level() (sisl.io.vasp.doscarsilevasp method)": [[219, "sisl.io.vasp.doscarSileVASP.read_fermi_level"]], "to_json() (sisl.io.vasp.doscarsilevasp method)": [[219, "sisl.io.vasp.doscarSileVASP.to_json"]], "write() (sisl.io.vasp.doscarsilevasp method)": [[219, "sisl.io.vasp.doscarSileVASP.write"]], "__init__() (sisl.io.vasp.eigenvalsilevasp method)": [[220, "sisl.io.vasp.eigenvalSileVASP.__init__"]], "base_file (sisl.io.vasp.eigenvalsilevasp property)": [[220, "sisl.io.vasp.eigenvalSileVASP.base_file"]], "close() (sisl.io.vasp.eigenvalsilevasp method)": [[220, "sisl.io.vasp.eigenvalSileVASP.close"]], "dir_file() (sisl.io.vasp.eigenvalsilevasp method)": [[220, "sisl.io.vasp.eigenvalSileVASP.dir_file"]], "eigenvalsilevasp (class in sisl.io.vasp)": [[220, "sisl.io.vasp.eigenvalSileVASP"]], "file (sisl.io.vasp.eigenvalsilevasp property)": [[220, "sisl.io.vasp.eigenvalSileVASP.file"]], "geometry_group() (sisl.io.vasp.eigenvalsilevasp static method)": [[220, "sisl.io.vasp.eigenvalSileVASP.geometry_group"]], "read() (sisl.io.vasp.eigenvalsilevasp method)": [[220, "sisl.io.vasp.eigenvalSileVASP.read"]], "read_data() (sisl.io.vasp.eigenvalsilevasp method)": [[220, "sisl.io.vasp.eigenvalSileVASP.read_data"]], "to_json() (sisl.io.vasp.eigenvalsilevasp method)": [[220, "sisl.io.vasp.eigenvalSileVASP.to_json"]], "write() (sisl.io.vasp.eigenvalsilevasp method)": [[220, "sisl.io.vasp.eigenvalSileVASP.write"]], "__init__() (sisl.io.vasp.locpotsilevasp method)": [[221, "sisl.io.vasp.locpotSileVASP.__init__"]], "base_file (sisl.io.vasp.locpotsilevasp property)": [[221, "sisl.io.vasp.locpotSileVASP.base_file"]], "close() (sisl.io.vasp.locpotsilevasp method)": [[221, "sisl.io.vasp.locpotSileVASP.close"]], "dir_file() (sisl.io.vasp.locpotsilevasp method)": [[221, "sisl.io.vasp.locpotSileVASP.dir_file"]], "file (sisl.io.vasp.locpotsilevasp property)": [[221, "sisl.io.vasp.locpotSileVASP.file"]], "geometry_group() (sisl.io.vasp.locpotsilevasp static method)": [[221, "sisl.io.vasp.locpotSileVASP.geometry_group"]], "locpotsilevasp (class in sisl.io.vasp)": [[221, "sisl.io.vasp.locpotSileVASP"]], "plot (sisl.io.vasp.locpotsilevasp attribute)": [[221, "sisl.io.vasp.locpotSileVASP.plot"]], "read() (sisl.io.vasp.locpotsilevasp method)": [[221, "sisl.io.vasp.locpotSileVASP.read"]], "read_geometry() (sisl.io.vasp.locpotsilevasp method)": [[221, "sisl.io.vasp.locpotSileVASP.read_geometry"]], "read_grid() (sisl.io.vasp.locpotsilevasp method)": [[221, "sisl.io.vasp.locpotSileVASP.read_grid"]], "read_supercell() (sisl.io.vasp.locpotsilevasp method)": [[221, "sisl.io.vasp.locpotSileVASP.read_supercell"]], "to_json() (sisl.io.vasp.locpotsilevasp method)": [[221, "sisl.io.vasp.locpotSileVASP.to_json"]], "write() (sisl.io.vasp.locpotsilevasp method)": [[221, "sisl.io.vasp.locpotSileVASP.write"]], "write_geometry() (sisl.io.vasp.locpotsilevasp method)": [[221, "sisl.io.vasp.locpotSileVASP.write_geometry"]], "__init__() (sisl.io.vasp.outsilevasp method)": [[222, "sisl.io.vasp.outSileVASP.__init__"]], "accuracy_reached() (sisl.io.vasp.outsilevasp method)": [[222, "sisl.io.vasp.outSileVASP.accuracy_reached"]], "base_file (sisl.io.vasp.outsilevasp property)": [[222, "sisl.io.vasp.outSileVASP.base_file"]], "close() (sisl.io.vasp.outsilevasp method)": [[222, "sisl.io.vasp.outSileVASP.close"]], "completed() (sisl.io.vasp.outsilevasp method)": [[222, "sisl.io.vasp.outSileVASP.completed"]], "cpu_time() (sisl.io.vasp.outsilevasp method)": [[222, "sisl.io.vasp.outSileVASP.cpu_time"]], "dir_file() (sisl.io.vasp.outsilevasp method)": [[222, "sisl.io.vasp.outSileVASP.dir_file"]], "file (sisl.io.vasp.outsilevasp property)": [[222, "sisl.io.vasp.outSileVASP.file"]], "geometry_group() (sisl.io.vasp.outsilevasp static method)": [[222, "sisl.io.vasp.outSileVASP.geometry_group"]], "outsilevasp (class in sisl.io.vasp)": [[222, "sisl.io.vasp.outSileVASP"]], "read() (sisl.io.vasp.outsilevasp method)": [[222, "sisl.io.vasp.outSileVASP.read"]], "read_energy() (sisl.io.vasp.outsilevasp method)": [[222, "sisl.io.vasp.outSileVASP.read_energy"]], "to_json() (sisl.io.vasp.outsilevasp method)": [[222, "sisl.io.vasp.outSileVASP.to_json"]], "write() (sisl.io.vasp.outsilevasp method)": [[222, "sisl.io.vasp.outSileVASP.write"]], "silebinwannier90 (class in sisl.io.wannier90)": [[223, "sisl.io.wannier90.SileBinWannier90"]], "__init__() (sisl.io.wannier90.silebinwannier90 method)": [[223, "sisl.io.wannier90.SileBinWannier90.__init__"]], "base_file (sisl.io.wannier90.silebinwannier90 property)": [[223, "sisl.io.wannier90.SileBinWannier90.base_file"]], "dir_file() (sisl.io.wannier90.silebinwannier90 method)": [[223, "sisl.io.wannier90.SileBinWannier90.dir_file"]], "file (sisl.io.wannier90.silebinwannier90 property)": [[223, "sisl.io.wannier90.SileBinWannier90.file"]], "read() (sisl.io.wannier90.silebinwannier90 method)": [[223, "sisl.io.wannier90.SileBinWannier90.read"]], "to_json() (sisl.io.wannier90.silebinwannier90 method)": [[223, "sisl.io.wannier90.SileBinWannier90.to_json"]], "write() (sisl.io.wannier90.silebinwannier90 method)": [[223, "sisl.io.wannier90.SileBinWannier90.write"]], "silewannier90 (class in sisl.io.wannier90)": [[224, "sisl.io.wannier90.SileWannier90"]], "__init__() (sisl.io.wannier90.silewannier90 method)": [[224, "sisl.io.wannier90.SileWannier90.__init__"]], "base_file (sisl.io.wannier90.silewannier90 property)": [[224, "sisl.io.wannier90.SileWannier90.base_file"]], "close() (sisl.io.wannier90.silewannier90 method)": [[224, "sisl.io.wannier90.SileWannier90.close"]], "dir_file() (sisl.io.wannier90.silewannier90 method)": [[224, "sisl.io.wannier90.SileWannier90.dir_file"]], "file (sisl.io.wannier90.silewannier90 property)": [[224, "sisl.io.wannier90.SileWannier90.file"]], "read() (sisl.io.wannier90.silewannier90 method)": [[224, "sisl.io.wannier90.SileWannier90.read"]], "to_json() (sisl.io.wannier90.silewannier90 method)": [[224, "sisl.io.wannier90.SileWannier90.to_json"]], "write() (sisl.io.wannier90.silewannier90 method)": [[224, "sisl.io.wannier90.SileWannier90.write"]], "__init__() (sisl.io.wannier90.winsilewannier90 method)": [[225, "sisl.io.wannier90.winSileWannier90.__init__"]], "base_file (sisl.io.wannier90.winsilewannier90 property)": [[225, "sisl.io.wannier90.winSileWannier90.base_file"]], "close() (sisl.io.wannier90.winsilewannier90 method)": [[225, "sisl.io.wannier90.winSileWannier90.close"]], "dir_file() (sisl.io.wannier90.winsilewannier90 method)": [[225, "sisl.io.wannier90.winSileWannier90.dir_file"]], "file (sisl.io.wannier90.winsilewannier90 property)": [[225, "sisl.io.wannier90.winSileWannier90.file"]], "plot (sisl.io.wannier90.winsilewannier90 attribute)": [[225, "sisl.io.wannier90.winSileWannier90.plot"]], "read() (sisl.io.wannier90.winsilewannier90 method)": [[225, "sisl.io.wannier90.winSileWannier90.read"]], "read_geometry() (sisl.io.wannier90.winsilewannier90 method)": [[225, "sisl.io.wannier90.winSileWannier90.read_geometry"]], "read_hamiltonian() (sisl.io.wannier90.winsilewannier90 method)": [[225, "sisl.io.wannier90.winSileWannier90.read_hamiltonian"]], "read_supercell() (sisl.io.wannier90.winsilewannier90 method)": [[225, "sisl.io.wannier90.winSileWannier90.read_supercell"]], "to_json() (sisl.io.wannier90.winsilewannier90 method)": [[225, "sisl.io.wannier90.winSileWannier90.to_json"]], "winsilewannier90 (class in sisl.io.wannier90)": [[225, "sisl.io.wannier90.winSileWannier90"]], "write() (sisl.io.wannier90.winsilewannier90 method)": [[225, "sisl.io.wannier90.winSileWannier90.write"]], "write_geometry() (sisl.io.wannier90.winsilewannier90 method)": [[225, "sisl.io.wannier90.winSileWannier90.write_geometry"]], "write_supercell() (sisl.io.wannier90.winsilewannier90 method)": [[225, "sisl.io.wannier90.winSileWannier90.write_supercell"]], "__init__() (sisl.io.xsfsile method)": [[226, "sisl.io.xsfSile.__init__"]], "base_file (sisl.io.xsfsile property)": [[226, "sisl.io.xsfSile.base_file"]], "close() (sisl.io.xsfsile method)": [[226, "sisl.io.xsfSile.close"]], "dir_file() (sisl.io.xsfsile method)": [[226, "sisl.io.xsfSile.dir_file"]], "file (sisl.io.xsfsile property)": [[226, "sisl.io.xsfSile.file"]], "plot (sisl.io.xsfsile attribute)": [[226, "sisl.io.xsfSile.plot"]], "read() (sisl.io.xsfsile method)": [[226, "sisl.io.xsfSile.read"]], "read_geometry() (sisl.io.xsfsile method)": [[226, "sisl.io.xsfSile.read_geometry"]], "to_json() (sisl.io.xsfsile method)": [[226, "sisl.io.xsfSile.to_json"]], "write() (sisl.io.xsfsile method)": [[226, "sisl.io.xsfSile.write"]], "write_geometry() (sisl.io.xsfsile method)": [[226, "sisl.io.xsfSile.write_geometry"]], "write_grid() (sisl.io.xsfsile method)": [[226, "sisl.io.xsfSile.write_grid"]], "write_supercell() (sisl.io.xsfsile method)": [[226, "sisl.io.xsfSile.write_supercell"]], "xsfsile (class in sisl.io)": [[226, "sisl.io.xsfSile"]], "__init__() (sisl.io.xyzsile method)": [[227, "sisl.io.xyzSile.__init__"]], "base_file (sisl.io.xyzsile property)": [[227, "sisl.io.xyzSile.base_file"]], "close() (sisl.io.xyzsile method)": [[227, "sisl.io.xyzSile.close"]], "dir_file() (sisl.io.xyzsile method)": [[227, "sisl.io.xyzSile.dir_file"]], "file (sisl.io.xyzsile property)": [[227, "sisl.io.xyzSile.file"]], "plot (sisl.io.xyzsile attribute)": [[227, "sisl.io.xyzSile.plot"]], "read() (sisl.io.xyzsile method)": [[227, "sisl.io.xyzSile.read"]], "read_geometry() (sisl.io.xyzsile method)": [[227, "sisl.io.xyzSile.read_geometry"]], "to_json() (sisl.io.xyzsile method)": [[227, "sisl.io.xyzSile.to_json"]], "write() (sisl.io.xyzsile method)": [[227, "sisl.io.xyzSile.write"]], "write_geometry() (sisl.io.xyzsile method)": [[227, "sisl.io.xyzSile.write_geometry"]], "xyzsile (class in sisl.io)": [[227, "sisl.io.xyzSile"]], "sisl.io.gulp": [[229, "module-sisl.io.gulp"]], "sisl.io": [[230, "module-sisl.io"]], "sisl.io.openmx": [[231, "module-sisl.io.openmx"]], "sisl.io.orca": [[232, "module-sisl.io.orca"]], "sisl.io.scaleup": [[233, "module-sisl.io.scaleup"]], "sisl.io.siesta": [[234, "module-sisl.io.siesta"]], "sisl.io.tbtrans": [[235, "module-sisl.io.tbtrans"]], "sisl.io.vasp": [[236, "module-sisl.io.vasp"]], "sisl.io.wannier90": [[237, "module-sisl.io.wannier90"]], "sisl.mixing": [[238, "module-sisl.mixing"]], "sisl.physics": [[239, "module-sisl.physics"]], "sisl.physics.electron": [[242, "module-sisl.physics.electron"]], "sisl.physics.phonon": [[244, "module-sisl.physics.phonon"]], "sisl.constant": [[246, "module-sisl.constant"]], "sisl.unit": [[247, "module-sisl.unit"]], "sisl.unit.siesta": [[247, "module-sisl.unit.siesta"]], "sisl.utils": [[248, "module-sisl.utils"]], "sisl.shape": [[250, "module-sisl.shape"]], "animation (class in sisl.viz)": [[251, "sisl.viz.Animation"]], "__init__() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.__init__"]], "add_children() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.add_children"]], "add_shortcut() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.add_shortcut"]], "animated() (sisl.viz.animation class method)": [[251, "sisl.viz.Animation.animated"]], "backends (sisl.viz.animation attribute)": [[251, "sisl.viz.Animation.backends"]], "call_shortcut() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.call_shortcut"]], "clone() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.clone"]], "copy() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.copy"]], "dispatch_event() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.dispatch_event"]], "entry_points (sisl.viz.animation attribute)": [[251, "sisl.viz.Animation.entry_points"]], "entry_points_help() (sisl.viz.animation class method)": [[251, "sisl.viz.Animation.entry_points_help"]], "follow() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.follow"]], "from_plotly() (sisl.viz.animation class method)": [[251, "sisl.viz.Animation.from_plotly"]], "get_class_param() (sisl.viz.animation class method)": [[251, "sisl.viz.Animation.get_class_param"]], "get_figure() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.get_figure"]], "get_figure_methods (sisl.viz.animation property)": [[251, "sisl.viz.Animation.get_figure_methods"]], "get_param() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.get_param"]], "get_setting() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.get_setting"]], "get_settings_group() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.get_settings_group"]], "get_sile() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.get_sile"]], "has_shortcut() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.has_shortcut"]], "has_these_settings() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.has_these_settings"]], "init_all_plots() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.init_all_plots"]], "init_settings() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.init_settings"]], "insert_childplot() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.insert_childplot"]], "listen() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.listen"]], "merge() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.merge"]], "modify_param() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.modify_param"]], "multiple() (sisl.viz.animation class method)": [[251, "sisl.viz.Animation.multiple"]], "plot_name() (sisl.viz.animation class method)": [[251, "sisl.viz.Animation.plot_name"]], "read_data() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.read_data"]], "read_data_methods (sisl.viz.animation property)": [[251, "sisl.viz.Animation.read_data_methods"]], "remove_shortcut() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.remove_shortcut"]], "save() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.save"]], "set_children() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.set_children"]], "set_data() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.set_data"]], "set_data_methods (sisl.viz.animation property)": [[251, "sisl.viz.Animation.set_data_methods"]], "set_shared_attr() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.set_shared_attr"]], "settings (sisl.viz.animation property)": [[251, "sisl.viz.Animation.settings"]], "setup_hamiltonian() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.setup_hamiltonian"]], "shared_attr() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.shared_attr"]], "shortcut() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.shortcut"]], "shortcuts_for_json (sisl.viz.animation property)": [[251, "sisl.viz.Animation.shortcuts_for_json"]], "shortcuts_summary() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.shortcuts_summary"]], "show() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.show"]], "stop_listening() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.stop_listening"]], "subplots() (sisl.viz.animation class method)": [[251, "sisl.viz.Animation.subplots"]], "suffix() (sisl.viz.animation class method)": [[251, "sisl.viz.Animation.suffix"]], "undo_setting() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.undo_setting"]], "undo_settings() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.undo_settings"]], "undo_settings_group() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.undo_settings_group"]], "update_children_settings() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.update_children_settings"]], "update_settings() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.update_settings"]], "updates_available() (sisl.viz.animation method)": [[251, "sisl.viz.Animation.updates_available"]], "multipleplot (class in sisl.viz)": [[252, "sisl.viz.MultiplePlot"]], "__init__() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.__init__"]], "add_children() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.add_children"]], "add_shortcut() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.add_shortcut"]], "animated() (sisl.viz.multipleplot class method)": [[252, "sisl.viz.MultiplePlot.animated"]], "backends (sisl.viz.multipleplot attribute)": [[252, "sisl.viz.MultiplePlot.backends"]], "call_shortcut() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.call_shortcut"]], "clone() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.clone"]], "copy() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.copy"]], "dispatch_event() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.dispatch_event"]], "entry_points (sisl.viz.multipleplot attribute)": [[252, "sisl.viz.MultiplePlot.entry_points"]], "entry_points_help() (sisl.viz.multipleplot class method)": [[252, "sisl.viz.MultiplePlot.entry_points_help"]], "follow() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.follow"]], "from_plotly() (sisl.viz.multipleplot class method)": [[252, "sisl.viz.MultiplePlot.from_plotly"]], "get_class_param() (sisl.viz.multipleplot class method)": [[252, "sisl.viz.MultiplePlot.get_class_param"]], "get_figure() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.get_figure"]], "get_figure_methods (sisl.viz.multipleplot property)": [[252, "sisl.viz.MultiplePlot.get_figure_methods"]], "get_param() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.get_param"]], "get_setting() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.get_setting"]], "get_settings_group() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.get_settings_group"]], "get_sile() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.get_sile"]], "has_shortcut() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.has_shortcut"]], "has_these_settings() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.has_these_settings"]], "init_all_plots() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.init_all_plots"]], "init_settings() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.init_settings"]], "insert_childplot() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.insert_childplot"]], "listen() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.listen"]], "merge() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.merge"]], "modify_param() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.modify_param"]], "multiple() (sisl.viz.multipleplot class method)": [[252, "sisl.viz.MultiplePlot.multiple"]], "plot_name() (sisl.viz.multipleplot class method)": [[252, "sisl.viz.MultiplePlot.plot_name"]], "read_data() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.read_data"]], "read_data_methods (sisl.viz.multipleplot property)": [[252, "sisl.viz.MultiplePlot.read_data_methods"]], "remove_shortcut() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.remove_shortcut"]], "save() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.save"]], "set_children() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.set_children"]], "set_data() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.set_data"]], "set_data_methods (sisl.viz.multipleplot property)": [[252, "sisl.viz.MultiplePlot.set_data_methods"]], "set_shared_attr() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.set_shared_attr"]], "settings (sisl.viz.multipleplot property)": [[252, "sisl.viz.MultiplePlot.settings"]], "setup_hamiltonian() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.setup_hamiltonian"]], "shared_attr() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.shared_attr"]], "shortcut() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.shortcut"]], "shortcuts_for_json (sisl.viz.multipleplot property)": [[252, "sisl.viz.MultiplePlot.shortcuts_for_json"]], "shortcuts_summary() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.shortcuts_summary"]], "show() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.show"]], "stop_listening() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.stop_listening"]], "subplots() (sisl.viz.multipleplot class method)": [[252, "sisl.viz.MultiplePlot.subplots"]], "suffix() (sisl.viz.multipleplot class method)": [[252, "sisl.viz.MultiplePlot.suffix"]], "undo_setting() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.undo_setting"]], "undo_settings() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.undo_settings"]], "undo_settings_group() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.undo_settings_group"]], "update_children_settings() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.update_children_settings"]], "update_settings() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.update_settings"]], "updates_available() (sisl.viz.multipleplot method)": [[252, "sisl.viz.MultiplePlot.updates_available"]], "plot (class in sisl.viz)": [[253, "sisl.viz.Plot"]], "__init__() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.__init__"]], "add_shortcut() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.add_shortcut"]], "animated() (sisl.viz.plot class method)": [[253, "sisl.viz.Plot.animated"]], "call_shortcut() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.call_shortcut"]], "clone() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.clone"]], "copy() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.copy"]], "dispatch_event() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.dispatch_event"]], "entry_points_help() (sisl.viz.plot class method)": [[253, "sisl.viz.Plot.entry_points_help"]], "follow() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.follow"]], "from_plotly() (sisl.viz.plot class method)": [[253, "sisl.viz.Plot.from_plotly"]], "get_class_param() (sisl.viz.plot class method)": [[253, "sisl.viz.Plot.get_class_param"]], "get_figure() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.get_figure"]], "get_figure_methods (sisl.viz.plot property)": [[253, "sisl.viz.Plot.get_figure_methods"]], "get_param() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.get_param"]], "get_setting() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.get_setting"]], "get_settings_group() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.get_settings_group"]], "get_sile() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.get_sile"]], "has_shortcut() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.has_shortcut"]], "has_these_settings() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.has_these_settings"]], "init_settings() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.init_settings"]], "listen() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.listen"]], "merge() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.merge"]], "modify_param() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.modify_param"]], "multiple() (sisl.viz.plot class method)": [[253, "sisl.viz.Plot.multiple"]], "paramgroups (sisl.viz.plot attribute)": [[253, "sisl.viz.Plot.paramGroups"]], "params (sisl.viz.plot attribute)": [[253, "sisl.viz.Plot.params"]], "plot_name() (sisl.viz.plot class method)": [[253, "sisl.viz.Plot.plot_name"]], "read_data() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.read_data"]], "read_data_methods (sisl.viz.plot property)": [[253, "sisl.viz.Plot.read_data_methods"]], "remove_shortcut() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.remove_shortcut"]], "save() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.save"]], "set_data() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.set_data"]], "set_data_methods (sisl.viz.plot property)": [[253, "sisl.viz.Plot.set_data_methods"]], "settings (sisl.viz.plot attribute)": [[253, "sisl.viz.Plot.settings"]], "settings (sisl.viz.plot property)": [[253, "id0"]], "setup_hamiltonian() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.setup_hamiltonian"]], "shortcut() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.shortcut"]], "shortcuts_for_json (sisl.viz.plot property)": [[253, "sisl.viz.Plot.shortcuts_for_json"]], "shortcuts_summary() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.shortcuts_summary"]], "show() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.show"]], "stop_listening() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.stop_listening"]], "subplots() (sisl.viz.plot class method)": [[253, "sisl.viz.Plot.subplots"]], "suffix() (sisl.viz.plot class method)": [[253, "sisl.viz.Plot.suffix"]], "undo_setting() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.undo_setting"]], "undo_settings() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.undo_settings"]], "undo_settings_group() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.undo_settings_group"]], "update_settings() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.update_settings"]], "updates_available() (sisl.viz.plot method)": [[253, "sisl.viz.Plot.updates_available"]], "subplots (class in sisl.viz)": [[254, "sisl.viz.SubPlots"]], "__init__() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.__init__"]], "add_children() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.add_children"]], "add_shortcut() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.add_shortcut"]], "animated() (sisl.viz.subplots class method)": [[254, "sisl.viz.SubPlots.animated"]], "backends (sisl.viz.subplots attribute)": [[254, "sisl.viz.SubPlots.backends"]], "call_shortcut() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.call_shortcut"]], "clone() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.clone"]], "copy() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.copy"]], "dispatch_event() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.dispatch_event"]], "entry_points (sisl.viz.subplots attribute)": [[254, "sisl.viz.SubPlots.entry_points"]], "entry_points_help() (sisl.viz.subplots class method)": [[254, "sisl.viz.SubPlots.entry_points_help"]], "follow() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.follow"]], "from_plotly() (sisl.viz.subplots class method)": [[254, "sisl.viz.SubPlots.from_plotly"]], "get_class_param() (sisl.viz.subplots class method)": [[254, "sisl.viz.SubPlots.get_class_param"]], "get_figure() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.get_figure"]], "get_figure_methods (sisl.viz.subplots property)": [[254, "sisl.viz.SubPlots.get_figure_methods"]], "get_param() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.get_param"]], "get_setting() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.get_setting"]], "get_settings_group() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.get_settings_group"]], "get_sile() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.get_sile"]], "has_shortcut() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.has_shortcut"]], "has_these_settings() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.has_these_settings"]], "init_all_plots() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.init_all_plots"]], "init_settings() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.init_settings"]], "insert_childplot() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.insert_childplot"]], "listen() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.listen"]], "merge() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.merge"]], "modify_param() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.modify_param"]], "multiple() (sisl.viz.subplots class method)": [[254, "sisl.viz.SubPlots.multiple"]], "plot_name() (sisl.viz.subplots class method)": [[254, "sisl.viz.SubPlots.plot_name"]], "read_data() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.read_data"]], "read_data_methods (sisl.viz.subplots property)": [[254, "sisl.viz.SubPlots.read_data_methods"]], "remove_shortcut() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.remove_shortcut"]], "save() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.save"]], "set_children() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.set_children"]], "set_data() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.set_data"]], "set_data_methods (sisl.viz.subplots property)": [[254, "sisl.viz.SubPlots.set_data_methods"]], "set_shared_attr() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.set_shared_attr"]], "settings (sisl.viz.subplots property)": [[254, "sisl.viz.SubPlots.settings"]], "setup_hamiltonian() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.setup_hamiltonian"]], "shared_attr() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.shared_attr"]], "shortcut() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.shortcut"]], "shortcuts_for_json (sisl.viz.subplots property)": [[254, "sisl.viz.SubPlots.shortcuts_for_json"]], "shortcuts_summary() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.shortcuts_summary"]], "show() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.show"]], "stop_listening() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.stop_listening"]], "subplots() (sisl.viz.subplots class method)": [[254, "sisl.viz.SubPlots.subplots"]], "suffix() (sisl.viz.subplots class method)": [[254, "sisl.viz.SubPlots.suffix"]], "undo_setting() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.undo_setting"]], "undo_settings() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.undo_settings"]], "undo_settings_group() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.undo_settings_group"]], "update_children_settings() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.update_children_settings"]], "update_settings() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.update_settings"]], "updates_available() (sisl.viz.subplots method)": [[254, "sisl.viz.SubPlots.updates_available"]], "sisl_toolbox.btd": [[292, "module-sisl_toolbox.btd"]], "devicegreen (class in sisl_toolbox.btd)": [[293, "sisl_toolbox.btd.DeviceGreen"]], "hk() (sisl_toolbox.btd.devicegreen method)": [[293, "sisl_toolbox.btd.DeviceGreen.Hk"]], "sk() (sisl_toolbox.btd.devicegreen method)": [[293, "sisl_toolbox.btd.DeviceGreen.Sk"]], "__init__() (sisl_toolbox.btd.devicegreen method)": [[293, "sisl_toolbox.btd.DeviceGreen.__init__"]], "eigenchannel() (sisl_toolbox.btd.devicegreen method)": [[293, "sisl_toolbox.btd.DeviceGreen.eigenchannel"]], "from_fdf() (sisl_toolbox.btd.devicegreen class method)": [[293, "sisl_toolbox.btd.DeviceGreen.from_fdf"]], "green() (sisl_toolbox.btd.devicegreen method)": [[293, "sisl_toolbox.btd.DeviceGreen.green"]], "reset() (sisl_toolbox.btd.devicegreen method)": [[293, "sisl_toolbox.btd.DeviceGreen.reset"]], "scattering_matrix() (sisl_toolbox.btd.devicegreen method)": [[293, "sisl_toolbox.btd.DeviceGreen.scattering_matrix"]], "scattering_state() (sisl_toolbox.btd.devicegreen method)": [[293, "sisl_toolbox.btd.DeviceGreen.scattering_state"]], "spectral() (sisl_toolbox.btd.devicegreen method)": [[293, "sisl_toolbox.btd.DeviceGreen.spectral"]], "downfoldselfenergy (class in sisl_toolbox.btd)": [[294, "sisl_toolbox.btd.DownfoldSelfEnergy"]], "__init__() (sisl_toolbox.btd.downfoldselfenergy method)": [[294, "sisl_toolbox.btd.DownfoldSelfEnergy.__init__"]], "broadening_matrix() (sisl_toolbox.btd.downfoldselfenergy method)": [[294, "sisl_toolbox.btd.DownfoldSelfEnergy.broadening_matrix"]], "se2broadening() (sisl_toolbox.btd.downfoldselfenergy static method)": [[294, "sisl_toolbox.btd.DownfoldSelfEnergy.se2broadening"]], "self_energy() (sisl_toolbox.btd.downfoldselfenergy method)": [[294, "sisl_toolbox.btd.DownfoldSelfEnergy.self_energy"]], "pivotselfenergy (class in sisl_toolbox.btd)": [[295, "sisl_toolbox.btd.PivotSelfEnergy"]], "__init__() (sisl_toolbox.btd.pivotselfenergy method)": [[295, "sisl_toolbox.btd.PivotSelfEnergy.__init__"]], "broadening_matrix() (sisl_toolbox.btd.pivotselfenergy method)": [[295, "sisl_toolbox.btd.PivotSelfEnergy.broadening_matrix"]], "se2broadening() (sisl_toolbox.btd.pivotselfenergy static method)": [[295, "sisl_toolbox.btd.PivotSelfEnergy.se2broadening"]], "self_energy() (sisl_toolbox.btd.pivotselfenergy method)": [[295, "sisl_toolbox.btd.PivotSelfEnergy.self_energy"]], "sisl_toolbox": [[296, "module-sisl_toolbox"]], "sisl_toolbox.siesta.atom": [[297, "module-sisl_toolbox.siesta.atom"]], "atominput (class in sisl_toolbox.siesta.atom)": [[298, "sisl_toolbox.siesta.atom.AtomInput"]], "__call__() (sisl_toolbox.siesta.atom.atominput method)": [[298, "sisl_toolbox.siesta.atom.AtomInput.__call__"]], "__init__() (sisl_toolbox.siesta.atom.atominput method)": [[298, "sisl_toolbox.siesta.atom.AtomInput.__init__"]], "ae() (sisl_toolbox.siesta.atom.atominput method)": [[298, "sisl_toolbox.siesta.atom.AtomInput.ae"]], "excite() (sisl_toolbox.siesta.atom.atominput method)": [[298, "sisl_toolbox.siesta.atom.AtomInput.excite"]], "from_input() (sisl_toolbox.siesta.atom.atominput class method)": [[298, "sisl_toolbox.siesta.atom.AtomInput.from_input"]], "from_yaml() (sisl_toolbox.siesta.atom.atominput class method)": [[298, "sisl_toolbox.siesta.atom.AtomInput.from_yaml"]], "pg() (sisl_toolbox.siesta.atom.atominput method)": [[298, "sisl_toolbox.siesta.atom.AtomInput.pg"]], "plot() (sisl_toolbox.siesta.atom.atominput method)": [[298, "sisl_toolbox.siesta.atom.AtomInput.plot"]], "write_all_electron() (sisl_toolbox.siesta.atom.atominput method)": [[298, "sisl_toolbox.siesta.atom.AtomInput.write_all_electron"]], "write_generation() (sisl_toolbox.siesta.atom.atominput method)": [[298, "sisl_toolbox.siesta.atom.AtomInput.write_generation"]], "write_header() (sisl_toolbox.siesta.atom.atominput method)": [[298, "sisl_toolbox.siesta.atom.AtomInput.write_header"]], "write_test() (sisl_toolbox.siesta.atom.atominput method)": [[298, "sisl_toolbox.siesta.atom.AtomInput.write_test"]], "solve_poisson() (in module sisl_toolbox.transiesta.poisson)": [[299, "sisl_toolbox.transiesta.poisson.solve_poisson"]], "sisl_toolbox.transiesta.poisson": [[300, "module-sisl_toolbox.transiesta.poisson"]]}})